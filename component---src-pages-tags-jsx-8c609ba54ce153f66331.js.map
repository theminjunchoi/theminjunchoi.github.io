{"version":3,"file":"component---src-pages-tags-jsx-8c609ba54ce153f66331.js","mappings":"mNAUA,MAAMA,EAAkBC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAVJ,CAAU,+CAM5BK,EAAcL,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAVJ,CAAU,0FAUxBM,EAAON,EAAAA,QAAOO,EAACL,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAARJ,CAAQ,oDAGVQ,GAASA,EAAMC,MAAMC,OAAOC,eAGjCC,EAAUZ,EAAAA,QAAOO,EAACL,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAARJ,CAAQ,uFAIbQ,GAASA,EAAMC,MAAMC,OAAOG,gBA0FvC,IA9EiBC,IAAmB,IAAlB,SAAEC,GAAUD,EAC5B,MAAM,EAACE,EAAU,EAACC,IAAgBC,EAAAA,EAAAA,UAAS,KACrC,EAACC,EAAY,EAACC,IAAkBF,EAAAA,EAAAA,UAAS,OAG/CG,EAAAA,EAAAA,YAAU,KAER,GAAsB,oBAAXC,OAAwB,CACjC,MAAMC,EAAeA,KACnBH,EAAeE,OAAOE,WAAW,EAQnC,OALAF,OAAOG,iBAAiB,SAAUF,GAGlCH,EAAeE,OAAOE,YAEf,IAAMF,OAAOI,oBAAoB,SAAUH,EACpD,IACC,IAEH,MAAMI,EAAiBC,KAAW,KA3BhCC,SAASC,gBAAgBC,aACvBF,SAASC,gBAAgBE,WAC3BH,SAASC,gBAAgBG,aAAe,KA0BTjB,EAAYD,EAASmB,QAClDC,YAAW,IAAMlB,EAAaD,EAAY,KAAK,IACjD,GACC,KAeH,OAbAK,EAAAA,EAAAA,YAAU,KACRC,OAAOG,iBAAiB,SAAUE,GAE3B,KACLL,OAAOI,oBAAoB,SAAUC,EAAe,IAErD,CAACX,EAAWD,KAEfM,EAAAA,EAAAA,YAAU,KACRJ,EAAa,GAAG,GACf,CAACF,IAGgB,OAAhBI,EAA6B,KAG/BiB,EAAAA,cAACrC,EAAe,KACbgB,EAASsB,MAAM,EAAGrB,GAAWsB,KAAI,CAACC,EAAMC,KACvC,MAAM,MAAEC,EAAK,YAAEC,EAAW,KAAEC,EAAI,KAAEC,GAASL,EAAKM,aAC1C,QAAEC,GAAYP,GACd,KAAEQ,GAASR,EAAKS,OAGhBC,EAAY9B,EAAc,IAAM,KAAO,KAE7C,OACEiB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAC/B,EAAW,CAAC6C,IAAKV,GAChBJ,EAAAA,cAACe,EAAAA,EAAK,CAACC,KAAMH,GACXb,EAAAA,cAACiB,EAAAA,KAAI,CAACC,GAAIP,GAAON,IAEnBL,EAAAA,cAAC9B,EAAI,KAAEqC,GACND,EACCN,EAAAA,cAACxB,EAAO,KAAE8B,GAEVN,EAAAA,cAACxB,EAAO,KAAEkC,GAGZV,EAAAA,cAACmB,EAAAA,EAAO,CAACC,QAASZ,KAGnB5B,EAAY,IAAMwB,GAAKzB,EAASmB,OAAS,IAAMM,GAC9CJ,EAAAA,cAACqB,EAAAA,EAAO,CAACC,GAAG,OAAOC,GAAG,SAEvB,IAGS,C,qECtHtB,MAAMC,EAAiB5D,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,eAAVJ,CAAU,8CAK3B6D,EAAU7D,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAAVJ,CAAU,6NAMJQ,GAClBA,EAAMsD,SACFtD,EAAMC,MAAMC,OAAOqD,sBACnBvD,EAAMC,MAAMC,OAAOsD,gBAChBxD,GACPA,EAAMsD,SACFtD,EAAMC,MAAMC,OAAOuD,gBACnBzD,EAAMC,MAAMC,OAAOwD,UAMH1D,GAClBA,EAAMsD,SACFtD,EAAMC,MAAMC,OAAOyD,6BACnB3D,EAAMC,MAAMC,OAAO0D,uBAIvBC,EAAcC,GACXA,EAAKC,QAAQ,OAAQ,KAoC9B,IAjCgBzD,IAAmC,IAAlC,QAAE0C,EAAO,MAAEgB,EAAK,SAAEV,GAAUhD,EAC3C,OAAK0C,EAEAgB,EAaHpC,EAAAA,cAACwB,EAAc,KACZJ,EAAQlB,KAAI,CAACmC,EAAKjC,IACjBJ,EAAAA,cAACiB,EAAAA,KAAI,CACHH,IAAKwB,KAAKC,UAAU,CAAEF,MAAKjC,MAC3Bc,GACEQ,IAAaW,EAAIG,WAAa,QAAU,WAAWC,mBAAmBJ,EAAIG,eAG5ExC,EAAAA,cAACyB,EAAO,CAACC,SAAUW,EAAIG,aAAed,GACnCO,EAAYI,EAAIG,YAAY,KAAGH,EAAIK,WAAW,SApBrD1C,EAAAA,cAACwB,EAAc,KACZJ,EAAQlB,KAAI,CAACmC,EAAKjC,IACjBJ,EAAAA,cAACiB,EAAAA,KAAI,CAACH,IAAKwB,KAAKC,UAAU,CAAEF,MAAKjC,MAAMc,GAAI,WAAWmB,KACpDrC,EAAAA,cAACyB,EAAO,KAAEQ,EAAYI,QAPX,IA4BF,C,0YCpErB,MAAMM,EAAQ,eACRC,EAAgB,IAAIC,OAAO,IAAMF,EAAQ,aAAc,MACvDG,EAAe,IAAID,OAAO,IAAMF,EAAQ,KAAM,MAEpD,SAASI,EAAiBC,EAAYC,GACrC,IAEC,MAAO,CAACC,mBAAmBF,EAAWG,KAAK,KAC5C,CAAE,MAEF,CAEA,GAA0B,IAAtBH,EAAWlD,OACd,OAAOkD,EAGRC,EAAQA,GAAS,EAGjB,MAAMG,EAAOJ,EAAW/C,MAAM,EAAGgD,GAC3BI,EAAQL,EAAW/C,MAAMgD,GAE/B,OAAOK,MAAMC,UAAUC,OAAOC,KAAK,GAAIV,EAAiBK,GAAOL,EAAiBM,GACjF,CAEA,SAASK,EAAOC,GACf,IACC,OAAOT,mBAAmBS,EAC3B,CAAE,MACD,IAAIC,EAASD,EAAME,MAAMjB,IAAkB,GAE3C,IAAK,IAAIxC,EAAI,EAAGA,EAAIwD,EAAO9D,OAAQM,IAGlCwD,GAFAD,EAAQZ,EAAiBa,EAAQxD,GAAG+C,KAAK,KAE1BU,MAAMjB,IAAkB,GAGxC,OAAOe,CACR,CACD,CAsCe,SAASG,EAAmBC,GAC1C,GAA0B,iBAAfA,EACV,MAAM,IAAIC,UAAU,6DAA+DD,EAAa,KAGjG,IAEC,OAAOb,mBAAmBa,EAC3B,CAAE,MAED,OA9CF,SAAkCJ,GAEjC,MAAMM,EAAa,CAClB,SAAU,KACV,SAAU,MAGX,IAAIJ,EAAQf,EAAaoB,KAAKP,GAC9B,KAAOE,GAAO,CACb,IAECI,EAAWJ,EAAM,IAAMX,mBAAmBW,EAAM,GACjD,CAAE,MACD,MAAMM,EAAST,EAAOG,EAAM,IAExBM,IAAWN,EAAM,KACpBI,EAAWJ,EAAM,IAAMM,EAEzB,CAEAN,EAAQf,EAAaoB,KAAKP,EAC3B,CAGAM,EAAW,OAAS,IAEpB,MAAMG,EAAUC,OAAOC,KAAKL,GAE5B,IAAK,MAAMnD,KAAOsD,EAEjBT,EAAQA,EAAMxB,QAAQ,IAAIU,OAAO/B,EAAK,KAAMmD,EAAWnD,IAGxD,OAAO6C,CACR,CAYSY,CAAyBR,EACjC,CACD,CCzFe,SAASS,EAAaC,EAAQC,GAC5C,GAAwB,iBAAXD,GAA4C,iBAAdC,EAC1C,MAAM,IAAIV,UAAU,iDAGrB,GAAe,KAAXS,GAA+B,KAAdC,EACpB,MAAO,GAGR,MAAMC,EAAiBF,EAAOG,QAAQF,GAEtC,OAAwB,IAApBC,EACI,GAGD,CACNF,EAAOxE,MAAM,EAAG0E,GAChBF,EAAOxE,MAAM0E,EAAiBD,EAAU5E,QAE1C,CCnBO,SAAS+E,EAAYC,EAAQC,GACnC,MAAMZ,EAAS,CAAC,EAEhB,GAAIb,MAAM0B,QAAQD,GACjB,IAAK,MAAMjE,KAAOiE,EAAW,CAC5B,MAAME,EAAaZ,OAAOa,yBAAyBJ,EAAQhE,GACvDmE,GAAYE,YACfd,OAAOe,eAAejB,EAAQrD,EAAKmE,EAErC,MAGA,IAAK,MAAMnE,KAAOuE,QAAQC,QAAQR,GAAS,CAC1C,MAAMG,EAAaZ,OAAOa,yBAAyBJ,EAAQhE,GAC3D,GAAImE,EAAWE,WAAY,CAEtBJ,EAAUjE,EADAgE,EAAOhE,GACKgE,IACzBT,OAAOe,eAAejB,EAAQrD,EAAKmE,EAErC,CACD,CAGD,OAAOd,CACR,CCpBA,MAAMoB,EAAoBC,GAASA,QAG7BC,EAAkBhB,GAAUhC,mBAAmBgC,GAAQtC,QAAQ,YAAYuD,GAAK,IAAIA,EAAEC,WAAW,GAAGC,SAAS,IAAIC,kBAEjHC,EAA2BC,OAAO,4BA8OxC,SAASC,EAA6BR,GACrC,GAAqB,iBAAVA,GAAuC,IAAjBA,EAAM1F,OACtC,MAAM,IAAIkE,UAAU,uDAEtB,CAEA,SAASiC,EAAOT,EAAOU,GACtB,OAAIA,EAAQD,OACJC,EAAQC,OAASV,EAAgBD,GAAS/C,mBAAmB+C,GAG9DA,CACR,CAEA,SAAS,EAAOA,EAAOU,GACtB,OAAIA,EAAQxC,OACJ,EAAgB8B,GAGjBA,CACR,CAEA,SAASY,EAAWzC,GACnB,OAAIL,MAAM0B,QAAQrB,GACVA,EAAM0C,OAGO,iBAAV1C,EACHyC,EAAW/B,OAAOC,KAAKX,IAC5B0C,MAAK,CAACC,EAAGC,IAAMC,OAAOF,GAAKE,OAAOD,KAClCrG,KAAIY,GAAO6C,EAAM7C,KAGb6C,CACR,CAEA,SAAS8C,EAAW9C,GACnB,MAAM+C,EAAY/C,EAAMiB,QAAQ,KAKhC,OAJmB,IAAf8B,IACH/C,EAAQA,EAAM1D,MAAM,EAAGyG,IAGjB/C,CACR,CAYA,SAASgD,EAAWnB,EAAOU,GAO1B,OANIA,EAAQU,eAAiBJ,OAAOK,MAAML,OAAOhB,KAA6B,iBAAVA,GAAuC,KAAjBA,EAAMsB,OAC/FtB,EAAQgB,OAAOhB,IACLU,EAAQa,eAA2B,OAAVvB,GAA2C,SAAxBA,EAAMwB,eAAoD,UAAxBxB,EAAMwB,gBAC9FxB,EAAgC,SAAxBA,EAAMwB,eAGRxB,CACR,CAEO,SAASyB,EAAQtD,GAEvB,MAAMuD,GADNvD,EAAQ8C,EAAW9C,IACMiB,QAAQ,KACjC,OAAoB,IAAhBsC,EACI,GAGDvD,EAAM1D,MAAMiH,EAAa,EACjC,CAEO,SAASC,EAAMC,EAAOlB,GAW5BF,GAVAE,EAAU,CACTxC,QAAQ,EACR2C,MAAM,EACNgB,YAAa,OACbC,qBAAsB,IACtBV,cAAc,EACdG,eAAe,KACZb,IAGiCoB,sBAErC,MAAMC,EApMP,SAA8BrB,GAC7B,IAAI/B,EAEJ,OAAQ+B,EAAQmB,aACf,IAAK,QACJ,MAAO,CAACvG,EAAK0E,EAAOgC,KACnBrD,EAAS,YAAYD,KAAKpD,GAE1BA,EAAMA,EAAIqB,QAAQ,UAAW,IAExBgC,QAKoBsD,IAArBD,EAAY1G,KACf0G,EAAY1G,GAAO,CAAC,GAGrB0G,EAAY1G,GAAKqD,EAAO,IAAMqB,GAR7BgC,EAAY1G,GAAO0E,CAQe,EAIrC,IAAK,UACJ,MAAO,CAAC1E,EAAK0E,EAAOgC,KACnBrD,EAAS,SAASD,KAAKpD,GACvBA,EAAMA,EAAIqB,QAAQ,OAAQ,IAErBgC,OAKoBsD,IAArBD,EAAY1G,GAKhB0G,EAAY1G,GAAO,IAAI0G,EAAY1G,GAAM0E,GAJxCgC,EAAY1G,GAAO,CAAC0E,GALpBgC,EAAY1G,GAAO0E,CAS2B,EAIjD,IAAK,uBACJ,MAAO,CAAC1E,EAAK0E,EAAOgC,KACnBrD,EAAS,WAAWD,KAAKpD,GACzBA,EAAMA,EAAIqB,QAAQ,SAAU,IAEvBgC,OAKoBsD,IAArBD,EAAY1G,GAKhB0G,EAAY1G,GAAO,IAAI0G,EAAY1G,GAAM0E,GAJxCgC,EAAY1G,GAAO,CAAC0E,GALpBgC,EAAY1G,GAAO0E,CAS2B,EAIjD,IAAK,QACL,IAAK,YACJ,MAAO,CAAC1E,EAAK0E,EAAOgC,KACnB,MAAMxC,EAA2B,iBAAVQ,GAAsBA,EAAMkC,SAASxB,EAAQoB,sBAC9DK,EAAmC,iBAAVnC,IAAuBR,GAAW,EAAOQ,EAAOU,GAASwB,SAASxB,EAAQoB,sBACzG9B,EAAQmC,EAAiB,EAAOnC,EAAOU,GAAWV,EAClD,MAAMoC,EAAW5C,GAAW2C,EAAiBnC,EAAMvC,MAAMiD,EAAQoB,sBAAsBpH,KAAI2H,GAAQ,EAAOA,EAAM3B,KAAuB,OAAVV,EAAiBA,EAAQ,EAAOA,EAAOU,GACpKsB,EAAY1G,GAAO8G,CAAQ,EAI7B,IAAK,oBACJ,MAAO,CAAC9G,EAAK0E,EAAOgC,KACnB,MAAMxC,EAAU,SAAS8C,KAAKhH,GAG9B,GAFAA,EAAMA,EAAIqB,QAAQ,OAAQ,KAErB6C,EAEJ,YADAwC,EAAY1G,GAAO0E,EAAQ,EAAOA,EAAOU,GAAWV,GAIrD,MAAMuC,EAAuB,OAAVvC,EAChB,GACAA,EAAMvC,MAAMiD,EAAQoB,sBAAsBpH,KAAI2H,GAAQ,EAAOA,EAAM3B,UAE7CuB,IAArBD,EAAY1G,GAKhB0G,EAAY1G,GAAO,IAAI0G,EAAY1G,MAASiH,GAJ3CP,EAAY1G,GAAOiH,CAImC,EAIzD,QACC,MAAO,CAACjH,EAAK0E,EAAOgC,UACMC,IAArBD,EAAY1G,GAKhB0G,EAAY1G,GAAO,IAAI,CAAC0G,EAAY1G,IAAMkH,OAAQxC,GAJjDgC,EAAY1G,GAAO0E,CAIoC,EAI5D,CA0FmByC,CAAqB/B,GAGjCgC,EAAc7D,OAAO8D,OAAO,MAElC,GAAqB,iBAAVf,EACV,OAAOc,EAKR,KAFAd,EAAQA,EAAMN,OAAO3E,QAAQ,SAAU,KAGtC,OAAO+F,EAGR,IAAK,MAAME,KAAahB,EAAMnE,MAAM,KAAM,CACzC,GAAkB,KAAdmF,EACH,SAGD,MAAMC,EAAanC,EAAQxC,OAAS0E,EAAUjG,QAAQ,MAAO,KAAOiG,EAEpE,IAAKtH,EAAK0E,GAAShB,EAAa6D,EAAY,UAEhCZ,IAAR3G,IACHA,EAAMuH,GAKP7C,OAAkBiC,IAAVjC,EAAsB,KAAQ,CAAC,QAAS,YAAa,qBAAqBkC,SAASxB,EAAQmB,aAAe7B,EAAQ,EAAOA,EAAOU,GACxIqB,EAAU,EAAOzG,EAAKoF,GAAUV,EAAO0C,EACxC,CAEA,IAAK,MAAOpH,EAAK0E,KAAUnB,OAAOD,QAAQ8D,GACzC,GAAqB,iBAAV1C,GAAgC,OAAVA,EAChC,IAAK,MAAO8C,EAAMC,KAAWlE,OAAOD,QAAQoB,GAC3CA,EAAM8C,GAAQ3B,EAAW4B,EAAQrC,QAGlCgC,EAAYpH,GAAO6F,EAAWnB,EAAOU,GAIvC,OAAqB,IAAjBA,EAAQG,KACJ6B,IAKiB,IAAjBhC,EAAQG,KAAgBhC,OAAOC,KAAK4D,GAAa7B,OAAShC,OAAOC,KAAK4D,GAAa7B,KAAKH,EAAQG,OAAOmC,QAAO,CAACrE,EAAQrD,KAC9H,MAAM0E,EAAQ0C,EAAYpH,GAQ1B,OAPI2H,QAAQjD,IAA2B,iBAAVA,IAAuBlC,MAAM0B,QAAQQ,GAEjErB,EAAOrD,GAAOsF,EAAWZ,GAEzBrB,EAAOrD,GAAO0E,EAGRrB,CAAM,GACXE,OAAO8D,OAAO,MAClB,CAEO,SAAS5F,EAAUuC,EAAQoB,GACjC,IAAKpB,EACJ,MAAO,GAQRkB,GALAE,EAAU,CAACD,QAAQ,EAClBE,QAAQ,EACRkB,YAAa,OACbC,qBAAsB,OAAQpB,IAEMoB,sBAErC,MAAMoB,EAAe5H,GACnBoF,EAAQyC,UAAYpD,EAAkBT,EAAOhE,KAC1CoF,EAAQ0C,iBAAmC,KAAhB9D,EAAOhE,GAGjCyG,EApZP,SAA+BrB,GAC9B,OAAQA,EAAQmB,aACf,IAAK,QACJ,OAAOvG,GAAO,CAACqD,EAAQqB,KACtB,MAAMqD,EAAQ1E,EAAOrE,OAErB,YACW2H,IAAVjC,GACIU,EAAQyC,UAAsB,OAAVnD,GACpBU,EAAQ0C,iBAA6B,KAAVpD,EAExBrB,EAGM,OAAVqB,EACI,IACHrB,EAAQ,CAAC8B,EAAOnF,EAAKoF,GAAU,IAAK2C,EAAO,KAAK1F,KAAK,KAInD,IACHgB,EACH,CAAC8B,EAAOnF,EAAKoF,GAAU,IAAKD,EAAO4C,EAAO3C,GAAU,KAAMD,EAAOT,EAAOU,IAAU/C,KAAK,IACvF,EAIH,IAAK,UACJ,OAAOrC,GAAO,CAACqD,EAAQqB,SAEXiC,IAAVjC,GACIU,EAAQyC,UAAsB,OAAVnD,GACpBU,EAAQ0C,iBAA6B,KAAVpD,EAExBrB,EAGM,OAAVqB,EACI,IACHrB,EACH,CAAC8B,EAAOnF,EAAKoF,GAAU,MAAM/C,KAAK,KAI7B,IACHgB,EACH,CAAC8B,EAAOnF,EAAKoF,GAAU,MAAOD,EAAOT,EAAOU,IAAU/C,KAAK,KAK9D,IAAK,uBACJ,OAAOrC,GAAO,CAACqD,EAAQqB,SAEXiC,IAAVjC,GACIU,EAAQyC,UAAsB,OAAVnD,GACpBU,EAAQ0C,iBAA6B,KAAVpD,EAExBrB,EAGM,OAAVqB,EACI,IACHrB,EACH,CAAC8B,EAAOnF,EAAKoF,GAAU,UAAU/C,KAAK,KAIjC,IACHgB,EACH,CAAC8B,EAAOnF,EAAKoF,GAAU,SAAUD,EAAOT,EAAOU,IAAU/C,KAAK,KAKjE,IAAK,QACL,IAAK,YACL,IAAK,oBAAqB,CACzB,MAAM2F,EAAsC,sBAAxB5C,EAAQmB,YACzB,MACA,IAEH,OAAOvG,GAAO,CAACqD,EAAQqB,SAEXiC,IAAVjC,GACIU,EAAQyC,UAAsB,OAAVnD,GACpBU,EAAQ0C,iBAA6B,KAAVpD,EAExBrB,GAIRqB,EAAkB,OAAVA,EAAiB,GAAKA,EAER,IAAlBrB,EAAOrE,OACH,CAAC,CAACmG,EAAOnF,EAAKoF,GAAU4C,EAAa7C,EAAOT,EAAOU,IAAU/C,KAAK,KAGnE,CAAC,CAACgB,EAAQ8B,EAAOT,EAAOU,IAAU/C,KAAK+C,EAAQoB,uBAExD,CAEA,QACC,OAAOxG,GAAO,CAACqD,EAAQqB,SAEXiC,IAAVjC,GACIU,EAAQyC,UAAsB,OAAVnD,GACpBU,EAAQ0C,iBAA6B,KAAVpD,EAExBrB,EAGM,OAAVqB,EACI,IACHrB,EACH8B,EAAOnF,EAAKoF,IAIP,IACH/B,EACH,CAAC8B,EAAOnF,EAAKoF,GAAU,IAAKD,EAAOT,EAAOU,IAAU/C,KAAK,KAK9D,CAsRmB4F,CAAsB7C,GAElC8C,EAAa,CAAC,EAEpB,IAAK,MAAOlI,EAAK0E,KAAUnB,OAAOD,QAAQU,GACpC4D,EAAa5H,KACjBkI,EAAWlI,GAAO0E,GAIpB,MAAMlB,EAAOD,OAAOC,KAAK0E,GAMzB,OAJqB,IAAjB9C,EAAQG,MACX/B,EAAK+B,KAAKH,EAAQG,MAGZ/B,EAAKpE,KAAIY,IACf,MAAM0E,EAAQV,EAAOhE,GAErB,YAAc2G,IAAVjC,EACI,GAGM,OAAVA,EACIS,EAAOnF,EAAKoF,GAGhB5C,MAAM0B,QAAQQ,GACI,IAAjBA,EAAM1F,QAAwC,sBAAxBoG,EAAQmB,YAC1BpB,EAAOnF,EAAKoF,GAAW,KAGxBV,EACLgD,OAAOjB,EAAUzG,GAAM,IACvBqC,KAAK,KAGD8C,EAAOnF,EAAKoF,GAAW,IAAMD,EAAOT,EAAOU,EAAQ,IACxD+C,QAAOvD,GAAKA,EAAE5F,OAAS,IAAGqD,KAAK,IACnC,CAEO,SAAS+F,EAASC,EAAKjD,GAC7BA,EAAU,CACTxC,QAAQ,KACLwC,GAGJ,IAAKkD,EAAMC,GAAQ7E,EAAa2E,EAAK,KAMrC,YAJa1B,IAAT2B,IACHA,EAAOD,GAGD,CACNA,IAAKC,GAAMnG,MAAM,OAAO,IAAM,GAC9BmE,MAAOD,EAAMF,EAAQkC,GAAMjD,MACvBA,GAAWA,EAAQoD,yBAA2BD,EAAO,CAACE,mBAAoB,EAAOF,EAAMnD,IAAY,CAAC,EAE1G,CAEO,SAASsD,EAAa1E,EAAQoB,GACpCA,EAAU,CACTD,QAAQ,EACRE,QAAQ,EACR,CAACL,IAA2B,KACzBI,GAGJ,MAAMiD,EAAM1C,EAAW3B,EAAOqE,KAAKlG,MAAM,KAAK,IAAM,GAQpD,IAAIwG,EAAclH,EALJ,IACV4E,EAHiBF,EAAQnC,EAAOqE,KAGZ,CAAC9C,MAAM,OAC3BvB,EAAOsC,OAGwBlB,GAC/BuD,IACHA,EAAc,IAAIA,KAGnB,IAAIJ,EA5ML,SAAiBF,GAChB,IAAIE,EAAO,GACX,MAAM3C,EAAYyC,EAAIvE,QAAQ,KAK9B,OAJmB,IAAf8B,IACH2C,EAAOF,EAAIlJ,MAAMyG,IAGX2C,CACR,CAoMYK,CAAQ5E,EAAOqE,KAC1B,GAAIrE,EAAOyE,mBAAoB,CAC9B,MAAMI,EAA6B,IAAIC,IAAIT,GAC3CQ,EAA2BN,KAAOvE,EAAOyE,mBACzCF,EAAOnD,EAAQJ,GAA4B6D,EAA2BN,KAAO,IAAIvE,EAAOyE,oBACzF,CAEA,MAAO,GAAGJ,IAAMM,IAAcJ,GAC/B,CAEO,SAASQ,EAAKlG,EAAOsF,EAAQ/C,GACnCA,EAAU,CACToD,yBAAyB,EACzB,CAACxD,IAA2B,KACzBI,GAGJ,MAAM,IAACiD,EAAG,MAAE/B,EAAK,mBAAEmC,GAAsBL,EAASvF,EAAOuC,GAEzD,OAAOsD,EAAa,CACnBL,MACA/B,MAAOvC,EAAYuC,EAAO6B,GAC1BM,sBACErD,EACJ,CAEO,SAAS4D,EAAQnG,EAAOsF,EAAQ/C,GAGtC,OAAO2D,EAAKlG,EAFYL,MAAM0B,QAAQiE,GAAUnI,IAAQmI,EAAOvB,SAAS5G,GAAO,CAACA,EAAK0E,KAAWyD,EAAOnI,EAAK0E,GAExEU,EACrC,CC5gBA,Q,2DCgBA,MAAM1E,EAAiB5D,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAVJ,CAAU,+DAQhBA,EAAAA,QAAOO,EAACL,WAAA,CAAAC,YAAA,iBAAAC,YAAA,gBAARJ,CAAQ,+BACdQ,GAASA,EAAMC,MAAMC,OAAOyL,mBA8EvC,MA1EiBrL,IAAe,IAAd,KAAEsL,GAAMtL,EACxB,MAAM8B,EAAOyJ,IAASD,EAAKE,kBAAkBC,MAAO,CAAC,eAAeC,UAC9DC,EAAQL,EAAKE,kBAAkBI,OAE/B,EAAC5I,EAAS,EAAC6I,IAAezL,EAAAA,EAAAA,aAC1B,EAAC0L,EAAc,EAACC,IAAoB3L,EAAAA,EAAAA,UAAS,IAE7C4L,GAAeC,EAAAA,EAAAA,QAAO,MAE5B,IAAIvD,EAAQ,KAwBZ,MAvBwB,oBAAb3H,WACT2H,EAAQ3H,SAASmL,SAASC,SAG5B5L,EAAAA,EAAAA,YAAU,KACR,IAAKyC,EAEH,YADA+I,EAAiBJ,GAInB,MAAMS,EAAW7B,IAAOoB,GAAOlK,GAAQA,EAAKM,YAAYD,OAAqD,IAA7CL,EAAKM,YAAYD,KAAKoE,QAAQlD,KAC9F+I,EAAiBK,EAAS,GACzB,CAACpJ,EAAU2I,KAEdpL,EAAAA,EAAAA,YAAU,KACR,MAAM8L,EAAI7H,mBAAmBuG,EAAYtC,MAAMC,GAAU,GAAK,IAC9DmD,EAAYQ,EAAE,GACb,CAAC3D,IAOFpH,EAAAA,cAACgL,EAAAA,EAAM,KACLhL,EAAAA,cAACiL,EAAAA,EAAG,CAAC5K,MAAOA,EAAAA,MAAOC,YAAaA,EAAAA,YAAa6I,IAAK+B,EAAAA,UAElDlL,EAAAA,cAACwB,EAAc,KACZE,EACC1B,EAAAA,cAACe,EAAAA,EAAK,CAACC,KAAK,MAAK,IACfU,EAAS,KAAG8I,EAAc1K,OAAO,eAKnCE,EAAAA,cAACe,EAAAA,EAAK,CAACC,KAAK,MAAK,KACZR,EAAKV,OAAO,SAAOU,EAAKV,OAAS,GAAK,IAAI,WAIjDE,EAAAA,cAACmB,EAAAA,EAAO,CACNiB,OAAK,EACLhB,QAASZ,EACTkB,SAAUA,EACVyJ,QAAS9I,IACP+I,QAAQC,IAAIhJ,EAAKX,GACbW,IAAQX,IACV4J,EAAAA,EAAAA,UAAS,SACTC,MAAM,QAENhB,EAAYlI,IACZiJ,EAAAA,EAAAA,UAAS,WAAWjJ,EAAIG,cAC1B,KAKNxC,EAAAA,cAACwL,EAAAA,EAAa,CAACxK,KAAM,GAAIyK,IAAKf,IAE9B1K,EAAAA,cAAC0L,EAAAA,EAAQ,CAAC/M,SAAU6L,IACb,C,sBCrGb,IAAImB,EAAW,EAAQ,MAoBvBC,EAAOC,QAVP,SAAoBC,EAAY/G,GAC9B,IAAIZ,EAAS,GAMb,OALAwH,EAASG,GAAY,SAAStG,EAAOqD,EAAOiD,GACtC/G,EAAUS,EAAOqD,EAAOiD,IAC1B3H,EAAO4H,KAAKvG,EAEhB,IACOrB,CACT,C,uBClBA,IAAI6H,EAAc,EAAQ,MACtBC,EAAa,EAAQ,KACrBC,EAAe,EAAQ,MACvBlH,EAAU,EAAQ,MAgDtB4G,EAAOC,QALP,SAAgBC,EAAY/G,GAE1B,OADWC,EAAQ8G,GAAcE,EAAcC,GACnCH,EAAYI,EAAanH,EAAW,GAClD,C","sources":["webpack://gatsby-starter-hoodie/./src/components/PostList/index.jsx","webpack://gatsby-starter-hoodie/./src/components/TagList/index.jsx","webpack://gatsby-starter-hoodie/./node_modules/decode-uri-component/index.js","webpack://gatsby-starter-hoodie/./node_modules/split-on-first/index.js","webpack://gatsby-starter-hoodie/./node_modules/filter-obj/index.js","webpack://gatsby-starter-hoodie/./node_modules/query-string/base.js","webpack://gatsby-starter-hoodie/./node_modules/query-string/index.js","webpack://gatsby-starter-hoodie/./src/pages/tags.jsx","webpack://gatsby-starter-hoodie/./node_modules/lodash/_baseFilter.js","webpack://gatsby-starter-hoodie/./node_modules/lodash/filter.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport _ from \"lodash\"\n\nimport { Link } from \"gatsby\"\n\nimport Title from \"components/Title\"\nimport Divider from \"components/Divider\"\nimport TagList from \"components/TagList\"\n\nconst PostListWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 10px;\n  }\n`\n\nconst PostWrapper = styled.div`\n  position: relative;\n  top: 0;\n  transition: all 0.5s;\n\n  @media (max-width: 768px) {\n    padding: 0 5px;\n  }\n`\n\nconst Date = styled.p`\n  margin-bottom: 16px;\n  font-size: 14.4px;\n  color: ${props => props.theme.colors.tertiaryText};\n`\n\nconst Excerpt = styled.p`\n  margin-bottom: 32px;\n  line-height: 1.7;\n  font-size: 16px;\n  color: ${props => props.theme.colors.secondaryText};\n  word-break: break-all;\n`\n\nconst checkIsScrollAtBottom = () => {\n  return (\n    document.documentElement.scrollHeight -\n      document.documentElement.scrollTop <=\n    document.documentElement.clientHeight + 100\n  )\n}\n\nconst PostList = ({ postList }) => {\n  const [postCount, setPostCount] = useState(10)\n  const [windowWidth, setWindowWidth] = useState(null) // 초기값을 null로 설정\n\n  // 화면 크기 변경 시 windowWidth 업데이트\n  useEffect(() => {\n    // 클라이언트에서만 window를 사용하도록 조건을 추가\n    if (typeof window !== \"undefined\") {\n      const handleResize = () => {\n        setWindowWidth(window.innerWidth)\n      }\n\n      window.addEventListener(\"resize\", handleResize)\n\n      // 초기 로드 시에도 windowWidth 값을 설정\n      setWindowWidth(window.innerWidth)\n\n      return () => window.removeEventListener(\"resize\", handleResize)\n    }\n  }, [])\n\n  const handleMoreLoad = _.throttle(() => {\n    if (checkIsScrollAtBottom() && postCount < postList.length) {\n      setTimeout(() => setPostCount(postCount + 10), 300)\n    }\n  }, 250)\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleMoreLoad)\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleMoreLoad)\n    }\n  }, [postCount, postList])\n\n  useEffect(() => {\n    setPostCount(10)\n  }, [postList])\n\n  // windowWidth가 null인 경우, 클라이언트 사이드에서만 렌더링되도록 대체\n  if (windowWidth === null) return null\n\n  return (\n    <PostListWrapper>\n      {postList.slice(0, postCount).map((post, i) => {\n        const { title, description, date, tags } = post.frontmatter\n        const { excerpt } = post\n        const { slug } = post.fields\n\n        // 화면 너비에 따라 Title의 size 값을 설정\n        const titleSize = windowWidth < 768 ? 'md' : 'bg'\n\n        return (\n          <>\n            <PostWrapper key={i}>\n              <Title size={titleSize}>\n                <Link to={slug}>{title}</Link>\n              </Title>\n              <Date>{date}</Date>\n              {description ? (\n                <Excerpt>{description}</Excerpt>\n              ) : (\n                <Excerpt>{excerpt}</Excerpt>\n              )}\n              \n              <TagList tagList={tags} />\n            </PostWrapper>\n\n            {postCount - 1 !== i && postList.length - 1 !== i && (\n              <Divider mt=\"48px\" mb=\"32px\" />\n            )}\n          </>\n        )\n      })}\n    </PostListWrapper>\n  )\n}\n\nexport default PostList\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst TagListWrapper = styled.div`\n  margin-bottom: 10px;\n  word-break: break-all;\n`\n\nconst TagLink = styled.div`\n  display: inline-block;\n  padding: 9.6px 11.2px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 50px;\n  background-color: ${props =>\n    props.selected\n      ? props.theme.colors.selectedTagBackground\n      : props.theme.colors.tagBackground};\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.selectedTagText\n      : props.theme.colors.tagText};\n  text-decoration: none;\n  font-size: 14.4px;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${props =>\n      props.selected\n        ? props.theme.colors.hoveredSelectedTagBackground\n        : props.theme.colors.hoveredTagBackground};\n  }\n`\n\nconst spaceToDash = text => {\n  return text.replace(/\\s+/g, \"-\")\n}\n\nconst TagList = ({ tagList, count, selected }) => {\n  if (!tagList) return null\n\n  if (!count) {\n    return (\n      <TagListWrapper>\n        {tagList.map((tag, i) => (\n          <Link key={JSON.stringify({ tag, i })} to={`/tags?q=${tag}`}>\n            <TagLink>{spaceToDash(tag)}</TagLink>\n          </Link>\n        ))}\n      </TagListWrapper>\n    )\n  }\n\n  return (\n    <TagListWrapper>\n      {tagList.map((tag, i) => (\n        <Link\n          key={JSON.stringify({ tag, i })}\n          to={\n            selected === tag.fieldValue ? \"/tags\" : `/tags?q=${encodeURIComponent(tag.fieldValue)}`\n          }\n        >\n          <TagLink selected={tag.fieldValue === selected}>\n            {spaceToDash(tag.fieldValue)} ({tag.totalCount})\n          </TagLink>\n        </Link>\n      ))}\n    </TagListWrapper>\n  )\n}\n\nexport default TagList\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n","import React, { useState, useEffect, useRef } from \"react\"\nimport _ from \"lodash\"\nimport styled from \"styled-components\"\nimport SEO from \"components/SEO\"\nimport filter from \"lodash/filter\"\n\nimport { graphql, navigate } from \"gatsby\"\n\nimport queryString from \"query-string\"\n\nimport Layout from \"components/Layout\"\nimport Title from \"components/Title\"\nimport TagList from \"components/TagList\"\nimport PostList from \"components/PostList\"\nimport VerticleSpace from \"components/VerticalSpace\"\n\nimport { title, description, siteUrl } from \"../../blog-config\"\n\nconst TagListWrapper = styled.div`\n  margin-top: 20px;\n\n  @media (max-width: 768px) {\n    padding: 0 15px;\n  }\n`\n\nconst TagTitle = styled.p`\n  color: ${props => props.theme.colors.secondAccentText};\n  display: inline;\n`\n\nconst TagsPage = ({ data }) => {\n  const tags = _.sortBy(data.allMarkdownRemark.group, [\"totalCount\"]).reverse()\n  const posts = data.allMarkdownRemark.nodes\n\n  const [selected, setSelected] = useState()\n  const [filteredPosts, setFilteredPosts] = useState([])\n\n  const firstItemRef = useRef(null);\n\n  let query = null\n  if (typeof document !== \"undefined\") {\n    query = document.location.search\n  }\n\n  useEffect(() => {\n    if (!selected) {\n      setFilteredPosts(posts)\n      return\n    }\n\n    const filtered = filter(posts, post => post.frontmatter.tags && post.frontmatter.tags.indexOf(selected) !== -1)\n    setFilteredPosts(filtered)\n  }, [selected, posts])\n\n  useEffect(() => {\n    const q = decodeURIComponent(queryString.parse(query)[\"q\"] || \"\")\n    setSelected(q)\n  }, [query])\n\n  // useEffect(()=> {\n  //   firstItemRef.current?.scrollIntoView({behavior: 'smooth', block: \"start\"});\n  // }, [selected])\n\n  return (\n    <Layout>\n      <SEO title={title} description={description} url={siteUrl} />\n\n      <TagListWrapper>\n        {selected ? (\n          <Title size=\"sm\">\n          #{selected}에 {filteredPosts.length}개의 글이 있습니다.\n          </Title>\n\n          \n          ) : (\n          <Title size=\"sm\">\n            총 {tags.length}개의 tag{tags.length > 1 && \"s\"}가 있습니다.\n          </Title>\n        )}\n\n        <TagList\n          count\n          tagList={tags}\n          selected={selected}\n          onClick={tag => {\n            console.log(tag, selected)\n            if (tag === selected) {\n              navigate(\"/tags\")\n              alert(\"zz\")\n            } else {\n              setSelected(tag)\n              navigate(`/tags?q=${tag.fieldValue}`)\n            }\n          }}\n        />\n      </TagListWrapper>\n\n      <VerticleSpace size={32} ref={firstItemRef}/>\n\n      <PostList postList={filteredPosts} />\n    </Layout>\n  )\n}\n\nexport default TagsPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n    sort: { fields: [frontmatter___date], order: DESC }\n    filter: {frontmatter: {publish: {eq: true}}}\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      nodes {\n        excerpt(pruneLength: 150, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          updated(formatString: \"MMM DD, YYYY\")\n          title\n          tags\n        }\n      }\n    }\n  }\n`","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n"],"names":["PostListWrapper","styled","div","withConfig","displayName","componentId","PostWrapper","Date","p","props","theme","colors","tertiaryText","Excerpt","secondaryText","_ref","postList","postCount","setPostCount","useState","windowWidth","setWindowWidth","useEffect","window","handleResize","innerWidth","addEventListener","removeEventListener","handleMoreLoad","_throttle","document","documentElement","scrollHeight","scrollTop","clientHeight","length","setTimeout","React","slice","map","post","i","title","description","date","tags","frontmatter","excerpt","slug","fields","titleSize","key","Title","size","Link","to","TagList","tagList","Divider","mt","mb","TagListWrapper","TagLink","selected","selectedTagBackground","tagBackground","selectedTagText","tagText","hoveredSelectedTagBackground","hoveredTagBackground","spaceToDash","text","replace","count","tag","JSON","stringify","fieldValue","encodeURIComponent","totalCount","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","right","Array","prototype","concat","call","decode","input","tokens","match","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","entries","Object","keys","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","isNullOrUndefined","value","strictUriEncode","x","charCodeAt","toString","toUpperCase","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","options","strict","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","toLowerCase","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","includes","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","filter","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryString","getHash","urlObjectForFragmentEncode","URL","pick","exclude","secondAccentText","data","_sortBy","allMarkdownRemark","group","reverse","posts","nodes","setSelected","filteredPosts","setFilteredPosts","firstItemRef","useRef","location","search","filtered","q","Layout","SEO","siteUrl","onClick","console","log","navigate","alert","VerticleSpace","ref","PostList","baseEach","module","exports","collection","push","arrayFilter","baseFilter","baseIteratee"],"sourceRoot":""}