{"version":3,"file":"component---src-pages-index-jsx-b0cb8fa626991a7cd462.js","mappings":"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","sources":["webpack://gatsby-starter-hoodie/./src/components/TagList/index.jsx","webpack://gatsby-starter-hoodie/./src/components/SideTagList/index.jsx","webpack://gatsby-starter-hoodie/./src/components/Bio/index.jsx","webpack://gatsby-starter-hoodie/./node_modules/lodash/map.js","webpack://gatsby-starter-hoodie/./src/components/PostList/index.jsx","webpack://gatsby-starter-hoodie/./src/pages/index.jsx"],"sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst TagListWrapper = styled.div`\n  margin-bottom: 10px;\n  word-break: break-all;\n`\n\nconst TagLink = styled.div`\n  display: inline-block;\n  padding: 9.6px 11.2px;\n  margin-right: 8px;\n  margin-bottom: 8px;\n  border-radius: 50px;\n  background-color: ${props =>\n    props.selected\n      ? props.theme.colors.selectedTagBackground\n      : props.theme.colors.tagBackground};\n  color: ${props =>\n    props.selected\n      ? props.theme.colors.selectedTagText\n      : props.theme.colors.tagText};\n  text-decoration: none;\n  font-size: 14.4px;\n  transition: all 0.2s;\n\n  &:hover {\n    background-color: ${props =>\n      props.selected\n        ? props.theme.colors.hoveredSelectedTagBackground\n        : props.theme.colors.hoveredTagBackground};\n  }\n`\n\nconst spaceToDash = text => {\n  return text.replace(/\\s+/g, \"-\")\n}\n\nconst TagList = ({ tagList, count, selected }) => {\n  if (!tagList) return null\n\n  if (!count) {\n    return (\n      <TagListWrapper>\n        {tagList.map((tag, i) => (\n          <Link key={JSON.stringify({ tag, i })} to={`/tags?q=${tag}`}>\n            <TagLink>{spaceToDash(tag)}</TagLink>\n          </Link>\n        ))}\n      </TagListWrapper>\n    )\n  }\n\n  return (\n    <TagListWrapper>\n      {tagList.map((tag, i) => (\n        <Link\n          key={JSON.stringify({ tag, i })}\n          to={\n            selected === tag.fieldValue ? \"/tags\" : `/tags?q=${encodeURIComponent(tag.fieldValue)}`\n          }\n        >\n          <TagLink selected={tag.fieldValue === selected}>\n            {spaceToDash(tag.fieldValue)} ({tag.totalCount})\n          </TagLink>\n        </Link>\n      ))}\n    </TagListWrapper>\n  )\n}\n\nexport default TagList\n","import React from \"react\"\nimport _ from \"lodash\"\nimport styled from \"styled-components\"\nimport { Link } from \"gatsby\"\n\nconst RelativeWrapper = styled.div`\n  position: relative;\n`\n\nconst Wrapper = styled.aside`\n  position: absolute;\n  left: 112%;\n  top: 0px;\n  width: 200px;\n  height: 100px;\n  font-size: 16px;\n\n  @media (max-width: 1300px) {\n    display: none;\n  }\n`\n\nconst Title = styled.div`\n  margin-bottom: 25px;\n  font-weight: bold;\n  color: ${props => props.theme.colors.secondaryText};\n`\n\nconst Tag = styled.li`\n  margin-bottom: 16px;\n  color: ${props => props.theme.colors.tertiaryText};\n  cursor: pointer;\n  transition: color 0.3s;\n\n  &:hover {\n    color: ${props => props.theme.colors.text};\n  }\n\n  & > a {\n    color: inherit;\n    text-decoration: none;\n  }\n`\n\nconst SideTagList = ({ tags, postCount }) => {\n  return (\n    <RelativeWrapper>\n      <Wrapper>\n        <Title>TAG LIST</Title>\n        <ul>\n          <Tag>\n            <Link to=\"/tags\">all ({postCount})</Link>\n          </Tag>\n          {_.map(tags, tag => (\n            <Tag>\n              <Link to={`/tags?q=${tag.fieldValue}`}>\n                {tag.fieldValue} ({tag.totalCount})\n              </Link>\n            </Tag>\n          ))}\n        </ul>\n      </Wrapper>\n    </RelativeWrapper>\n  )\n}\n\nexport default SideTagList\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport {\n  FaGithub,\n  FaKaggle,\n  FaFacebook,\n  FaTwitter,\n  FaLinkedin,\n  FaInstagram,\n} from \"react-icons/fa\"\n\nimport {\n  FaXTwitter,\n  FaRegEnvelope,\n  FaMedium,\n  FaBlogger,\n  FaRegFileLines,\n  FaLink,\n} from \"react-icons/fa6\"\n\nimport { siteUrl, description, writer, links } from \"../../../gatsby-meta-config\"\n\n\nconst BioWrapper = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    padding: 0 15px;\n  }\n`\n\nconst profileImageRoot =\n  typeof window !== \"undefined\" && window.location.host === \"localhost:8000\"\n    ? \"http://localhost:8000\"\n    : siteUrl\n\nconst Profile = styled.div`\n  flex: 0 0 auto;\n  margin-right: 30px;\n  width: 128px;\n  height: 128px;\n  border-radius: 999px;\n  background-image: url(${profileImageRoot}/${props => props.theme.colors.profile}.png);\n  background-size: cover;\n  background-position: center;\n`\n\nconst Author = styled.div`\n  margin-bottom: 8px;\n  font-size: 24px;\n  font-weight: 700;\n  color: ${props => props.theme.colors.text};\n`\n\nconst Description = styled.div`\n  margin-bottom: 11.2px;\n  line-height: 1.5;\n  font-size: 16px;\n  color: ${props => props.theme.colors.secondaryText};\n`\n\nconst LinksWrapper = styled.div`\n  & a {\n    margin-right: 9.6px;\n  }\n\n  & svg {\n    width: 25.6px;\n    height: 25.6px;\n    cursor: pointer;\n  }\n\n  & svg path {\n    fill: ${props => props.theme.colors.icon};\n    transition: fill 0.3s;\n  }\n\n  & a:hover svg path {\n    fill: ${props => props.theme.colors.text};\n  }\n`\n\nconst Link = ({ link, children }) => {\n  if (!link) return null\n  return (\n    <a href={link} target=\"_blank\" rel=\"noreferrer\">\n      {children}\n    </a>\n  )\n}\n\nconst Bio = () => {\n  const {\n    github,\n    kaggle,\n    instagram,\n    facebook,\n    twitter,\n    x,\n    blogger,\n    medium,\n    linkedIn,\n    email,\n    resume,\n    link,\n  } = links\n\n  return (\n    <BioWrapper id=\"bio\">\n      <Profile />\n    \n      <div>\n        <Author>@{writer}</Author>\n        <Description>{description}</Description>\n        <LinksWrapper>\n          <Link link={github}>\n            <FaGithub />\n          </Link>\n          <Link link={linkedIn}>\n            <FaLinkedin />\n          </Link>\n          <Link link={kaggle}>\n            <FaKaggle />\n          </Link>\n          <Link link={instagram}>\n            <FaInstagram />\n          </Link>\n          <Link link={facebook}>\n            <FaFacebook />\n          </Link>\n          <Link link={twitter}>\n            <FaTwitter />\n          </Link>\n          <Link link={x}>\n            <FaXTwitter />\n          </Link>\n          <Link link={medium}>\n            <FaMedium />\n          </Link>\n          <Link link={blogger}>\n            <FaBlogger />\n          </Link>\n          <Link link={email}>\n            <FaRegEnvelope />\n          </Link>\n          <Link link={resume}>\n            <FaRegFileLines />\n          </Link>\n          <Link link={link}>\n            <FaLink />\n          </Link>\n        </LinksWrapper>\n      </div>\n    </BioWrapper>\n  )\n}\n\nexport default Bio\n","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n","import React, { useState, useEffect } from \"react\"\nimport styled from \"styled-components\"\nimport _ from \"lodash\"\n\nimport { Link } from \"gatsby\"\n\nimport Title from \"components/Title\"\nimport Divider from \"components/Divider\"\nimport TagList from \"components/TagList\"\n\nconst PostListWrapper = styled.div`\n  @media (max-width: 768px) {\n    padding: 0 10px;\n  }\n`\n\nconst PostWrapper = styled.div`\n  position: relative;\n  top: 0;\n  transition: all 0.5s;\n\n  @media (max-width: 768px) {\n    padding: 0 5px;\n  }\n`\n\nconst Date = styled.p`\n  margin-bottom: 16px;\n  font-size: 14.4px;\n  color: ${props => props.theme.colors.tertiaryText};\n`\n\nconst Excerpt = styled.p`\n  margin-bottom: 32px;\n  line-height: 1.7;\n  font-size: 16px;\n  color: ${props => props.theme.colors.secondaryText};\n  word-break: break-all;\n`\n\nconst checkIsScrollAtBottom = () => {\n  return (\n    document.documentElement.scrollHeight -\n      document.documentElement.scrollTop <=\n    document.documentElement.clientHeight + 100\n  )\n}\n\nconst PostList = ({ postList }) => {\n  const [postCount, setPostCount] = useState(10)\n  \n  const handleMoreLoad = _.throttle(() => {\n    if (checkIsScrollAtBottom() && postCount < postList.length) {\n      setTimeout(() => setPostCount(postCount + 10), 300)\n    }\n  }, 250)\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", handleMoreLoad)\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleMoreLoad)\n    }\n  }, [postCount, postList])\n\n  useEffect(() => {\n    setPostCount(10)\n  }, [postList])\n\n  return (\n    <PostListWrapper>\n      {postList.slice(0, postCount).map((post, i) => {\n        const { title, description, date, tags } = post.frontmatter\n        const { excerpt } = post\n        const { slug } = post.fields\n\n        return (\n          <>\n            <PostWrapper>\n              <Title size=\"bg\">\n                <Link to={slug}>{title}</Link>\n              </Title>\n              <Date>{date}</Date>\n              {description ? (\n                <Excerpt>{description}</Excerpt>\n              ) : (\n                <Excerpt>{excerpt}</Excerpt>\n              )}\n              \n              <TagList tagList={tags} />\n            </PostWrapper>\n\n            {postCount - 1 !== i && postList.length - 1 !== i && (\n              <Divider mt=\"48px\" mb=\"32px\" />\n            )}\n          </>\n        )\n      })}\n    </PostListWrapper>\n  )\n}\n\nexport default PostList\n","import React from \"react\"\nimport _ from \"lodash\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"components/Layout\"\nimport SEO from \"components/SEO\"\nimport Bio from \"components/Bio\"\nimport PostList from \"components/PostList\"\nimport SideTagList from \"components/SideTagList\"\nimport Divider from \"components/Divider\"\nimport Info from \"components/Info\"\nimport VerticalSpace from \"components/VerticalSpace\"\nimport Tab from \"components/Tab\"\n\nimport { title, description, siteUrl } from \"../../gatsby-meta-config\"\n\nconst BlogIndex = ({ data }) => {\n  const posts = data.allMarkdownRemark.nodes\n  const tags = _.sortBy(data.allMarkdownRemark.group, [\"totalCount\"]).reverse()\n  const { author, language } = data.site.siteMetadata;\n\n  if (posts.length === 0) {\n    return (\n      <p>\n        No blog posts found. Add markdown posts to &quot;content/blog&quot; (or\n        the directory you specified for the &quot;gatsby-source-filesystem&quot;\n        plugin in gatsby-config.js).\n      </p>\n    )\n  }\n\n  return (\n\n    <Layout>\n      <SEO title={title} description={description} url={siteUrl} />\n      {/* <VerticalSpace size={48} /> */}\n      <Info author={author} language={language} />\n      {/* <Bio author={author} language={language}/> */}\n      <Tab postsCount={posts.length} activeTab=\"posts\" />\n      {/* <Divider /> */}\n      <SideTagList tags={tags} postCount={posts.length} />\n      <PostList postList={posts} />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\nquery BlogIndex {\n  site {\n    siteMetadata {\n      title\n      language\n      author {\n        name\n        bio {\n          role\n          description\n          thumbnail\n        }\n      }\n      links {\n        github\n        linkedIn\n        email\n      }\n    }\n  }\n    \n  allMarkdownRemark(\n  sort: {frontmatter: {date: DESC}}\n  filter: {frontmatter: {publish: {eq: true}}}\n  ) {\n    group(field: {frontmatter: {tags: SELECT}}) {\n      fieldValue\n      totalCount\n    }\n    nodes {\n      excerpt(pruneLength: 150, truncate: true)\n      fields {\n        slug\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        updated(formatString: \"MMM DD, YYYY\")\n        title\n        description\n        tags\n      }\n    }\n  }\n}\n`"],"names":["TagListWrapper","styled","div","withConfig","displayName","componentId","TagLink","props","selected","theme","colors","selectedTagBackground","tagBackground","selectedTagText","tagText","hoveredSelectedTagBackground","hoveredTagBackground","spaceToDash","text","replace","_ref","tagList","count","React","map","tag","i","Link","key","JSON","stringify","to","fieldValue","encodeURIComponent","totalCount","RelativeWrapper","Wrapper","aside","Title","secondaryText","Tag","li","tertiaryText","tags","postCount","_map","BioWrapper","profileImageRoot","window","location","host","siteUrl","Profile","profile","Author","Description","LinksWrapper","icon","link","children","href","target","rel","Bio","github","kaggle","instagram","facebook","twitter","x","blogger","medium","linkedIn","email","resume","links","id","writer","description","FaGithub","FaLinkedin","FaKaggle","FaInstagram","FaFacebook","FaTwitter","FaXTwitter","FaMedium","FaBlogger","FaRegEnvelope","FaRegFileLines","FaLink","arrayMap","baseIteratee","baseMap","isArray","module","exports","collection","iteratee","PostListWrapper","PostWrapper","Date","p","Excerpt","postList","setPostCount","useState","handleMoreLoad","_throttle","document","documentElement","scrollHeight","scrollTop","clientHeight","length","setTimeout","useEffect","addEventListener","removeEventListener","slice","post","title","date","frontmatter","excerpt","slug","fields","size","TagList","Divider","mt","mb","data","posts","allMarkdownRemark","nodes","_sortBy","group","reverse","author","language","site","siteMetadata","Layout","SEO","url","Info","Tab","postsCount","activeTab","SideTagList","PostList"],"sourceRoot":""}