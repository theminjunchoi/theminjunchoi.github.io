<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[RSS Feed of minjun.blog]]></title><description><![CDATA[안녕하세요, 최민준입니다 :)]]></description><link>https://minjun.blog</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 15 Oct 2025 01:26:43 GMT</lastBuildDate><item><title><![CDATA[커피빵(CoffeeShout) Race Condition 해결]]></title><description><![CDATA[+ Race Condition 조회 후 쓰기 작업이 많은 도메인 특성상 Race Condition이 발생할 수 있다. Pub/Sub…]]></description><link>https://minjun.blog/coffeeshout_redis_stream/</link><guid isPermaLink="false">https://minjun.blog/coffeeshout_redis_stream/</guid><pubDate>Wed, 15 Oct 2025 09:44:21 GMT</pubDate><content:encoded>&lt;h2&gt;+ Race Condition&lt;/h2&gt;
&lt;p&gt;조회 후 쓰기 작업이 많은 도메인 특성상 Race Condition이 발생할 수 있다. Pub/Sub 메시지 전파에는 약간의 지연(수 밀리초~수십 밀리초)이 존재하기 때문에, 극히 짧은 순간 동안 서로 다른 인스턴스가 다른 게임 상태를 볼 수 있다.&lt;/p&gt;
&lt;p&gt;예를 들어 다음과 같은 &lt;strong&gt;동시성 문제&lt;/strong&gt;가 발생할 수 있다:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;상황: 서버 1에 유저 A, 서버 2에 유저 B가 각각 연결된 상태

1. 유저 A, B 모두 &quot;카드 1&quot;이 선택되지 않은 상태를 확인
2. 유저 A와 B가 거의 동시에 &quot;카드 1&quot; 선택 요청 전송
3. 서버 1, 2가 각각 로컬 캐시 기준으로 검증 후 &quot;카드 1 선택&quot; 이벤트 발행
4. 각 서버가 Pub/Sub 메시지를 수신하지만, 수신 순서가 다를 수 있음
5. 결과적으로 서버마다 &quot;카드 1&quot;을 선택한 유저가 다르게 기록됨&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이는 &lt;strong&gt;분산 환경에서 발생하는 전형적인 Race Condition&lt;/strong&gt; 문제다.&lt;/p&gt;
&lt;h3&gt;Redis Streams 도입&lt;/h3&gt;
&lt;p&gt;이 문제를 해결하기 위해 &lt;strong&gt;방 입장&lt;/strong&gt;과 &lt;strong&gt;카드 선택&lt;/strong&gt; 로직에만 &lt;strong&gt;Redis Streams&lt;/strong&gt;를 적용했다.&lt;/p&gt;
&lt;p&gt;우리 게임은 다음과 같은 제약 조건이 있다:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;동일한 닉네임으로 중복 입장 불가&lt;/li&gt;
&lt;li&gt;이미 선택된 카드는 다른 유저가 선택 불가&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;기존 Redis Pub/Sub 구조로는 이벤트 순서를 보장할 수 없어 위와 같은 동시성 제어가 불가능했다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Redis Streams를 도입한 방식:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;방 입장/카드 선택 이벤트를 Redis Stream에 발행&lt;/li&gt;
&lt;li&gt;Stream이 이벤트를 &lt;strong&gt;순서대로 보관&lt;/strong&gt; (메시지 큐 역할)&lt;/li&gt;
&lt;li&gt;각 서버 인스턴스가 &lt;strong&gt;Consumer Group&lt;/strong&gt;을 통해 이벤트를 순차적으로 가져감&lt;/li&gt;
&lt;li&gt;이벤트를 처리한 인스턴스만 로컬 캐시 업데이트 및 ACK 전송&lt;/li&gt;
&lt;li&gt;다른 인스턴스들은 Pub/Sub을 통해 최종 결과만 수신&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;이를 통해:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;이벤트 순서 보장&lt;/strong&gt;: Stream이 발행 순서대로 이벤트 관리&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;중복 처리 방지&lt;/strong&gt;: Consumer Group의 메시지 분배로 단 하나의 인스턴스만 처리&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;메시지 유실 방지&lt;/strong&gt;: ACK 기반으로 처리 실패 시 재처리 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;결과적으로 &lt;strong&gt;동시성이 중요한 로직에만 Redis Streams를 선택적으로 적용&lt;/strong&gt;하고, 나머지는 Pub/Sub으로 빠르게 동기화하는 &lt;strong&gt;하이브리드 구조&lt;/strong&gt;를 구축했다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[커피빵(CoffeeShout) 분산환경 구축]]></title><description><![CDATA[단일 인스턴스 목표 TPS 커피빵은 게임 기반 실시간 서비스이기 때문에 유저 간의 양방향 통신을 위해 웹소켓 통신을 이용하고 있다. 웹소켓 통신의 경우 서버가 각 클라이언트의 구독 상태를 세션별로 메모리에서 관리하고 있는데, REST API…]]></description><link>https://minjun.blog/coffeeshout_infra_design/</link><guid isPermaLink="false">https://minjun.blog/coffeeshout_infra_design/</guid><pubDate>Mon, 13 Oct 2025 09:44:21 GMT</pubDate><content:encoded>&lt;h2&gt;단일 인스턴스 목표 TPS&lt;/h2&gt;
&lt;p&gt;커피빵은 게임 기반 실시간 서비스이기 때문에 유저 간의 양방향 통신을 위해 웹소켓 통신을 이용하고 있다. 웹소켓 통신의 경우 서버가 각 클라이언트의 구독 상태를 세션별로 메모리에서 관리하고 있는데, REST API와는 다르게 연결이 지속적으로 유지되면서 이벤트 브로드캐스팅과 메시지 라우팅을 처리해야 한다. 이 과정에서 동시 접속자 수가 증가하면 메시지 처리 대기열이 쌓이게 되고, 결과적으로 응답 지연이 발생하는 메시지 처리 병목 현상이 생기게 된다.&lt;/p&gt;
&lt;p&gt;단일 인스턴스로 운영하던 서비스 초반, 하나의 EC2(AWS t4g.small)로 버틸 수 있는 처리량을 측정하기 위해 부하 테스트를 진행했다. 웹소켓 요청 처리(Inbound)와 응답 전송(Outbound) 각각의 스레드 풀 크기와 TPS를 점진적으로 증가시키며 테스트했고, 컨텍스트 스위칭 오버헤드로 인한 레이턴시 증가가 발생하기 직전 시점을 기준으로 아래와 같은 최적값을 도출했다.&lt;/p&gt;
&lt;h4&gt;Inbound 스레드 풀&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;코어, 최대 스레드 32개&lt;/li&gt;
&lt;li&gt;큐 크기 2048&lt;/li&gt;
&lt;li&gt;TPS 373 기준 P99 레이턴시 113ms&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Outbound 스레드 풀&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;코어, 최대 스레드 16개&lt;/li&gt;
&lt;li&gt;큐 크기 4096&lt;/li&gt;
&lt;li&gt;TPS 2800 기준 P99 레이턴시 92ms&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이런 설정값을 유지했을 때 250명 정도가 동시 접속 가능한데, 더 많은 유저들이 몰리게 되면 어떻게 될까?&lt;/p&gt;
&lt;h2&gt;분산환경 구축 옵션&lt;/h2&gt;
&lt;p&gt;예산이 제한된 상황에서는 스케일 업(Scale-up)보다 스케일 아웃(Scale-out)을 우선 고려하게 된다. 그런데 여기서 추가적인 문제가 발생한다. 현재 이 서비스는 게임 세션 데이터를 DB가 아닌 &lt;strong&gt;인메모리(in-memory)&lt;/strong&gt; 방식으로만 관리하고 있다. 즉, 같은 게임 세션에 참여하는 모든 유저는 &lt;strong&gt;동일한 인스턴스에 웹소켓 연결&lt;/strong&gt;을 유지해야 한다.&lt;/p&gt;
&lt;p&gt;만약 아무 고려 없이 단순 스케일 아웃을 진행하면, 같은 게임 세션의 유저들이 서로 다른 인스턴스에 분산 연결될 수 있고, 이 경우 각 인스턴스가 서로 다른 게임 상태를 가지게 되어 &lt;strong&gt;게임 동기화가 깨지는 문제&lt;/strong&gt;가 발생한다.&lt;/p&gt;
&lt;p&gt;이를 해결하기 위해 고려할 수 있는 방안은 다음과 같다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;MySQL을 활용한 실시간 상태 동기화&lt;/strong&gt;: 모든 게임 상태 변경을 즉시 MySQL에 저장하고, 각 인스턴스가 DB를 조회하며 게임 진행&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Redis를 원격 캐시로 사용&lt;/strong&gt;: Redis를 공유 세션 저장소로 활용하여 모든 인스턴스가 동일한 게임 상태 참조&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;로컬 캐시 + Redis Pub/Sub 동기화&lt;/strong&gt;: 각 인스턴스가 로컬 메모리에 캐시를 유지하되, Redis Pub/Sub을 통해 상태 변경 이벤트를 브로드캐스팅하여 동기화&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;각 방안의 장단점을 비교하면 다음과 같다.&lt;/p&gt;
&lt;h4&gt;1. MySQL을 활용한 실시간 상태 동기화&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;장점&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터 영속성 보장. 서버 재시작 시에도 게임 상태 복구 가능&lt;/li&gt;
&lt;li&gt;별도 학습 곡선 없이 해결 가능&lt;/li&gt;
&lt;li&gt;트랜잭션 지원으로 데이터 정합성 확보&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;단점&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;매 액션마다 &lt;strong&gt;디스크 I/O 발생&lt;/strong&gt;으로 레이턴시 급증. 실시간 게임에선 치명적&lt;/li&gt;
&lt;li&gt;동시 접속자 증가 시 DB 커넥션 풀 고갈 및 &lt;strong&gt;병목 발생&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;DB 부하 분산을 위해 결국 Read Replica나 샤딩 필요 → 복잡도 상승&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;2. Redis를 원격 캐시로 사용&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;장점&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;디스크 I/O 없이 메모리에서 바로 조회하므로 MySQL 대비 빠름&lt;/li&gt;
&lt;li&gt;모든 인스턴스가 단일 Redis를 바라보므로 &lt;strong&gt;상태 일관성 자동 보장&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;세션 데이터 TTL 설정으로 자동 만료 처리 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;단점&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;모든 요청이 네트워크를 타므로 로컬 메모리 대비 &lt;strong&gt;네트워크 레이턴시 존재&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;매 요청마다 직렬화/역직렬화 오버헤드 발생&lt;/strong&gt;. 특히 복잡한 객체 구조일수록 성능 저하 심각&lt;/li&gt;
&lt;li&gt;Redis 장애 시 전체 서비스 마비 → &lt;strong&gt;SPOF(Single Point of Failure)&lt;/strong&gt; 위험&lt;/li&gt;
&lt;li&gt;Redis Cluster 구성 시 추가 비용 및 운영 복잡도 증가&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;3. 로컬 캐시 + Redis Pub/Sub 동기화&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;장점&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;읽기는 로컬 메모리에서 처리 → &lt;strong&gt;가장 빠른 응답속도&lt;/strong&gt;. 네트워크 통신 및 직렬화/역직렬화 불필요&lt;/li&gt;
&lt;li&gt;Redis는 동기화 메시지 전파 용도로만 사용하므로 부하 최소화&lt;/li&gt;
&lt;li&gt;Redis 일시 장애 시에도 로컬 캐시로 서비스 지속 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;단점&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Pub/Sub 메시지 전파 지연으로 &lt;strong&gt;일시적 데이터 불일치(Eventual Consistency)&lt;/strong&gt; 발생 가능&lt;/li&gt;
&lt;li&gt;구현 복잡도 높음. 캐시 무효화(invalidation) 로직 정교하게 설계 필요&lt;/li&gt;
&lt;li&gt;메시지 유실 시 동기화 깨질 위험 존재&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Redis를 원격 캐시로 사용&lt;/h3&gt;
&lt;p&gt;게임 특성상 유저 간 인터랙션이 빈번하게 발생하는데, 이를 MySQL 같은 RDBMS로 처리하기엔 레이턴시 측면에서 무리가 있었다. 또한 팀 내에서 Redis에 대한 사전 지식이 없어서, 학습 목적도 겸해 Redis 도입을 결정했다.&lt;/p&gt;
&lt;p&gt;2번과 3번 옵션 중 무엇을 선택할지 고민하다가, &lt;strong&gt;직접 구현해서 성능을 비교&lt;/strong&gt;해보기로 하고 2번 옵션부터 적용했다.&lt;/p&gt;
&lt;h4&gt;동작 방식&lt;/h4&gt;
&lt;p&gt;모든 게임 세션 데이터를 &lt;strong&gt;중앙 집중식 Redis&lt;/strong&gt;에 저장하고, 각 서버 인스턴스는 로컬 메모리에 데이터를 보관하지 않는 방식이다. 대신 게임 로직 실행 시 매번 Redis에서 데이터를 조회하고 수정한다.&lt;/p&gt;
&lt;h4&gt;처리 흐름 예시&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1. 유저 A가 &quot;카드 1번&quot; 선택 액션 전송
2. 서버 1이 Redis에서 게임 세션 데이터 조회 후 역직렬화 → Java 객체 변환
3. 비즈니스 로직 처리 (카드 효과 적용, 게임 상태 업데이트 등)
4. 변경된 객체를 직렬화 → Redis에 저장
5. 모든 서버 인스턴스가 변경된 Redis 데이터를 조회 및 역직렬화 후 연결된 유저들에게 브로드캐스팅&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;문제점&lt;/h4&gt;
&lt;p&gt;이 방식의 가장 큰 문제는 &lt;strong&gt;직렬화/역직렬화가 빈번하게 발생&lt;/strong&gt;한다는 점이다. 게임 로직 실행 중 매번 Redis를 거쳐야 하므로, 다음과 같은 오버헤드가 발생한다:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;읽기 작업&lt;/strong&gt;: Redis 조회 → 역직렬화 → 비즈니스 로직 실행&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;쓰기 작업&lt;/strong&gt;: Redis 조회 → 비즈니스 로직 실행 → 직렬화 → Redis 저장&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;특히 도메인 객체가 복잡할수록(중첩된 객체, 컬렉션 등) 직렬화 비용이 급격히 증가한다. 실제로 게임 세션 객체는 플레이어 리스트, 선택된 메뉴, 미니게임 상태 등 여러 계층의 데이터를 포함하고 있어, 한 번의 직렬화/역직렬화에 수 밀리초가 소요됐다.&lt;/p&gt;
&lt;p&gt;모든 구현을 완료하고 로컬 환경에서 약 300개의 테스트를 실행한 결과, &lt;strong&gt;기존 인메모리 방식 대비 2배 이상의 실행 시간&lt;/strong&gt;이 소요되는 것을 확인했다. 실시간 게임에서 이 정도 성능 저하는 유저 경험에 직접적인 영향을 미치는 치명적인 문제였다.&lt;/p&gt;
&lt;p&gt;또한 이 구조는 &lt;strong&gt;Redis에 과도한 부하를 가한다&lt;/strong&gt;는 문제도 있다. 모든 게임 로직이 Redis를 거쳐야 하므로, 동시 접속자가 증가하면 Redis가 애플리케이션 서버보다 먼저 병목이 될 가능성이 높다.&lt;/p&gt;
&lt;h3&gt;로컬 캐시 + Redis Pub/Sub 동기화&lt;/h3&gt;
&lt;p&gt;결국 우리는 3번으로 구현 방식을 바꿨다.&lt;/p&gt;
&lt;h4&gt;동작 방식&lt;/h4&gt;
&lt;p&gt;각 서버 인스턴스가 게임 세션 데이터를 &lt;strong&gt;로컬 메모리(인메모리 캐시)에 보관&lt;/strong&gt;하고, 상태 변경이 발생하면 &lt;strong&gt;Redis Pub/Sub을 통해 다른 인스턴스들에게 변경 이벤트를 브로드캐스팅&lt;/strong&gt;하는 방식이다. 각 인스턴스는 메시지를 수신하면 자신의 로컬 캐시를 업데이트한다.&lt;/p&gt;
&lt;h4&gt;처리 흐름 예시&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;1. 유저 A가 &quot;카드 1번&quot; 선택 액션 전송 (서버 1에 연결)
2. 서버 1이 로컬 메모리에서 게임 세션 데이터 조회 (역직렬화 불필요)
3. 비즈니스 로직 처리 (카드 효과 적용, 게임 상태 업데이트)
4. 서버 1이 변경 이벤트를 Redis Pub/Sub으로 발행 (Publish)
5. 같은 게임 세션을 구독(Subscribe)하고 있는 서버 2, 3이 메시지 수신
6. 각 서버가 자신의 로컬 캐시 업데이트 후 연결된 유저들에게 브로드캐스팅&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;2번 방식과의 차이점&lt;/h4&gt;
&lt;p&gt;가장 큰 차이는 &lt;strong&gt;읽기 작업이 로컬 메모리에서 처리&lt;/strong&gt;된다는 점이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2번 방식: 매번 네트워크 통신 + 직렬화/역직렬화 필요&lt;/li&gt;
&lt;li&gt;3번 방식: 읽기는 로컬 메모리에서 즉시 처리, 쓰기 시에만 Pub/Sub 메시지 발행&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2번 방식은 게임 상태를 읽을 때도, 쓸 때도 항상 Redis를 거쳐야 한다. 반면 3번 방식은 &lt;strong&gt;데이터가 이미 로컬에 있기 때문에&lt;/strong&gt; 비즈니스 로직 실행 중 발생하는 모든 읽기 작업이 네트워크 없이 바로 처리된다.&lt;/p&gt;
&lt;h4&gt;성능 개선 결과&lt;/h4&gt;
&lt;p&gt;동일한 300개 테스트 실행 결과, &lt;strong&gt;기존 인메모리 단일 인스턴스 방식과 거의 동일한 성능&lt;/strong&gt;을 확인했다. 이벤트 발행과 읽는 시점에서 직렬화/역직렬화가 필요했지만, 그 크기가 2번의 상황보다 훨씬 적기 때문에 오버헤드가 적었다.&lt;/p&gt;
&lt;h2&gt;참고자료&lt;/h2&gt;
&lt;h3&gt;Redis 공식 자료&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://redis.io/docs/latest/develop/pubsub/&quot;&gt;Redis Pub/Sub&lt;/a&gt; - Pub/Sub 공식 가이드&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://redis.io/docs/latest/develop/reference/protocol-spec/&quot;&gt;RESP Protocol Specification&lt;/a&gt; - RESP 프로토콜 공식 명세&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/redis/redis/blob/unstable/src/pubsub.c&quot;&gt;Redis GitHub - pubsub.c&lt;/a&gt; - Pub/Sub 구현 소스코드&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[실시간 리스크 분석 시스템을 설계해보자]]></title><description><![CDATA[스크린샷 2025-10-12 오후 2.54.20.png스크린샷 2025-10-12 오후 2.54.30.png 전체 아키텍처 한 줄 요약 1. 데이터 수집 CDC(Debezium)로 RDB Binlog 읽어서 Kafka로 전송 왜? RDB…]]></description><link>https://minjun.blog/면접스터디_5주차/</link><guid isPermaLink="false">https://minjun.blog/면접스터디_5주차/</guid><pubDate>Tue, 11 Feb 2025 09:44:21 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/attachments/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-10-12%20%EC%98%A4%ED%9B%84%202.54.20.png&quot; alt=&quot;스크린샷 2025-10-12 오후 2.54.20.png&quot;&gt;&lt;img src=&quot;/attachments/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-10-12%20%EC%98%A4%ED%9B%84%202.54.30.png&quot; alt=&quot;스크린샷 2025-10-12 오후 2.54.30.png&quot;&gt;&lt;/p&gt;
&lt;h3&gt;전체 아키텍처 한 줄 요약&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;RDB → CDC → Kafka → Flink(1분 윈도우 집계) → Redis(캐시) → 리스크 판단 → 알림&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;h3&gt;1. 데이터 수집&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CDC(Debezium)로 RDB Binlog 읽어서 Kafka로 전송&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;왜? RDB 직접 폴링(SELECT)하면 TPS 5000에 DB 터짐&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2. 실시간 처리&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Kafka 파티션 50개&lt;/strong&gt; (거래점 ID 기준 파티셔닝)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Flink로 1분 윈도우 집계&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;거래점별 취소율, 거래액 계산&lt;/li&gt;
&lt;li&gt;State Backend(RocksDB)로 중간 상태 관리&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3. 데이터 저장&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Redis (Hot Cache):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;최근 1시간: 1분 단위 집계&lt;/li&gt;
&lt;li&gt;최근 7일: 일 단위 평균 취소율 (배치로 미리 계산)&lt;/li&gt;
&lt;li&gt;전일 10억 이상 거래점 목록&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;TimescaleDB (분석용):&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;히스토리 데이터 적재&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;4. 리스크 판단&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;조건1: 취소율 2배 증가&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;최근 1시간 취소율 vs 7일 평균 비교&lt;/li&gt;
&lt;li&gt;7일 평균은 배치로 미리 계산해서 Redis 캐싱&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;조건2: 거래액 50% 급감&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;전일 10억 이상 거래점만 체크&lt;/li&gt;
&lt;li&gt;당일 누적 vs 전일 비교 (같은 시간대 기준)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;5. 스케일링&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;롱테일 대응&lt;/strong&gt;: 상위 1% 거래점은 Salting으로 Key 분산&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;병렬 처리&lt;/strong&gt;: Flink Parallelism 50, Task Manager 10대,,.... 몰라&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Redis Cluster&lt;/strong&gt;: 샤딩으로 부하 분산&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;Q&amp;#x26;A&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Q: 왜 CDC 써야 함?&lt;/strong&gt;
A: RDB 폴링하면 SELECT 쿼리로 DB 부하 터짐. CDC는 Binlog만 읽어서 부하 없음.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: 왜 Kafka?&lt;/strong&gt;
A:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;버퍼 역할 (Flink 죽어도 데이터 유실 X)&lt;/li&gt;
&lt;li&gt;파티셔닝으로 병렬 처리 (TPS 5000 감당)&lt;/li&gt;
&lt;li&gt;순서 보장 (같은 거래점 순차 처리)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Q: 1분마다 10만 거래점 체크하면 Redis 부하는?&lt;/strong&gt;
A: 7일 평균은 배치로 미리 계산. 실시간엔 단순 조회만. Redis sub-ms라 10만 건도 OK.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: Hot Key 문제는?&lt;/strong&gt;
A: 상위 1% 거래점은 merchant_id에 랜덤 suffix 붙여서 파티션 분산. 읽을 땐 여러 Key 합산.
아니면 동적 파티션?&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: 장애 시 데이터 유실은?&lt;/strong&gt;
A: Flink Checkpointing 3분마다 + Kafka 3일 보관. 최악 3분치만 재처리.&lt;/p&gt;
&lt;hr&gt;
&lt;h2&gt;뭘 원하냐&lt;/h2&gt;
&lt;h3&gt;1. 대용량 트래픽 처리 경험 (최우선)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;보려는 것:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TPS 5000 같은 숫자 보고 &lt;strong&gt;&quot;어 이거 병렬 처리 해야겠네&quot;&lt;/strong&gt; 바로 떠올리는지&lt;/li&gt;
&lt;li&gt;단일 서버로 안 된다는 걸 아는지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;체크 포인트:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;파티셔닝, 샤딩 개념&lt;/li&gt;
&lt;li&gt;병렬 처리 (Kafka 파티션, Flink Parallelism)&lt;/li&gt;
&lt;li&gt;Hot Key 문제 인지 여부&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;못 하면:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&quot;음... DB에서 1분마다 SELECT 하면 되지 않을까요?&quot; ← 떨어짐 ㅋㅋ&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;2. 실시간 vs 배치 구분 (중요)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;보려는 것:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&quot;1분 단위&quot;라는 말 보고 &lt;strong&gt;실시간 스트리밍 처리&lt;/strong&gt;임을 인지하는지&lt;/li&gt;
&lt;li&gt;배치로 해결 못 한다는 걸 아는지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;체크 포인트:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;실시간: Kafka, Flink/Spark Streaming&lt;/li&gt;
&lt;li&gt;배치: Airflow, Spark Batch&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;근데 7일 평균은 배치로 미리 계산&lt;/strong&gt;하는 하이브리드 사고&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;못 하면:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&quot;배치 스케줄러로 1분마다 돌리면 되지 않나요?&quot; ← 이것도 아웃 ㅋ&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;3. 데이터 저장소 선택 (핵심)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;보려는 것:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RDB, Redis, TimeSeries DB 각각 &lt;strong&gt;언제 쓰는지&lt;/strong&gt; 아는지&lt;/li&gt;
&lt;li&gt;&quot;왜 그 DB를 선택했어?&quot; 물어봤을 때 대답 가능한지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;체크 포인트:&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;저장소&lt;/th&gt;
&lt;th&gt;용도&lt;/th&gt;
&lt;th&gt;이유&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Redis&lt;/td&gt;
&lt;td&gt;Hot Cache (최근 1시간)&lt;/td&gt;
&lt;td&gt;빠름, TTL 지원&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TimescaleDB&lt;/td&gt;
&lt;td&gt;히스토리 분석&lt;/td&gt;
&lt;td&gt;Time-series 특화&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RDB (원본)&lt;/td&gt;
&lt;td&gt;거래 데이터&lt;/td&gt;
&lt;td&gt;ACID, 신뢰성&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;못 하면:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&quot;다 MySQL에 넣으면 안 돼요?&quot; ← MySQL로 1분마다 10만 거래점 조회? ㅂㅂ&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;4. 시스템 설계 trade-off 이해&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;보려는 것:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&quot;완벽한 설계&quot;는 없음. &lt;strong&gt;트레이드오프&lt;/strong&gt;를 이해하는지&lt;/li&gt;
&lt;li&gt;장단점 말하면서 &lt;strong&gt;왜 이 선택을 했는지&lt;/strong&gt; 설명 가능한지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;예시:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q: CDC vs API 이벤트 발행 방식?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CDC: DB 로직 안 건드림, 운영 포인트 증가&lt;/li&gt;
&lt;li&gt;API: 깔끔한데 거래 서버 수정 필요&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Q: Kafka vs RabbitMQ?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kafka: 처리량 높음, 운영 복잡&lt;/li&gt;
&lt;li&gt;RabbitMQ: 간단한데 느림&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;5. 장애 대응&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;보려는 것:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&quot;Flink 죽으면?&quot; 같은 질문에 답하는지&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;SPOF(Single Point of Failure)&lt;/strong&gt; 없는 설계인지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;체크 포인트:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kafka Replication&lt;/li&gt;
&lt;li&gt;Flink Checkpointing&lt;/li&gt;
&lt;li&gt;Redis Cluster (Master-Replica)&lt;/li&gt;
&lt;li&gt;데이터 재처리 방안 (Kafka 메시지 보관)&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;6. 성능 병목 지점 파악&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;보려는 것:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&quot;어디가 병목일까?&quot; 스스로 찾아내는지&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;롱테일 분포&lt;/strong&gt; 같은 힌트 보고 Hot Key 문제 떠올리는지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;체크 포인트:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;상위 1% 거래점에 트래픽 집중 → Salting 필요&lt;/li&gt;
&lt;li&gt;Redis 메모리 계산 (10만 거래점 × 7일 = ?)&lt;/li&gt;
&lt;li&gt;Kafka Lag 모니터링&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3&gt;7. 도구/기술 이해도 (기본)&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;필수로 알아야 하는 것:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kafka 기본 개념 (Topic, Partition, Consumer Group)&lt;/li&gt;
&lt;li&gt;Redis 자료구조 (String, Set, Sorted Set)&lt;/li&gt;
&lt;li&gt;Flink/Spark Streaming 차이&lt;/li&gt;
&lt;li&gt;CDC가 뭔지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;있으면 좋은 것:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Debezium 설정 경험&lt;/li&gt;
&lt;li&gt;Flink Windowing (Tumbling, Sliding)&lt;/li&gt;
&lt;li&gt;TimescaleDB, ClickHouse 같은 Time-series DB&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[신규 자동이체 시스템을 설계해보자]]></title><description><![CDATA[스크린샷 2025-10-01 오후 8.40.41.png
스크린샷 2025-10-01 오후 8.40.51.png 0. 뭐가 중요할까 멱등성 보장 안 되면 중복 이체 발생 분산 환경에서 동시 실행 방지 안 하면 같은 이체…]]></description><link>https://minjun.blog/면접스터디_4주차/</link><guid isPermaLink="false">https://minjun.blog/면접스터디_4주차/</guid><pubDate>Tue, 11 Feb 2025 09:44:21 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/attachments/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-10-01%20%EC%98%A4%ED%9B%84%208.40.41.png&quot; alt=&quot;스크린샷 2025-10-01 오후 8.40.41.png&quot;&gt;
&lt;img src=&quot;/attachments/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-10-01%20%EC%98%A4%ED%9B%84%208.40.51.png&quot; alt=&quot;스크린샷 2025-10-01 오후 8.40.51.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;0. 뭐가 중요할까&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;멱등성 보장 안 되면 중복 이체 발생&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;분산 환경에서 동시 실행 방지 안 하면 같은 이체 2번 탐&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;부분 실패 시 데이터 정합성 깨짐&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;배치 처리 중 서버 죽으면 어디까지 했는지 모름&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;은행 API 장애 시 전체 멈춤&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;돈은 장애 대응이 핵심이다.&lt;/p&gt;
&lt;h2&gt;1. DB 테이블 구조&lt;/h2&gt;
&lt;p&gt;기본적인 테이블은 구축되어있다는 가정 하에, 장애 대응용 컬럼들 추가&lt;/p&gt;
&lt;h3&gt;1-1. 자동이체 설정 테이블 추가 사항&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;version(낙관적락용): 동시 수정 방지&lt;/li&gt;
&lt;li&gt;last_executed_at(마지막 실행 시간): 중복 실행 체크용&lt;/li&gt;
&lt;li&gt;&lt;em&gt;retry_count&lt;/em&gt;(재시도 횟수): 계속 실패하는 애들 파악용&lt;/li&gt;
&lt;li&gt;execution_lock_until(실행 락 만료 시간): 분산 락 대신 DB 락으로 쓸 수 있음
&lt;ul&gt;
&lt;li&gt;Redis 같은 외부 분산 락 시스템 쓰면 좋겠지만 Redis도 장애지점이 될 수 있거나&lt;/li&gt;
&lt;li&gt;인프라 제약이 있거나&lt;/li&gt;
&lt;li&gt;외부 의존성 없이 DB 만으로 해결하고 싶을 때&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1-2. 이체 이력 테이블 추가사항&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;*&lt;a href=&quot;https://docs.tosspayments.com/reference/using-api/authorization&quot;&gt;idempotency_key&lt;/a&gt; (*멱등성 키): 중복 실행 방지의 핵심
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;{transfer_id}:{실행예정일}:{nonce}&lt;/code&gt; 형태로 생성&lt;/li&gt;
&lt;li&gt;이게 없으면 같은 이체 2번 타는 거 못 막음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;external_transaction_id (외부 거래 ID): 은행 API 응답 ID
&lt;ul&gt;
&lt;li&gt;은행에서 실제로 처리했는지 조회할 때 필요&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;processing_started_at, processing_ended_at: 처리 시간 추적용&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1-3. 배치 실행 상태 테이블&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;배치 돌릴 때마다 레코드 하나 박음&lt;/li&gt;
&lt;li&gt;배치 ID, 시작 시각, 종료 시각, 처리 건수, 실패 건수, 상태(RUNNING/COMPLETED/FAILED)&lt;/li&gt;
&lt;li&gt;서버 죽었을 때 재시작 지점 찾는 용도&lt;/li&gt;
&lt;li&gt;배치가 RUNNING 상태로 2시간 넘게 있으면? → 장애 알람&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;2. 자동이체 실행 흐름&lt;/h2&gt;
&lt;p&gt;분산 환경 동시 실행 방지가 핵심
서버 2대 이상이거나 재부팅하면 여러번 배치를 돌 수 있음, 그럼 같은 이체 여러번 실행됨&lt;/p&gt;
&lt;h3&gt;해결책 1&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;분산락: Redis, DB (SELECT ... FOR UPDATE SKIP LOCKED)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;해결책 2&lt;/h3&gt;
&lt;p&gt;멱등성 키 생성: 같은 이체를 여러번 실행해도 한 번만 처리될 수 있게 해야함&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이체 실행 전에 idempotency_key 생성&lt;/li&gt;
&lt;li&gt;이력 테이블에 이미 같은 키 있는지 체크&lt;/li&gt;
&lt;li&gt;있으면? → 이미 처리했다는 거니까 스킵&lt;/li&gt;
&lt;li&gt;없으면? → 처리 진행&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;왜 중요하냐&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;서버 죽었다가 재시작할 때&lt;/li&gt;
&lt;li&gt;네트워크 타임아웃으로 재시도할 때&lt;/li&gt;
&lt;li&gt;이거 없으면 같은 금액 2번 빠져나감 → 고객 빡침 → 소송&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;상황 1: 부분 실패&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;한 청크(1000건) 처리 중 500번째에서 DB 락 타임아웃&lt;/li&gt;
&lt;li&gt;그럼 앞에 499건은? → 커밋됐으면 처리됨, 안 됐으면 롤백&lt;/li&gt;
&lt;li&gt;재시도할 때 499건 스킵하고 500번부터 해야 하는데 어떻게?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;해결:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;각 이체마다 별도 트랜잭션 (기본)&lt;/li&gt;
&lt;li&gt;근데 &lt;strong&gt;실패한 건 이력에 FAILED 찍고 다음 거 계속 처리&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;전체 배치는 멈추지 않음&lt;/li&gt;
&lt;li&gt;retry_count 증가시키고 다음 실행일은 그대로 (재시도용)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;상황 2: 타임 아웃과 서킷 브레이커&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;은행 API 응답 느려짐 (10초씩 걸림)&lt;/li&gt;
&lt;li&gt;20만 건 처리하면? → 2시간 넘게 걸림 → 실패&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;해결:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;각 은행 API 호출에 타임아웃 3초 설정&lt;/li&gt;
&lt;li&gt;3초 안에 응답 없으면 FAILED 처리하고 다음 거 진행&lt;/li&gt;
&lt;li&gt;연속으로 실패 많이 나면 서킷 브레이커 열어서 일시 중단&lt;/li&gt;
&lt;li&gt;특정 은행 API만 장애면 해당 은행 이체만 스킵하고 나머지 처리&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3. 이력 저장 방식&lt;/h2&gt;
&lt;h3&gt;이력은 절대 삭제/수정 불가능 (Immutable)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이력 테이블은 INSERT ONLY&lt;/li&gt;
&lt;li&gt;UPDATE/DELETE 권한 아예 안 줌&lt;/li&gt;
&lt;li&gt;법적 분쟁 생기면 이력이 증거&lt;/li&gt;
&lt;li&gt;수정 가능하면 &quot;회사가 조작했다&quot; 이런 얘기 나옴&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;감사 로그는 별도 저장소에&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;설정 변경 이력은 메인 DB 말고 별도 로그 저장소(ELK, S3)에도 백업&lt;/li&gt;
&lt;li&gt;누가, 언제, 어떤 IP에서, 뭘 바꿨는지 다 남김&lt;/li&gt;
&lt;li&gt;DB 날아가도 로그는 남아있어야 함&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;조회 성능 고려&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이력 테이블은 무조건 커짐 (20만 건 × 365일 = 7천만 건/년)&lt;/li&gt;
&lt;li&gt;파티셔닝 필수: 월별로 테이블 분리&lt;/li&gt;
&lt;li&gt;1년 지난 데이터는 콜드 스토리지로 이관&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;4. 성능 제약 대응 전략&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;하루 = 86,400초&lt;/li&gt;
&lt;li&gt;초당 20건 × 86,400초 = 1,728,000건 (이론적 최대치)&lt;/li&gt;
&lt;li&gt;보수적으로 20만건, 중요한 건 성능 제약이 있다~&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;4-1. 우선순위 큐 도입&lt;/h3&gt;
&lt;p&gt;20만 건을 동등하게 처리하면 안 됨.
우선순위:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;P0 (최우선): 월급, 공과금 같은 중요 이체&lt;/li&gt;
&lt;li&gt;P1 (일반): 일반 자동이체&lt;/li&gt;
&lt;li&gt;P2 (저우선): 소액 이체&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;실패 시 재시도 횟수도 우선순위별로 다르게.&lt;/p&gt;
&lt;h3&gt;4-2. 점진적 롤아웃&lt;/h3&gt;
&lt;p&gt;처음부터 20만 건 전부 돌리면 장애 시 임팩트 큼.
방법:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;처음 10분: 1만 건만 처리 → 모니터링&lt;/li&gt;
&lt;li&gt;이상 없으면: 5만 건 처리&lt;/li&gt;
&lt;li&gt;최종: 전체 처리&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;실패율 5% 넘으면 자동 중단하고 알람.&lt;/p&gt;
&lt;h3&gt;4-3. 백프레셔(Backpressure) 처리&lt;/h3&gt;
&lt;p&gt;DB나 은행 API가 버티기 힘들면:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;처리 속도 자동으로 줄임&lt;/li&gt;
&lt;li&gt;DB CPU 80% 넘으면 스레드 수 줄임&lt;/li&gt;
&lt;li&gt;은행 API 에러율 올라가면 요청 간격 늘림&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;4-4. 데드레터 큐 (DLQ)&lt;/h3&gt;
&lt;p&gt;계속 실패하는 이체:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;5번 재시도해도 실패하면 DLQ로 보냄&lt;/li&gt;
&lt;li&gt;별도로 수동 처리하거나 고객센터 통보&lt;/li&gt;
&lt;li&gt;메인 배치 흐름은 막지 않음&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;4-5. 장애 복구 시나리오&lt;/h3&gt;
&lt;p&gt;서버 죽었을 때:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;배치 상태 테이블에서 RUNNING 상태 찾음&lt;/li&gt;
&lt;li&gt;마지막 처리 시각 확인&lt;/li&gt;
&lt;li&gt;그 이후부터 재처리 (멱등성 키로 중복 방지)&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[지연의 원인을 찾아라]]></title><description><![CDATA[스크린샷 2025-09-28 오후 2.45.24.png스크린샷 2025-09-28 오후 2.45.33.png 0. 문제 원인 가설 세우기 P95가 15배 증가했는데, CPU, Memory 사용량이 정상 범위, 그럼 DB 관련 문제이지 않을까? DB…]]></description><link>https://minjun.blog/면접스터디_3주차/</link><guid isPermaLink="false">https://minjun.blog/면접스터디_3주차/</guid><pubDate>Sun, 28 Sep 2025 09:44:21 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/attachments/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-09-28%20%EC%98%A4%ED%9B%84%202.45.24.png&quot; alt=&quot;스크린샷 2025-09-28 오후 2.45.24.png&quot;&gt;&lt;img src=&quot;/attachments/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-09-28%20%EC%98%A4%ED%9B%84%202.45.33.png&quot; alt=&quot;스크린샷 2025-09-28 오후 2.45.33.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;0. 문제 원인 가설 세우기&lt;/h2&gt;
&lt;p&gt;P95가 15배 증가했는데, CPU, Memory 사용량이 정상 범위, 그럼 DB 관련 문제이지 않을까?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DB 커넥션 풀 고갈&lt;/li&gt;
&lt;li&gt;테이블 락 or 행 락 경합 (업데이트와 조회가 동시에)&lt;/li&gt;
&lt;li&gt;N+1 문제 (커넥션 오래 점유)&lt;/li&gt;
&lt;li&gt;복잡한 조회 쿼리 (인덱스 없음)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;1. 현재 상황에서 문제를 어떻게 해결할 수 있을까?&lt;/h2&gt;
&lt;h3&gt;1-1. 커넥션 풀 상태 진단&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# 현재 커넥션 풀 상태&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; localhost:8080/actuator/metrics/hikaricp.connections.active
&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; localhost:8080/actuator/metrics/hikaricp.connections.idle  
&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; localhost:8080/actuator/metrics/hikaricp.connections.pending

&lt;span class=&quot;token comment&quot;&gt;# 커넥션 획득 대기 시간&lt;/span&gt;
&lt;span class=&quot;token function&quot;&gt;curl&lt;/span&gt; localhost:8080/actuator/metrics/hikaricp.connections.acquire&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;1-2. DB 락 상황 확인&lt;/h3&gt;
&lt;p&gt;MySQL이 자체적으로 관리하는 메타데이터 저장소 infromation_schema가 있음&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot;&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; 
    r&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;trx_id waiting_trx_id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;token comment&quot;&gt;-- 대기 중인 트랜잭션 ID&lt;/span&gt;
    r&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;trx_mysql_thread_id waiting_thread&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;-- 대기 중인 스레드 ID&lt;/span&gt;
    SUBSTRING&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;r&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;trx_query&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; waiting_query&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;-- 대기 중인 쿼리&lt;/span&gt;
    b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;trx_id blocking_trx_id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;          &lt;span class=&quot;token comment&quot;&gt;-- 블로킹하는 트랜잭션 ID  &lt;/span&gt;
    b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;trx_mysql_thread_id blocking_thread&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;-- 블로킹하는 스레드 ID&lt;/span&gt;
    SUBSTRING&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;trx_query&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; blocking_query&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;-- 블로킹하는 쿼리&lt;/span&gt;
    w&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;blocking_lock_id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    w&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;requesting_lock_id
&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innodb_lock_waits w    &lt;span class=&quot;token comment&quot;&gt;-- 락 대기 정보&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;JOIN&lt;/span&gt; information_schema&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innodb_trx b &lt;span class=&quot;token keyword&quot;&gt;ON&lt;/span&gt; b&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;trx_id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; w&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;blocking_trx_id
&lt;span class=&quot;token keyword&quot;&gt;INNER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;JOIN&lt;/span&gt; information_schema&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;innodb_trx r &lt;span class=&quot;token keyword&quot;&gt;ON&lt;/span&gt; r&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;trx_id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; w&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;requesting_trx_id&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;예시 결과:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;waiting_trx_id | waiting_query              | blocking_trx_id | blocking_query
421036         | SELECT * FROM sales WHERE  | 421035          | UPDATE sales SET status=
421037         | SELECT * FROM sales WHERE  | 421035          | UPDATE sales SET status=
421038         | SELECT * FROM sales WHERE  | 421035          | UPDATE sales SET status=&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;트랜잭션 421035가 &lt;code class=&quot;language-text&quot;&gt;UPDATE sales SET status=...&lt;/code&gt; 실행 중&lt;/li&gt;
&lt;li&gt;트랜잭션 421036, 421037, 421038이 모두 대기&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1명이 3명을 막고 있는 상황&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1-3. 쿼리 성능 분석&lt;/h3&gt;
&lt;p&gt;슬로우 쿼리 확인:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot;&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;-- 최근 1시간 슬로우 쿼리&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; start_time&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; query_time&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; lock_time&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; rows_sent&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; rows_examined&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
       SUBSTRING&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sql_text&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; sql_preview
&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; mysql&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;slow_log 
&lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; start_time &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; DATE_SUB&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;NOW&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTERVAL&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;HOUR&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; query_time &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;LIMIT&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;실시간 프로세스 확인:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot;&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;user&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; host&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; db&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; command&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; state&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
       SUBSTRING&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;info&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; query_preview
&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; information_schema&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;processlist 
&lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; command &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;Sleep&apos;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;DESC&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;2. 시스템 상태와 지표를 종합해볼 때, 추정되는 문제 원인은?&lt;/h2&gt;
&lt;h3&gt;도메인 분석: 쇼핑몰 판매자 대시보드&lt;/h3&gt;
&lt;h4&gt;판매자 대시보드&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;실시간 판매량, 매출액&lt;/li&gt;
&lt;li&gt;상품별 판매 현황&lt;/li&gt;
&lt;li&gt;주문 처리 상태&lt;/li&gt;
&lt;li&gt;리뷰/평점 통계&lt;/li&gt;
&lt;li&gt;정산 관련 데이터&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;조회 많은 시간&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;오전 9~11시: 판매자들 출근해서 전날 매출 확인&lt;/li&gt;
&lt;li&gt;저녁 6~8시: 하루 마감 전 최종 확인&lt;/li&gt;
&lt;li&gt;특정 이벤트 시: 타임세일 등&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;유력 원인: 대용량 집계 쿼리의 실시간 계산&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;판매자 &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;명이 동시에 대시보드 조회
↓
각자 n개씩 복잡한 집계 쿼리 실행  
↓
총 n * &lt;span class=&quot;token number&quot;&gt;100&lt;/span&gt;개의 무거운 쿼리가 동시 실행
↓
DB 리소스 경합 → 모든 쿼리 느려짐
↓
P95 &lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;배 증가&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;오늘 매출 집계, 상품별 판매량 Top 10, 미처리 주문 수 등 실시간 데이터를 조회하는데, 이 과정에서 복잡한 Join이 생김.&lt;/li&gt;
&lt;li&gt;인덱스가 없으면 풀 스캔을 해야함&lt;/li&gt;
&lt;li&gt;복잡한 쿼리를 요구하는 대시보드 조회 요청이 많아지면 커넥션 풀까지 고갈&lt;/li&gt;
&lt;li&gt;근데 timeout이라면 로그가 남아야하는데 안남음.&lt;/li&gt;
&lt;li&gt;커넥션 반환이 늦어지면서 톰캣이 새로운 요청을 못받아서 그 밖에서 500에러가 터짐&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;3. 서비스 안정성을 위해 즉각적으로 취할 수 있는 대응 방법은?&lt;/h2&gt;
&lt;h3&gt;3-1. 커넥션 풀 확장 &amp;#x26; CPU 스펙 향상&lt;/h3&gt;
&lt;p&gt;maxinum-pool-size 증가
connection-timeout 증가
validation-timesout 증가&lt;/p&gt;
&lt;h3&gt;3-2. 쿼리 최적화&lt;/h3&gt;
&lt;p&gt;핵심 인덱스 생성&lt;/p&gt;
&lt;h2&gt;4. 문제 해결 및 재발 방지를 위한 근본적인 개선책은?&lt;/h2&gt;
&lt;h3&gt;4-1. Primary-Replica 구조로 DB부하 분산&lt;/h3&gt;
&lt;h3&gt;4-2. 로컬 or Redis 캐시 도입&lt;/h3&gt;
&lt;p&gt;인기 상품이 있을 경우, 구매가 자주일어나서 매번 캐시를 초기화하는 건 성능 저하 유발
성능을 위해 5분, 10분 or 하루단위로 새벽에 캐싱 도입&lt;/p&gt;
&lt;h2&gt;4-3. 집계 테이블 도입: 미리 계산해두기&lt;/h2&gt;
&lt;h3&gt;근본적인 문제는 실시간 계산&lt;/h3&gt;
&lt;p&gt;판매자가 대시보드를 조회할 때마다 아래와 같은 쿼리가 항목별로 발생함&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot;&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;-- 오늘 매출 계산 (실시간)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;SELECT&lt;/span&gt; 
    &lt;span class=&quot;token function&quot;&gt;COUNT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; order_count&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;SUM&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;oi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;quantity &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; oi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;price&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;as&lt;/span&gt; total_amount
&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; orders o
&lt;span class=&quot;token keyword&quot;&gt;JOIN&lt;/span&gt; order_items oi &lt;span class=&quot;token keyword&quot;&gt;ON&lt;/span&gt; o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; oi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;order_id  
&lt;span class=&quot;token keyword&quot;&gt;JOIN&lt;/span&gt; products p &lt;span class=&quot;token keyword&quot;&gt;ON&lt;/span&gt; oi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;product_id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; p&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;id
&lt;span class=&quot;token keyword&quot;&gt;WHERE&lt;/span&gt; p&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;seller_id &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;12345&lt;/span&gt; 
  &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;created_at &lt;span class=&quot;token operator&quot;&gt;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;2024-01-15 00:00:00&apos;&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;created_at &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;2024-01-16 00:00:00&apos;&lt;/span&gt;
  &lt;span class=&quot;token operator&quot;&gt;AND&lt;/span&gt; o&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;status&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;PAID&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;SHIPPED&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;DELIVERED&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;-- 데이터량: orders 100만건 × order_items 300만건 × products 50만건&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;-- 실행시간: 5-8초&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;-- 결과: order_count=157, total_amount=2,340,000&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;같은 계산을 반복&lt;/strong&gt;: 판매자가 새로고침할 때마다 똑같은 집계 연산&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;데이터량은 계속 증가&lt;/strong&gt;: 주문 쌓일수록 계산 시간 늘어남&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;동시 요청시 부하 급증&lt;/strong&gt;: 100명이 동시 조회하면 100번 계산&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;집계 테이블 모습&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;sql&quot;&gt;&lt;pre class=&quot;language-sql&quot;&gt;&lt;code class=&quot;language-sql&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;-- 집계 테이블 (미리 계산된 결과 저장)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;TABLE&lt;/span&gt; seller_daily_stats &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    seller_id &lt;span class=&quot;token keyword&quot;&gt;BIGINT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    stat_date &lt;span class=&quot;token keyword&quot;&gt;DATE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    order_count &lt;span class=&quot;token keyword&quot;&gt;INT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;           &lt;span class=&quot;token comment&quot;&gt;-- 미리 계산된 주문 수&lt;/span&gt;
    total_amount &lt;span class=&quot;token keyword&quot;&gt;DECIMAL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;-- 미리 계산된 총액&lt;/span&gt;
    avg_amount &lt;span class=&quot;token keyword&quot;&gt;DECIMAL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;   &lt;span class=&quot;token comment&quot;&gt;-- 미리 계산된 평균&lt;/span&gt;
    updated_at &lt;span class=&quot;token keyword&quot;&gt;TIMESTAMP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;PRIMARY&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;KEY&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;seller_id&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; stat_date&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;-- 데이터 예시&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;INTO&lt;/span&gt; seller_daily_stats &lt;span class=&quot;token keyword&quot;&gt;VALUES&lt;/span&gt; 
&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;12345&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;2024-01-15&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;157&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2340000.00&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;14904.46&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;NOW&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;동시 요청 부하 해결&lt;/li&gt;
&lt;li&gt;커넥션 점유 시간 단축&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;집계 테이블 업데이트 전략&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;실시간 업데이트&lt;/li&gt;
&lt;li&gt;배치 업데이트&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;</content:encoded></item><item><title><![CDATA[How Redis Pub/Sub Works]]></title><description><![CDATA[coffeeshout_infra_design 지난 글에서 이어집니다! Redis pub/sub Redis Pub/Sub의 동작 원리를 이해하면 왜 이 방식이 실시간 게임 동기화에 적합한지 명확해진다. Redis 내부 구조 Redis 서버는 C…]]></description><link>https://minjun.blog/how_redis_pubsub_works/</link><guid isPermaLink="false">https://minjun.blog/how_redis_pubsub_works/</guid><pubDate>Tue, 14 Oct 2025 09:44:21 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;/coffeeshout_infra_design&quot; data-wiki-link=&quot;true&quot;&gt;coffeeshout_infra_design&lt;/a&gt; 지난 글에서 이어집니다!&lt;/p&gt;
&lt;h2&gt;Redis pub/sub&lt;/h2&gt;
&lt;p&gt;Redis Pub/Sub의 동작 원리를 이해하면 왜 이 방식이 실시간 게임 동기화에 적합한지 명확해진다.&lt;/p&gt;
&lt;h3&gt;Redis 내부 구조&lt;/h3&gt;
&lt;p&gt;Redis 서버는 C로 구현되어 있으며, Pub/Sub 기능은 내부적으로 매우 단순한 자료구조로 동작한다. Redis 서버의 &lt;code class=&quot;language-text&quot;&gt;redisServer&lt;/code&gt; 구조체는 다음과 같은 Pub/Sub 관련 정보를 메모리에 유지한다:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c&quot;&gt;&lt;pre class=&quot;language-c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;redisServer&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    dict &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;pubsub_channels&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;// 채널명 → 구독자 리스트 해시테이블&lt;/span&gt;
    list &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;pubsub_patterns&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;token comment&quot;&gt;// 패턴 구독자들 링크드리스트&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;클라이언트가 &lt;code class=&quot;language-text&quot;&gt;SUBSCRIBE room.events&lt;/code&gt;를 실행하면, Redis는 &lt;code class=&quot;language-text&quot;&gt;pubsub_channels&lt;/code&gt; 해시테이블에서 해당 채널을 찾고, 구독자 리스트에 클라이언트를 추가한다. 이후 &lt;code class=&quot;language-text&quot;&gt;PUBLISH room.events {...}&lt;/code&gt; 메시지가 들어오면, 해시테이블에서 채널을 O(1)로 조회하고 구독자 리스트를 순회하며 메시지를 전송한다.&lt;/p&gt;
&lt;h3&gt;메시지 전달 흐름&lt;/h3&gt;
&lt;p&gt;커피빵 서비스에서 플레이어가 Ready 상태를 변경하는 과정을 예로 들어보자.&lt;/p&gt;
&lt;h4&gt;1. 클라이언트가 WebSocket으로 메시지 전송&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 브라우저에서 전송&lt;/span&gt;
stompClient&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/app/room/ABC123/update-ready&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stringify&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token literal-property property&quot;&gt;joinCode&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;ABC2&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token literal-property property&quot;&gt;playerName&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;홍길동&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token literal-property property&quot;&gt;isReady&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;2. Spring WebSocket Controller가 수신&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@MessageMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/room/{joinCode}/update-ready&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;broadcastReady&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@DestinationVariable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; joinCode&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
                          &lt;span class=&quot;token class-name&quot;&gt;ReadyChangeMessage&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PlayerReadyEvent&lt;/span&gt; event &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PlayerReadyEvent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        joinCode&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; 
        message&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;playerName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        message&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isReady&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    roomEventPublisher&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;publishEvent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Spring이 STOMP 프로토콜로 들어온 메시지를 파싱해 컨트롤러로 라우팅한다. 이후 도메인 이벤트인 &lt;code class=&quot;language-text&quot;&gt;PlayerReadyEvent&lt;/code&gt;를 생성하며, 이때 이벤트 ID와 타임스탬프가 자동으로 생성된다.&lt;/p&gt;
&lt;h4&gt;3. RedisTemplate의 convertAndSend()&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;T&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RoomBaseEvent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;publishEvent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;T&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    redisTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;convertAndSend&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;roomEventTopic&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getTopic&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;RedisTemplate&lt;/code&gt;은 Spring Data Redis가 제공하는 추상화 레이어다. 내부에서는 다음 과정이 순차적으로 실행된다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// RedisTemplate 내부 동작&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;convertAndSend&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; channel&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 1. 채널명 직렬화: &quot;room.events&quot; → byte[]&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; rawChannel &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;room.events&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBytes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;StandardCharsets&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;UTF_8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// 2. 메시지 객체 직렬화: PlayerReadyEvent → JSON → byte[]&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;GenericJackson2JsonRedisSerializer&lt;/span&gt; serializer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; rawMessage &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; serializer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;serialize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 결과: {&quot;eventId&quot;:&quot;uuid-123&quot;,&quot;joinCode&quot;:&quot;ABC2&quot;,&quot;playerName&quot;:&quot;홍길동&quot;,&quot;isReady&quot;:true,...}&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// 3. Lettuce Connection으로 전달&lt;/span&gt;
    connection&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;rawChannel&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; rawMessage&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;4. Lettuce의 RESP 프로토콜 변환&lt;/h4&gt;
&lt;p&gt;Lettuce는 Netty 기반의 비동기 Redis 클라이언트다. Redis와 통신하기 위해서는 **RESP(REdis Serialization Protocol)**라는 Redis 전용 프로토콜로 변환해야 한다.&lt;/p&gt;
&lt;p&gt;RESP는 Redis의 표준 통신 규약으로, 텍스트 기반의 간단한 프로토콜이다. 각 데이터 타입을 특정 문자로 시작해 구분한다:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;*&lt;/code&gt; : 배열 (Array)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;$&lt;/code&gt; : 문자열 길이 (Bulk String)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;:&lt;/code&gt; : 정수 (Integer)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;+&lt;/code&gt; : 단순 문자열 (Simple String)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;-&lt;/code&gt; : 에러 (Error)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;예를 들어 &lt;code class=&quot;language-text&quot;&gt;PUBLISH room.events {&quot;data&quot;:&quot;...&quot;}&lt;/code&gt; 명령은 다음과 같이 변환된다:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;*3\r\n
$7\r\n
PUBLISH\r\n
$11\r\n
room.events\r\n
$152\r\n
{&quot;eventId&quot;:&quot;uuid-123&quot;,&quot;joinCode&quot;:&quot;ABC2&quot;,&quot;playerName&quot;:&quot;홍길동&quot;,&quot;isReady&quot;:true,...}\r\n&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;해석하면:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;*3&lt;/code&gt;: 3개 요소를 가진 배열&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;$7&lt;/code&gt;: 7바이트 문자열 → &lt;code class=&quot;language-text&quot;&gt;PUBLISH&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;$11&lt;/code&gt;: 11바이트 문자열 → &lt;code class=&quot;language-text&quot;&gt;room.events&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;$152&lt;/code&gt;: 152바이트 문자열 → JSON 메시지&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Lettuce 내부 코드로 보면 다음과 같다&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Lettuce 내부&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; channel&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// RESP 프로토콜로 인코딩&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;CommandArgs&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; args &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;CommandArgs&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;codec&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addKey&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;channel&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;token comment&quot;&gt;// room.events&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// JSON 메시지&lt;/span&gt;
    
    &lt;span class=&quot;token class-name&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; command &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; commandBuilder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// Netty를 통해 비동기 전송&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;dispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;command&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lettuce는 Netty의 &lt;code class=&quot;language-text&quot;&gt;ByteBuf&lt;/code&gt;에 RESP 형식의 바이트 데이터를 작성한 뒤, 비동기로 전송한다.&lt;/p&gt;
&lt;h4&gt;5. Netty의 비동기 네트워크 통신&lt;/h4&gt;
&lt;p&gt;Netty는 Java NIO를 기반으로 한 비동기 네트워크 프레임워크다. Lettuce가 Netty를 사용하는 이유는 &lt;strong&gt;논블로킹 I/O&lt;/strong&gt;와 &lt;strong&gt;커넥션 재사용&lt;/strong&gt; 때문이다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Netty 내부 (간략화)&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;Channel&lt;/span&gt; channel &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getChannel&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// Redis 서버와의 TCP 연결&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// ByteBuf에 RESP 데이터 작성&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;ByteBuf&lt;/span&gt; buffer &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; channel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;alloc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;buffer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
buffer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;writeBytes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;respProtocolBytes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// 비동기 전송&lt;/span&gt;
&lt;span class=&quot;token class-name&quot;&gt;ChannelFuture&lt;/span&gt; future &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; channel&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;writeAndFlush&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;buffer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// 결과를 기다리지 않고 즉시 리턴 (Non-blocking)&lt;/span&gt;
future&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;addListener&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;writeCompleteListener&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Netty는 내부적으로 &lt;strong&gt;이벤트 루프(Event Loop)&lt;/strong&gt; 스레드를 사용해 여러 커넥션의 I/O를 효율적으로 처리한다. 하나의 스레드가 수천 개의 커넥션을 동시에 관리할 수 있어, 커넥션마다 스레드를 생성하는 전통적인 방식보다 훨씬 효율적이다.&lt;/p&gt;
&lt;p&gt;최종적으로 TCP 소켓을 통해 Redis 서버로 데이터가 전송된다.&lt;/p&gt;
&lt;h4&gt;6. Redis 서버의 메시지 처리&lt;/h4&gt;
&lt;p&gt;Redis 서버는 &lt;strong&gt;단일 스레드 이벤트 루프&lt;/strong&gt; 구조로 동작한다. 멀티스레딩 없이 어떻게 수천 개의 동시 연결을 처리할 수 있을까? 바로 &lt;strong&gt;I/O 멀티플렉싱(I/O Multiplexing)&lt;/strong&gt; 기술 덕분이다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;I/O 멀티플렉싱이란?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;전통적인 블로킹 I/O 방식에서는 &lt;code class=&quot;language-text&quot;&gt;read()&lt;/code&gt;를 호출하면 데이터가 도착할 때까지 스레드가 대기한다. 1000개의 클라이언트를 처리하려면 1000개의 스레드가 필요하고, 이는 컨텍스트 스위칭 비용으로 성능 저하를 일으킨다.&lt;/p&gt;
&lt;p&gt;I/O 멀티플렉싱은 &lt;strong&gt;하나의 스레드가 여러 소켓을 동시에 감시&lt;/strong&gt;할 수 있게 해준다. Linux의 &lt;code class=&quot;language-text&quot;&gt;epoll&lt;/code&gt;, BSD/macOS의 &lt;code class=&quot;language-text&quot;&gt;kqueue&lt;/code&gt; 같은 시스템 콜이 이 기능을 제공한다.&lt;/p&gt;
&lt;p&gt;동작 방식:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;수백~수천 개의 소켓을 &lt;code class=&quot;language-text&quot;&gt;epoll&lt;/code&gt;에 등록&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;epoll_wait()&lt;/code&gt; 호출 → 이벤트(데이터 도착, 쓰기 가능 등) 발생 시까지 대기&lt;/li&gt;
&lt;li&gt;이벤트 발생 시 어떤 소켓에서 이벤트가 발생했는지 반환&lt;/li&gt;
&lt;li&gt;해당 소켓에서만 &lt;code class=&quot;language-text&quot;&gt;read()&lt;/code&gt; 또는 &lt;code class=&quot;language-text&quot;&gt;write()&lt;/code&gt; 수행&lt;/li&gt;
&lt;li&gt;다시 &lt;code class=&quot;language-text&quot;&gt;epoll_wait()&lt;/code&gt;로 돌아가 다음 이벤트 대기&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Redis는 이 방식으로 단일 스레드로도 초당 수만 건의 요청을 처리한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c&quot;&gt;&lt;pre class=&quot;language-c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Redis 이벤트 루프 (간략화)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;aeMain&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;aeEventLoop &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;eventLoop&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;eventLoop&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;stop&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// epoll_wait() 호출 - 이벤트 발생 시까지 대기&lt;/span&gt;
        numevents &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;aeApiPoll&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;eventLoop&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tvp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; numevents&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; j&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            aeFileEvent &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;fe &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;eventLoop&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;events&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;eventLoop&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;fired&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;j&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;fd&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            
            &lt;span class=&quot;token comment&quot;&gt;// 읽기 이벤트 (클라이언트가 데이터 전송)&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fe&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;mask &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt; AE_READABLE&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                fe&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;rfileProc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;eventLoop&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; fd&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; fe&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;clientData&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mask&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
            
            &lt;span class=&quot;token comment&quot;&gt;// 쓰기 이벤트 (클라이언트에게 전송 가능)&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fe&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;mask &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt; AE_WRITABLE&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                fe&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;wfileProc&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;eventLoop&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; fd&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; fe&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;clientData&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mask&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;클라이언트가 &lt;code class=&quot;language-text&quot;&gt;PUBLISH&lt;/code&gt; 명령을 보내면:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c&quot;&gt;&lt;pre class=&quot;language-c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 1. 소켓에서 데이터 읽기 (간략화)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;readQueryFromClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;aeEventLoop &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;el&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; fd&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;privdata&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; mask&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    client &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;c &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;client&lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; privdata&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// TCP 소켓에서 데이터 읽기&lt;/span&gt;
    nread &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fd&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; c&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;querybuf &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; qblen&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; readlen&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// RESP 프로토콜 파싱&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;processInputBuffer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// 2. PUBLISH 명령 실행 (간략화)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;publishCommand&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;client &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;c&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// c-&gt;argv[1] = &quot;room.events&quot; (채널명)&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// c-&gt;argv[2] = JSON 메시지&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; receivers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// pubsub_channels 해시테이블에서 채널 조회 (O(1))&lt;/span&gt;
    dictEntry &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;de &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;dictFind&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;server&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;pubsub_channels&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; c&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;argv&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;de&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        list &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;subscribers &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;dictGetVal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;de&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token comment&quot;&gt;// 구독자 리스트 순회 (O(N), N=구독자 수)&lt;/span&gt;
        listNode &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;ln&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        listIter li&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;listRewind&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;subscribers&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;li&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ln &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;listNext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;amp;&lt;/span&gt;li&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            client &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;subscriber &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ln&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            
            &lt;span class=&quot;token comment&quot;&gt;// 각 구독자의 output buffer에 메시지 추가&lt;/span&gt;
            &lt;span class=&quot;token function&quot;&gt;addReplyPubsubMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;subscriber&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; c&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;argv&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; c&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;argv&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            receivers&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// 발행자에게 응답: 몇 명에게 전송했는지&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;addReplyLongLong&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; receivers&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// 3. output buffer의 데이터를 실제로 전송 (간략화)&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;writeToClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; fd&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; client &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt;c&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; handler_installed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;clientHasPendingReplies&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// write() 시스템콜로 TCP 소켓에 전송&lt;/span&gt;
        nwritten &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;fd&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; c&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;buf &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; c&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;sentlen&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; c&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;bufpos &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; c&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;sentlen&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;nwritten &lt;span class=&quot;token operator&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        
        c&lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;sentlen &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; nwritten&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이 과정에서 Redis는 메시지를 저장하지 않는다. 받자마자 바로 구독자들의 output buffer에 추가하고 전송한다. 이것이 &lt;strong&gt;Fire-and-Forget&lt;/strong&gt; 방식이며, 실시간성을 극대화하는 설계다.&lt;/p&gt;
&lt;h4&gt;7. 구독자 측 수신 및 처리&lt;/h4&gt;
&lt;p&gt;각 서버 인스턴스의 Lettuce 클라이언트가 메시지를 수신하면, RESP 프로토콜을 디코딩해 Spring의 &lt;code class=&quot;language-text&quot;&gt;MessageListener&lt;/code&gt;로 전달한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;onMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Message&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; pattern&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 1. 메시지 body를 String으로 변환&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// 2. eventType 추출&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;RoomEventType&lt;/span&gt; eventType &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;extractEventType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// PLAYER_READY&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// 3. JSON을 Java 객체로 역직렬화&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;PlayerReadyEvent&lt;/span&gt; event &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; objectMapper&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;readValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PlayerReadyEvent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// 4. 핸들러로 위임&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;RoomEventHandler&lt;/span&gt; handler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; handlerFactory&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;eventType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    handler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;8. 비즈니스 로직 실행&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;PlayerReadyEvent&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// 로컬 메모리에서 Room 조회 (네트워크 통신 없음)&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;Room&lt;/span&gt; room &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; roomQueryService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getByJoinCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;JoinCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;joinCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// Player 찾기&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;Player&lt;/span&gt; player &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; room&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;findPlayer&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;PlayerName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;playerName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// 상태 변경 (로컬 메모리)&lt;/span&gt;
    player&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;updateReadyState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isReady&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// 로컬 캐시 업데이트&lt;/span&gt;
    roomCommandService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;room&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// WebSocket 브로드캐스팅&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;PlayerResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; responses &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; room&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPlayers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;PlayerResponse&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    
    messagingTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;convertAndSend&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token string&quot;&gt;&quot;/topic/room/&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; event&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;joinCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;token class-name&quot;&gt;WebSocketResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;responses&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;여기서 핵심은 &lt;strong&gt;데이터 조회가 로컬 메모리에서 즉시 처리&lt;/strong&gt;된다는 점이다. 네트워크 통신도, 직렬화/역직렬화도 필요 없다. Redis는 오직 변경 이벤트를 전파하는 메시지 브로커 역할만 수행한다.&lt;/p&gt;
&lt;h4&gt;9. 최종 클라이언트 수신&lt;/h4&gt;
&lt;p&gt;Spring WebSocket이 STOMP 프로토콜로 메시지를 인코딩해 해당 방을 구독 중인 모든 WebSocket 세션에 전송한다. 각 브라우저는 메시지를 수신해 UI를 업데이트한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;stompClient&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;subscribe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;/topic/room/ABC123&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;message&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;// {success: true, data: [{playerName: &quot;홍길동&quot;, isReady: true}, ...]}&lt;/span&gt;
    
    &lt;span class=&quot;token function&quot;&gt;updatePlayerList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;주요 특징과 트레이드오프&lt;/h3&gt;
&lt;h4&gt;Fire-and-Forget 방식&lt;/h4&gt;
&lt;p&gt;Redis Pub/Sub은 메시지를 저장하지 않는다. 구독자가 없거나 네트워크 문제로 수신하지 못하면 메시지는 유실된다. 이는 실시간성을 위한 설계 선택이다. 메시지 저장 없이 즉시 전달만 하기 때문에 레이턴시가 최소화된다.&lt;/p&gt;
&lt;p&gt;커피빵의 경우 대부분의 이벤트가 일시적 상태 변경(Ready 상태, 메뉴 선택 등)이기 때문에 이런 특성이 오히려 적합했다. 메시지 유실을 무조건 막아야하거나 Race Condition이 발생할 수 있는 상황을 대비해서 일정부분은 Redis Stream을 적용했다.&lt;/p&gt;
&lt;h4&gt;네트워크 레이턴시&lt;/h4&gt;
&lt;p&gt;전체 메시지 전파 과정에서 발생하는 네트워크 구간은 다음과 같다:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;발행 서버 → Redis (TCP 왕복)&lt;/li&gt;
&lt;li&gt;Redis → 구독 서버들 (TCP 왕복 × N)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;동일 리전 내에서는 대략 1~5ms 정도의 지연이 발생한다. 이는 사람이 체감하기 어려운 수준이다.&lt;/p&gt;
&lt;h4&gt;언어 경계를 넘는 통신&lt;/h4&gt;
&lt;p&gt;흥미로운 점은 이 전체 과정에서 &lt;strong&gt;여러 언어와 프로토콜의 경계를 넘는다&lt;/strong&gt;는 것이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java 애플리케이션에서 이벤트 발행&lt;/li&gt;
&lt;li&gt;Lettuce(Java)가 RESP 프로토콜로 변환&lt;/li&gt;
&lt;li&gt;네트워크를 타고 Redis(C)로 전달&lt;/li&gt;
&lt;li&gt;Redis가 C 레벨의 해시테이블과 링크드리스트로 처리&lt;/li&gt;
&lt;li&gt;다시 네트워크를 타고 구독자의 Lettuce(Java)로 수신&lt;/li&gt;
&lt;li&gt;Java 객체로 복원돼 비즈니스 로직 실행&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;각 언어는 서로 다른 메모리 관리 방식과 자료구조를 사용하지만, RESP 프로토콜이라는 공통 인터페이스를 통해 안정적으로 통신한다. 이런 추상화 덕분에 개발자는 Redis 내부 구현을 몰라도 Pub/Sub을 사용할 수 있다.&lt;/p&gt;
&lt;p&gt;다만 이런 경계를 넘을 때마다 직렬화/역직렬화와 네트워크 비용이 발생한다는 점은 항상 염두에 둬야 한다. 그럼에도 불구하고 이 방식을 선택한 이유는, &lt;strong&gt;읽기 작업은 로컬 메모리에서 즉시 처리되고, 쓰기 작업만 네트워크를 타기 때문&lt;/strong&gt;이다. 결과적으로 성능 저하 없이 분산 환경 동기화를 달성할 수 있었다.&lt;/p&gt;
&lt;h2&gt;참고자료&lt;/h2&gt;
&lt;h3&gt;Redis 공식 자료&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://redis.io/docs/latest/develop/pubsub/&quot;&gt;Redis Pub/Sub&lt;/a&gt; - Pub/Sub 공식 가이드&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://redis.io/docs/latest/develop/reference/protocol-spec/&quot;&gt;RESP Protocol Specification&lt;/a&gt; - RESP 프로토콜 공식 명세&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/redis/redis/blob/unstable/src/pubsub.c&quot;&gt;Redis GitHub - pubsub.c&lt;/a&gt; - Pub/Sub 구현 소스코드&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Redis 내부 구조 분석&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://jameshfisher.com/2017/03/01/redis-pubsub-under-the-hood/&quot;&gt;Redis Pub/Sub under the hood&lt;/a&gt; - Redis Pub/Sub 소스코드 상세 분석 (Pusher 엔지니어 작성)&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[How Spring Handles WebSocket]]></title><description><![CDATA[how_spring_injects_httpsession 이 포스트를 읽고 오면 이해가 더 잘 됩니다! Spring에서 어떻게 WebSocket 연결을 수립할까? 그 과정을 찾아가보자. Spring에서 연결방식을 WebSocket…]]></description><link>https://minjun.blog/how_spring_handles_websocket/</link><guid isPermaLink="false">https://minjun.blog/how_spring_handles_websocket/</guid><pubDate>Tue, 12 Aug 2025 09:44:21 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;/how_spring_injects_httpsession&quot; data-wiki-link=&quot;true&quot;&gt;how_spring_injects_httpsession&lt;/a&gt; 이 포스트를 읽고 오면 이해가 더 잘 됩니다!&lt;/p&gt;
&lt;p&gt;Spring에서 어떻게 WebSocket 연결을 수립할까? 그 과정을 찾아가보자.&lt;/p&gt;
&lt;h2&gt;Spring에서 연결방식을 WebSocket으로 업그레이드 하는 방법&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;HTTP Request (GET /ws) 
	↓ 
DispatcherServlet.doService() 
	↓ 
DispatcherServlet.doDispatch() 
	↓ 
HandlerMapping.getHandler() (여기서 WebSocketHandlerMapping 사용) 
	↓ 
HandlerAdapter.handle() (여기서 HttpRequestHandlerAdapter 사용) 
	↓ 
WebSocketHttpRequestHandler.handleRequest() 
	↓ 
DefaultHandshakeHandler.doHandshake()
	↓ 
RequestUpgradeStrategy.upgrade() (HTTP 연결이 WebSocket 연결로 업그레이드)
	↓
DispatcherServlet 완전히 빠짐
	↓ 
이후 모든 메시지는 WebSocket 핸들러가 직접처리&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;handshake 성공 후에는?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;물리적 TCP 연결은 동일함&lt;/li&gt;
&lt;li&gt;메시지들은 DispatcherServlet을 안거쳐감&lt;/li&gt;
&lt;li&gt;Tomcat/Jetty가 직접 WebSocket 핸들러로 라우팅&lt;/li&gt;
&lt;li&gt;Spring WebSocket 인프라가 직접 처리&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;흐름 비교&lt;/h3&gt;
&lt;h4&gt;HTTP 요청&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;TCP → Tomcat → DispatcherServlet → Controller → 응답 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h4&gt;WebSocket 메시지 (handshake 성공 후)&lt;/h4&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;TCP → Tomcat WebSocket Container → SubProtocolWebSocketHandler → ChannelInterceptor → @MessageMapping&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;클라이언트에서 서버로&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;WebSocket Frame (STOMP CONNECT)
    ↓
SubProtocolWebSocketHandler.handleMessage() (서블릿 컨테이너가 호출함)
    ↓  
StompSubProtocolHandler.handleMessageFromClient()
    ↓
clientInboundChannel로 Spring Message 전송
    ↓
ChannelInterceptor (커스텀한 인터셉터가 여기서 동작!)
    ↓
SimpleBroker 또는 외부 브로커
    ↓
@MessageMapping 컨트롤러 (전후로 presend, postsend)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;SubProtocolWebSocketHandler.handleMessage() 호출&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;WebSocketSession&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WebSocketMessage&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  

	&lt;span class=&quot;token comment&quot;&gt;// 세션 갖고오기&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;WebSocketSessionHolder&lt;/span&gt; holder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sessions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;holder &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       session &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; holder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    
    &lt;span class=&quot;token comment&quot;&gt;// 프로토콜 핸들러 찾기 (STOMP, etc, ...)&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;SubProtocolHandler&lt;/span&gt; protocolHandler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;findProtocolHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  

	&lt;span class=&quot;token comment&quot;&gt;// 위임하기&lt;/span&gt;
    protocolHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;handleMessageFromClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;clientInboundChannel&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;holder &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       holder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setHasHandledMessages&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;StompSubProtocolHandler.handleMessageFromClient() 호출&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleMessageFromClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;WebSocketSession&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  
       &lt;span class=&quot;token class-name&quot;&gt;WebSocketMessage&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; webSocketMessage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MessageChannel&lt;/span&gt; targetChannel&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
  
    &lt;span class=&quot;token comment&quot;&gt;/* 위에서 생략된 내용들
    1. WebSocket 메시지 -&gt; ByteBuffer로 변환
    2. STOMP 프레임 디코딩
    3. 순서 보장처리 (하나의 메시지가 프레임단위로 쪼개져서 올 수도 있음)
    */&lt;/span&gt;

	&lt;span class=&quot;token comment&quot;&gt;// 4. 각 STOMP 메시지별 처리&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; message &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; messages&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token class-name&quot;&gt;StompHeaderAccessor&lt;/span&gt; headerAccessor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;  
             &lt;span class=&quot;token class-name&quot;&gt;MessageHeaderAccessor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAccessor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;StompHeaderAccessor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  

       &lt;span class=&quot;token class-name&quot;&gt;StompCommand&lt;/span&gt; command &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; headerAccessor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getCommand&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; isConnect &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;StompCommand&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;CONNECT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;command&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;StompCommand&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;STOMP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;command&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
       &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; sent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
		  &lt;span class=&quot;token comment&quot;&gt;// 5. 세션 정보를 Spring Message 헤더에 설정&lt;/span&gt;
          headerAccessor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setSessionId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          headerAccessor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setSessionAttributes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttributes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          headerAccessor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setUser&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getUser&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;isConnect&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             headerAccessor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setUserChangeCallback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;user &lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;user &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; user &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getPrincipal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                   &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;stompAuthentications&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; user&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
                &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
             &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
          headerAccessor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setHeader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SimpMessageHeaderAccessor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;HEART_BEAT_HEADER&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; headerAccessor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHeartbeat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          
          &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
            &lt;span class=&quot;token comment&quot;&gt;// 여기서 clientInboudChannel로 전송! &lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// → channelToUse.send()&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// → AbstractMessageChannel.send() &lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// → ChannelInterceptorChain.applyPreSend() &lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// → ChannelInterceptor.preSend() 호출됨! (Custom)&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// → 실제메시지 처리 (@MessageMapping)&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// → SimpleBrokerMessageHandler의 SubscriptionRegistry에 구독정보 저장&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// → ChannelInterceptorChain.applyPostSend()&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// → ChannelIntercaptor.postSend() 호출됨 (Custom)&lt;/span&gt;
	         &lt;span class=&quot;token class-name&quot;&gt;SimpAttributesContextHolder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttributesFromMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 
             sent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; channelToUse&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
             &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sent&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eventPublisher &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                   &lt;span class=&quot;token class-name&quot;&gt;Principal&lt;/span&gt; user &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getUser&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
                   &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;isConnect&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                      &lt;span class=&quot;token function&quot;&gt;publishEvent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eventPublisher&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SessionConnectEvent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; user&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
                   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
                   &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;StompCommand&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;SUBSCRIBE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;command&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                      &lt;span class=&quot;token function&quot;&gt;publishEvent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eventPublisher&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SessionSubscribeEvent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; user&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
                   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
                   &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;StompCommand&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;UNSUBSCRIBE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;command&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                      &lt;span class=&quot;token function&quot;&gt;publishEvent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;eventPublisher&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SessionUnsubscribeEvent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; user&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
                   &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
                &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
             &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             &lt;span class=&quot;token class-name&quot;&gt;SimpAttributesContextHolder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resetAttributes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;서버에서 클라이언트로!&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;@Controller에서 SimpMessagingTemplate.send()
    ↓
clientOutboundChannel로 메시지 전송
	↓
SimpleBroker 또는 외부 브로커
    ↓
SubProtocolWebSocketHandler.handleMessage()
    ↓
StompSubProtocolHandler.handleMessageToClient()
    ↓
WebSocket Frame으로 변환해서 클라이언트 전송 (Tomcat/Jetty에서)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;@Controller에서 SimpMessagingTemplate.send()&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@MessageMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/room/{joinCode}/update-players&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;broadcastPlayers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@DestinationVariable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; joinCode&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;PlayerResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; responses &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; roomService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAllPlayers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;joinCode&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;stream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;PlayerResponse&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;::&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;from&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toList&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
    messagingTemplate&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;convertAndSend&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/topic/room/&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; joinCode&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  
            &lt;span class=&quot;token class-name&quot;&gt;WebSocketResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;success&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;responses&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;SimpMessagingTemplate 내부동작&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;convertAndSend&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;D&lt;/span&gt; destination&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; payload&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; headers&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  
       &lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MessagePostProcessor&lt;/span&gt; postProcessor&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MessagingException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
  
    &lt;span class=&quot;token class-name&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; message &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doConvert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;payload&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; headers&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; postProcessor&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;destination&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// send -&gt; ... -&gt; AbstractMessageChannel.send()&lt;/span&gt;
&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; timeout&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;Assert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;notNull&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Message must not be null&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; messageToUse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;ChannelInterceptorChain&lt;/span&gt; chain &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ChannelInterceptorChain&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; sent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  

		&lt;span class=&quot;token comment&quot;&gt;// 커스텀한 interceptor의 presend 호출&lt;/span&gt;
       messageToUse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; chain&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;applyPreSend&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;messageToUse&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;messageToUse &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       
		&lt;span class=&quot;token comment&quot;&gt;// 등록된 모든 MessageHandler들에게 메시지 전달&lt;/span&gt;
		&lt;span class=&quot;token comment&quot;&gt;// SubProtocolWebSocketHandler.handleMessage 호출됨&lt;/span&gt;
       sent &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sendInternal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;messageToUse&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; timeout&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

		&lt;span class=&quot;token comment&quot;&gt;// 커스텀한 interceptor의 postsend 호출&lt;/span&gt;
       chain&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;applyPostSend&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;messageToUse&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sent&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       chain&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;triggerAfterSendCompletion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;messageToUse&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sent&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; sent&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       chain&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;triggerAfterSendCompletion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;messageToUse&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sent&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ex &lt;span class=&quot;token keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MessagingException&lt;/span&gt; messagingException&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; messagingException&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MessageDeliveryException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;messageToUse&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Failed to send message to &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Throwable&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token class-name&quot;&gt;MessageDeliveryException&lt;/span&gt; ex2 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;  
             &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MessageDeliveryException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;messageToUse&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;Failed to send message to &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       chain&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;triggerAfterSendCompletion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;messageToUse&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sent&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ex2&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; ex2&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;SubProtocolWebSocketHandler.handleMessage() 호출&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MessagingException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  

	&lt;span class=&quot;token comment&quot;&gt;// 1. 메시지에서 세션 id 추출&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; sessionId &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;resolveSessionId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sessionId &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isErrorEnabled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Could not find session id in &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  

	&lt;span class=&quot;token comment&quot;&gt;// 2. 해당 세션 찾기&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;WebSocketSessionHolder&lt;/span&gt; holder &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;sessions&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sessionId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;holder &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isDebugEnabled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          &lt;span class=&quot;token comment&quot;&gt;// The broker may not have removed the session yet  &lt;/span&gt;
          logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;No session for &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
  
    &lt;span class=&quot;token class-name&quot;&gt;WebSocketSession&lt;/span&gt; session &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; holder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
      &lt;span class=&quot;token comment&quot;&gt;// 3. 프로토콜 핸들러로 클라이언트에게 전송&lt;/span&gt;
     &lt;span class=&quot;token function&quot;&gt;findProtocolHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;handleMessageToClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SessionLimitExceededException&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isDebugEnabled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Terminating &apos;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; session &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&apos;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isWarnEnabled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Terminating &apos;&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; session &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;&apos;: &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;stats&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;incrementLimitExceededCount&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token function&quot;&gt;clearSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// clear first, session may be unresponsive  &lt;/span&gt;
          session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ex&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; secondException&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Failure while closing session &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; sessionId &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; secondException&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token comment&quot;&gt;// Could be part of normal workflow (for example, browser tab closed)  &lt;/span&gt;
       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isDebugEnabled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Failed to send message to client in &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; session &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;: &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;StompSubProtocolHandler.handleMessageToClient() (실제 전송)&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;  
&lt;span class=&quot;token annotation punctuation&quot;&gt;@SuppressWarnings&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;unchecked&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleMessageToClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;WebSocketSession&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token comment&quot;&gt;// ... 생략&lt;/span&gt;
    
    &lt;span class=&quot;token comment&quot;&gt;// 순서 보장&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;Runnable&lt;/span&gt; task &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;OrderedMessageChannelDecorator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getNextMessageTask&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;message&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;task &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token class-name&quot;&gt;Assert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isInstanceOf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ConcurrentWebSocketSessionDecorator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ConcurrentWebSocketSessionDecorator&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setMessageCallback&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;m &lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt; task&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  

	&lt;span class=&quot;token comment&quot;&gt;// 실제 클라이언트에게 전송&lt;/span&gt;
    &lt;span class=&quot;token function&quot;&gt;sendToClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; accessor&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; payload&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sendToClient&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;WebSocketSession&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;StompHeaderAccessor&lt;/span&gt; stompAccessor&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; payload&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;StompCommand&lt;/span&gt; command &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; stompAccessor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getCommand&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; bytes &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;stompEncoder&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stompAccessor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getMessageHeaders&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; payload&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; useBinary &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;payload&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session &lt;span class=&quot;token keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SockJsSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;  
             &lt;span class=&quot;token class-name&quot;&gt;MimeTypeUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;APPLICATION_OCTET_STREAM&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isCompatibleWith&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stompAccessor&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getContentType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token comment&quot;&gt;// Tomcat/Jetty 컨테이너로 전달&lt;/span&gt;
       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;useBinary&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;BinaryMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bytes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;TextMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;bytes&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SessionLimitExceededException&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token comment&quot;&gt;// Bad session, just get out  &lt;/span&gt;
       &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Throwable&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token comment&quot;&gt;// Could be part of normal workflow (for example, browser tab closed)  &lt;/span&gt;
       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isDebugEnabled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Failed to send WebSocket message to client in session &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       command &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;StompCommand&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;StompCommand&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;ERROR&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;command&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;close&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;CloseStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;PROTOCOL_ERROR&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             &lt;span class=&quot;token comment&quot;&gt;// Ignore  &lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;핵심 포인트&lt;/h2&gt;
&lt;h3&gt;SubProtocolWebSocketHandler&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SubProtocolWebSocketHandler&lt;/strong&gt;는 &lt;strong&gt;WebSocket ↔ Spring Messaging 브릿지 역할&lt;/strong&gt;을 하는 핵심 컴포넌트임&lt;/li&gt;
&lt;li&gt;WebSocketHandler 구현
&lt;ul&gt;
&lt;li&gt;WebSocket 컨테이너(Tomcat/Jetty)에서 호출&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;클라이언트 → 서버&lt;/strong&gt; 메시지 처리&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WebSocketMessage → Spring Message&lt;/strong&gt; 변환&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;MessageHandler 구현
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;clientOutboundChannel&lt;/strong&gt;에 구독자로 등록됨&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;서버 → 클라이언트&lt;/strong&gt; 메시지 처리&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Spring Message → WebSocket 프레임&lt;/strong&gt; 변환하도록 Tomcat/Jetty 호출&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ChannelInterceptor의 Presend/PostSend&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Input 메시지 (clientInboundChannel):
&lt;ul&gt;
&lt;li&gt;preSend → @MessageMapping 실행 → postSend&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Output 메시지 (clientOutboundChannel, 컨트롤러에서 전송):
&lt;ul&gt;
&lt;li&gt;preSend → 클라이언트 전송 → postSend&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;그래서 채팅 하나 보내면 inbound 채널에서 preSend/postSend 한 번, outbound 채널에서 preSend/postSend 또 한 번 실행됨&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[WebSocket Reconnection on App Switching]]></title><description><![CDATA[문제 상황 mvp를 빠르게 만들고 테스트를 하던 중, 다른 앱을 사용하다가 다시 돌아오면 웹소켓 통신이 안된다는 것을 발견했다. 찾아보니 모바일이든 pc…]]></description><link>https://minjun.blog/coffeeshout_websocket_reconnection_app_switching/</link><guid isPermaLink="false">https://minjun.blog/coffeeshout_websocket_reconnection_app_switching/</guid><pubDate>Wed, 13 Aug 2025 09:44:21 GMT</pubDate><content:encoded>&lt;h2&gt;문제 상황&lt;/h2&gt;
&lt;p&gt;mvp를 빠르게 만들고 테스트를 하던 중, &lt;strong&gt;다른 앱을 사용하다가 다시 돌아오면 웹소켓 통신이 안된다&lt;/strong&gt;는 것을 발견했다.&lt;/p&gt;
&lt;p&gt;찾아보니 모바일이든 pc의 각각의 기기에서 앱을 전환할 때 환경에 맞게 백그라운드에서 웹소켓을 유지하는 시간이 달랐고, 테스트를 결과 아이폰이나 맥북 기준 대부분 4~5초이내로 연결이 중단되는 것 같다.&lt;/p&gt;
&lt;p&gt;또 클라이언트 코드에서도 백그라운드 감지 로직이 없어서, OS에 의해 웹소켓이 연결 해제되면 감지조차 못했다.&lt;/p&gt;
&lt;p&gt;서버에서도 이렇게 연결이 끊어지고 구독이 해제되면, &lt;code class=&quot;language-text&quot;&gt;SimpleBrokerMessageHandler&lt;/code&gt;의 &lt;code class=&quot;language-text&quot;&gt;SubscriptionRegistry&lt;/code&gt;에 저장되어있던 구독정보가 자동으로 제거되기 때문에 서버가 클라이언트에게 메시지를 보낼 수 없게 된다.&lt;/p&gt;
&lt;p&gt;또 문제는 그렇게 재연결을 하려고 할 때 사용되는 세션 id가 기존에 사용하던 id가 아니어서 서버에서는 다른 세션 id이지만, 기존에 있던 사용자인지 알 수 있어야했다.&lt;/p&gt;
&lt;h2&gt;요구사항&lt;/h2&gt;
&lt;p&gt;앱 전환 시에도 사용자는 안정적으로 서비스를 이용할 수 있어야한다.&lt;/p&gt;
&lt;h3&gt;세부 요구사항&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;클라이언트는 서비스의 백 -&gt; 포그라운드 전환을 감지해서 연결을 재요청해줘야한다.&lt;/li&gt;
&lt;li&gt;서버는 다른 세션id를 들고 오는 클라이언트를 보고, 기존의 플레이어와 연동해줘야한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;전처리&lt;/h2&gt;
&lt;h3&gt;사용자와 player를 어떻게 관리할까?&lt;/h3&gt;
&lt;p&gt;현재 우리 서비스에서는 player를 구분할 수 있는 id인 고유식별자가 존재하지 않는다. DB를 사용하고 있지도 않고, player끼리의 구분이 필요한 상황이 없어서 id를 도입하지 않았다.&lt;/p&gt;
&lt;p&gt;대신 &lt;code class=&quot;language-text&quot;&gt;joinCode:playerName&lt;/code&gt;의 형식으로 room의 joinCode와 player의 playerName을 합성키처럼 활용했다. 그리고 웹소켓 연결시에 필요한 &lt;code class=&quot;language-text&quot;&gt;sessionId&lt;/code&gt;도 관리를 해주고 있어야 연결 재요청시에 해당 사용자가 기존 플레이어인지 구분을 할 수 있었다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// 플레이어 세션 매핑 관리  &lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ConcurrentHashMap&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; playerSessionMap&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// &quot;joinCode:playerName&quot; -&gt; sessionId  &lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ConcurrentHashMap&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; sessionPlayerMap&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// sessionId -&gt; &quot;joinCode:playerName&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Disconnect가 감지되면?&lt;/h3&gt;
&lt;p&gt;우선 서버에서 가장 먼저 서버에서 해줘야했던 건 Disconnect가 감지되면 room에서 해당 player를 제거해줘야했다. 그 사용자가 Disconnect 되어도 해당 room에 있던 다른 사용자들은 서비스를 계속 이용할 수 있어야했기에, Disconnect된 player 감지 및 제거가 필수였다.&lt;/p&gt;
&lt;p&gt;웹소켓 연결이 끊어지면 클라이언트로부터 Disconnect 메시지가 온다. 이를 서버가 받을 수 있는데, 이와 같은 메시지를 받는 과정은 &lt;a href=&quot;/how_spring_handles_websocket&quot; data-wiki-link=&quot;true&quot;&gt;how_spring_handles_websocket&lt;/a&gt;를 참고하면 좋다!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&apos;서버에서 Disconnect를 감지하면, 어느 단계에서 player를 room에서 지워줘야할까?&apos;를 많이 고민했다.&lt;/strong&gt; 그 과정에서 웹소켓을 구현한 Spring의 내부 구조를 많이 고민하고 실험을 했었는데, 지금까지 연결해제와 관련해서 정리된 내용은 아래와 같다!&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;클라이언트가 DISCONNECT 프레임 전송
	↓ 
PreSend 인터셉터 실행 (DISCONNECT 메시지 처리 전)
	↓ 
메시지 브로커가 DISCONNECT 프레임 처리 (라우팅은 없고 연결 종료 준비)
	↓ 
PostSend 인터셉터 실행 (DISCONNECT 메시지 처리 후)
	↓ 
TCP WebSocket 연결 종료
	↓ 
SubProtocolWebSocketHandler.afterConnectionClosed() ← WebSocket 레벨
	↓ 
clearSession() 호출
	↓ 
StompSubProtocolHandler.afterSessionEnded() ← STOMP 프로토콜 레벨
	↓ 
SessionDisconnectEvent 발행 &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이중에서 처음에는 postSend에서 player 제거를 구현했었다. 하지만 Interceptor의 주목적에 맞게 사용하는 것도 아니었고, Spring에서 tcp 소켓 연결 해제를 판단하는 시점보다 빨라서 정합성이 깨질 수도 있을 거라 생각했다. 또한 얼마전에 브라우저가 강제종료 됐을 때 클라이언트가 Disconnect 프레임을 전송하지도 못하고 바로 tcp 연결이 끊기면서 room에서 player가 제거되지 않는 문제도 발견했다.&lt;/p&gt;
&lt;p&gt;그래서 좀 더 살펴보니, Spring 내부에서 완전히 tcp 소켓이 끊어지면, STOMP 연결해제를 감지하고 자동으로 SessionDisconnectEvent을 발행해주고 있었고,  이를 잡아서 room에서 player를 지워주는 게 더 적절한 시점에 처리하는 것이라고 판단했다.&lt;/p&gt;
&lt;h2&gt;첫 번째 시도, 클라이언트 코드에서만 재연결을 추가해주면?&lt;/h2&gt;
&lt;p&gt;서버에서는 위에서 말한 것처럼 Disconnect가 감지되면 바로 room에서 player를 지워줬다.&lt;/p&gt;
&lt;p&gt;클라이언트 코드에서는 Page Visibility API를 사용해서 사용 중이던 서비스가 백그라운드에서 포그라운도 전환됐을 때를 감지해서 그 시점에 클라이언트가 서버로 웹소켓 연결을 재요청하도록 추가했다.&lt;/p&gt;
&lt;p&gt;서버에서는 연결 요청시에 오는 메시지의 헤더에 담긴 joinCode와 playerName을 보고 적절한 room을 찾아서 다시 player 객체를 만들어서 추가시켜줬다.&lt;/p&gt;
&lt;h3&gt;뭔가 어색하다.&lt;/h3&gt;
&lt;p&gt;잘 작동하긴 했다. 하지만 좀 어색하게 느껴졌던 건, 사용자가 앱 전환을 하자마자 room에서 player가 사라지는 모습이었다.&lt;/p&gt;
&lt;p&gt;다른 여타 비슷한 류의 게임을 살펴보면, 배틀그라운드든, 오버워치든, 텐텐이든 사용자가 앱 전환을 했을 때 바로 튕기게끔 하는 게 아니라 조금의 유예 시간을 주고, 그래도 사용자가 돌아오지 않았을 때 나가게 처리하는 모습을 볼 수 있었다.&lt;/p&gt;
&lt;p&gt;우리 서비스도 참고해보려고 했다.&lt;/p&gt;
&lt;h2&gt;두 번째 시도, 15초의 유예 시간을 주자&lt;/h2&gt;
&lt;p&gt;사용자의 Disconnect가 감지되면 조금의 유예 시간을 주도록 했다. joinCode를 다른 서비스에 공유하러 나가거나, 급한 알림을 확인하는 등의 상황을 고려했다. 그렇게 15초의 여유 시간을 줬고, 그 시간 안에도 서비스로 안돌아오면 room에서 player를 제거해주었다.&lt;/p&gt;
&lt;p&gt;이를 구현하기 위해 ScheduledFuture를 이용했다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;schedulePlayerRemoval&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; playerKey&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; sessionId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; reason&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    log&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;플레이어 지연 삭제 스케줄링: playerKey={}, sessionId={}, delay={}초&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  
            playerKey&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sessionId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;REMOVAL_DELAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSeconds&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;token comment&quot;&gt;// disconnect 된 플레이어는 ready 상태 false로 변경  &lt;/span&gt;
    playerDisconnectionService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;cancelReady&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;playerKey&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;token comment&quot;&gt;// 새로운 스케줄 등록  &lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ScheduledFuture&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; future &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; taskScheduler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                &lt;span class=&quot;token function&quot;&gt;executePlayerRemoval&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;playerKey&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; sessionId&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; reason&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
                stompSessionManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;removeSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;sessionId&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  
            &lt;span class=&quot;token class-name&quot;&gt;Instant&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;now&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;plus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;REMOVAL_DELAY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
    scheduledTasks&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;playerKey&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; future&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;그래서 잠시 앱을 전환하더라도 room에는 player가 남아있고, 대신 그렇게 잠시 나가있을 땐 host가 게임을 시작하지 못하도록 해줬다.&lt;/p&gt;
&lt;h2&gt;TODO&lt;/h2&gt;
&lt;p&gt;웹소켓은 네트워크 연결 방식이 바뀔 때도 연결이 끊기고, 새로운 세션id가 발급된다. 이런 상황은 앱 전환과 다르게 사용자가 컨트롤하지 못하는 상황도 있을거라 생각이 들어서 이 이슈도 우선적으로 해결해야할 것 같다.&lt;/p&gt;
&lt;p&gt;이 문제를 해결하면서, 게임 중에 연결이 끊기는 경우 게임시간을 어떻게 다시 전파해야할지, 끊긴 과정에서 못받은 메시지들은 어떻게 다시 전달해줘야할지 고민할 수 있을 것 같다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[우아한테크코스 GitHub]]></title><description><![CDATA[git remote add pair https:sdfsdfsdf
git fetch pair
git rebase pair/step1 // 무조건 step1에서 나가야됨
git checkout main
git remote add upstream https…]]></description><link>https://minjun.blog/우테코 git/</link><guid isPermaLink="false">https://minjun.blog/우테코 git/</guid><pubDate>Tue, 11 Feb 2025 09:44:21 GMT</pubDate><content:encoded>&lt;p&gt;git remote add pair https:sdfsdfsdf
git fetch pair
git rebase pair/step1&lt;/p&gt;
&lt;p&gt;// 무조건 step1에서 나가야됨
git checkout main
git remote add upstream &lt;a href=&quot;https://github.com/woowacourse/spring-roomescape-payment&quot;&gt;https://github.com/woowacourse/spring-roomescape-payment&lt;/a&gt;
git fetch upstream theminjunchoi
git rebase upstream/theminjunchoi
git checkout -b step2&lt;/p&gt;
&lt;p&gt;docker exec -it my-mysql-container mysql -u ec2_user -p&lt;/p&gt;</content:encoded></item><item><title><![CDATA[No title]]></title><description><![CDATA[Solution Chanllenge 올해도 있다 최소 하나 이상의 구글 기술을 이용해서 지역 문제 해결을 목표 작년은 유엔에서 선정한 문제들 중 5개 선정해서 진행했음 팀원은 최소 4명 작년은 필리핀 마닐라에서 데모데이가 진행됨 2…]]></description><link>https://minjun.blog/lead_onboarding/</link><guid isPermaLink="false">https://minjun.blog/lead_onboarding/</guid><pubDate>Tue, 11 Feb 2025 09:44:21 GMT</pubDate><content:encoded>&lt;h2&gt;Solution Chanllenge&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;올해도 있다&lt;/li&gt;
&lt;li&gt;최소 하나 이상의 구글 기술을 이용해서 지역 문제 해결을 목표&lt;/li&gt;
&lt;li&gt;작년은 유엔에서 선정한 문제들 중 5개 선정해서 진행했음&lt;/li&gt;
&lt;li&gt;팀원은 최소 4명&lt;/li&gt;
&lt;li&gt;작년은 필리핀 마닐라에서 데모데이가 진행됨&lt;/li&gt;
&lt;li&gt;26년 상반기에 열림&lt;/li&gt;
&lt;li&gt;정확한 일정은 모름&lt;/li&gt;
&lt;li&gt;올해는 3~5월 사이에 진행됨, 비슷하지 않을까&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Requirements&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;리드는 최소 1년이상 (권장)&lt;/li&gt;
&lt;li&gt;대학생 신분이어야함&lt;/li&gt;
&lt;li&gt;이벤트는 최소 3개월에 하나 이상 제대로된 이벤트를 열어야함&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;구글 엔지니어 커리어 세션&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;졸업생 및 현 멤버 대상&lt;/li&gt;
&lt;li&gt;11월 17일 (금)&lt;/li&gt;
&lt;li&gt;AI 시대의 커리어를 어떻게 쌓아야할까&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;이벤트 플랫폼&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;잘 사용해라&lt;/li&gt;
&lt;li&gt;모든 이벤트를 여기에 등록해라&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;CLP&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;어떤 이벤트를 열 수 있는지 확인할 수 있음&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://developers.google.com/community/community-hub&quot;&gt;https://developers.google.com/community/community-hub&lt;/a&gt; 이곳으로 이동 중&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://communityleads.dev/home/ls/content/8420169136588567/program-resources/google-developer-program&quot;&gt;https://communityleads.dev/home/ls/content/8420169136588567/program-resources/google-developer-program&lt;/a&gt; 이곳으로 이동 중&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;https://sites.google.com/view/gdeveloperskorea/gdg-on-campus?authuser=0&amp;#x26;pli=1&quot;&gt;https://sites.google.com/view/gdeveloperskorea/gdg-on-campus?authuser=0&amp;#x26;pli=1&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[엔제니어링 위크, 안전하게 마무리하기]]></title><description><![CDATA[스크린샷 2025-09-17 오후 10.45.10.png
스크린샷 2025-09-17 오후 10.45.19.png 문제1: Traffic Mirroring 방식과 주의사항 주의사항 데이터 무결성: 실제 DB…]]></description><link>https://minjun.blog/면접스터디_2주차/</link><guid isPermaLink="false">https://minjun.blog/면접스터디_2주차/</guid><pubDate>Tue, 11 Feb 2025 09:44:21 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/attachments/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-09-17%20%EC%98%A4%ED%9B%84%2010.45.10.png&quot; alt=&quot;스크린샷 2025-09-17 오후 10.45.10.png&quot;&gt;
&lt;img src=&quot;/attachments/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-09-17%20%EC%98%A4%ED%9B%84%2010.45.19.png&quot; alt=&quot;스크린샷 2025-09-17 오후 10.45.19.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;문제1: Traffic Mirroring 방식과 주의사항&lt;/h2&gt;
&lt;h3&gt;주의사항&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;데이터 무결성&lt;/strong&gt;: 실제 DB에 영향 주면 안 됨&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;성능 영향&lt;/strong&gt;: 미러링 때문에 레이턴시 늘어나면 안 됨&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;보안&lt;/strong&gt;: 테스트 환경에 실제 데이터 들어감
&lt;ul&gt;
&lt;li&gt;특히 결제관련 조심&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;네트워크 부하&lt;/strong&gt;: 트래픽 2배로 늘어남&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;문제2: Canary 배포에서 문제 상황과 대응&lt;/h2&gt;</content:encoded></item><item><title><![CDATA[DB 부하의 원인을해결해보자!]]></title><description><![CDATA[스크린샷 2025-09-14 오후 3.38.40.png 스크린샷 2025-09-14 오후 3.38.51.png 문제 원인 분석 매 시간 10분 단위로 발생, 특정 Key만 문제 발생 캐시의 TTL 이…]]></description><link>https://minjun.blog/면접스터디_1주차/</link><guid isPermaLink="false">https://minjun.blog/면접스터디_1주차/</guid><pubDate>Tue, 11 Feb 2025 09:44:21 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/attachments/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-09-14%20%EC%98%A4%ED%9B%84%203.38.40.png&quot; alt=&quot;스크린샷 2025-09-14 오후 3.38.40.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202025-09-14%20%EC%98%A4%ED%9B%84%203.38.51.png&quot; alt=&quot;스크린샷 2025-09-14 오후 3.38.51.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;문제 원인 분석&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;매 시간 10분 단위로 발생, 특정 Key만 문제 발생
&lt;ul&gt;
&lt;li&gt;캐시의 TTL 이 1시간이고, 특정 인기 데이터들이 같은 시점에 캐시 설정됨&lt;/li&gt;
&lt;li&gt;9시 10분에 캐싱됨, 10시 10분에 캐시 만료되고 다시 캐싱, 11시 10분에 캐시 만료되고 다시 캐싱, ...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;30초 후 자동 복구
&lt;ul&gt;
&lt;li&gt;새롭게 캐싱이 되면서 정상화&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이런 문제를 Cache Stampede 라고 부름&lt;/p&gt;
&lt;h2&gt;해결 전략&lt;/h2&gt;
&lt;h3&gt;TTL Jitter: 랜덤하게 만료하도록 설정&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;모든 핫 데이터가 매 시간 10분에 동일하게 만료되는 걸 랜덤하게 조정해서 만료 시점을 분산시킴&lt;/li&gt;
&lt;li&gt;이때 실시간성이 중요한 데이터일수록 Jitter를 작게&lt;/li&gt;
&lt;li&gt;하지만 각 시점별 트래픽이 여전히 기준치보다 크면 문제는 여전히 발생&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Single Flight Pattern: N개 동시 요청 중 1개만 DB 호출, 나머지는 대기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;첫 번째 요청 실패 시 연쇄적으로 나머지 전부 실패&lt;/li&gt;
&lt;li&gt;응답 시간 증가
&lt;ul&gt;
&lt;li&gt;요청 1: DB 호출 (5초 소요)&lt;/li&gt;
&lt;li&gt;요청 2~1000 : 5초 대기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;DB 요청이 자주 생긴다?
&lt;ul&gt;
&lt;li&gt;Circuit Breaker 도입&lt;/li&gt;
&lt;li&gt;요청 실패가 5번 누적이 되면, 그 이후 요청들은 빠르게 실패처리 후 응답보냄&lt;/li&gt;
&lt;li&gt;그동안 DB 복구하고 1분뒤 자동으로 재시도하게끔&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;하지만 여전히 캐시 만료는 발생하고, Single Flight Pattern을 도입하더라도 첫 번째 요청을 제외한 나머지 요청은 대기해야함. Circuit Breaker 작동하더라도 서비스 품질 이상함.&lt;/p&gt;
&lt;h3&gt;Proactive Refresh: TTL 20% 남았을 때 백그라운드 캐싱&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;캐시 만료 자체를 없앰, 사용자 요청 시에는 항상 캐시 있음&lt;/li&gt;
&lt;li&gt;간헐적 지연 상황 안생김, 일정한 성능 보장&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;그럼 Proactive Refresh 만 하면 되지, 나머지 전략은 왜 필요해?&lt;/h2&gt;
&lt;h3&gt;1. 갑작스런 새 인기 데이터 등장&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# 평소에는 조용했던 데이터가 갑자기 핫해짐
16:00 - 어떤 상품이 SNS에서 갑자기 바이럴
16:01 - 해당 상품 메타데이터에 요청 폭주 (10000 TPS)
16:02 - 캐시에 없음 → Proactive Refresh 대상도 아님
16:03 - 썬더링 허드 발생! 💥&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;2. Proactive Refresh 자체 실패&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# 백그라운드 갱신 중 실패 상황
15:50 - 백그라운드에서 캐시 갱신 시도
15:51 - DB 일시적 장애로 갱신 실패
15:52 - 재시도해도 계속 실패
16:00 - 결국 캐시 만료됨
16:01 - 사용자 요청 들어옴 → 캐시 없음 → 썬더링 허드 💥&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;3. 콜드 스타트&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# 서버 재시작 시
09:00 - 서버 재부팅 (배포 등)
09:01 - 캐시 모두 비워짐
09:02 - 출근 시간 트래픽 몰림
09:03 - 모든 데이터가 캐시 미스 → 대규모 썬더링 허드 💥&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;4. 트래픽 패턴 예측 실패&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# 예상치 못한 이벤트
평소: &quot;이 데이터는 하루에 100번 정도 조회되네&quot;
갑자기: 마케팅팀이 광고 때림 → 1분에 10000번 조회
결과: Proactive Refresh 주기 (5분마다)로는 따라갈 수 없음&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;실제 장애 시나리오&lt;/h2&gt;
&lt;h3&gt;Case 1: 마케팅 이벤트&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;14:00 - 마케팅팀이 갑자기 이벤트 오픈
14:01 - 특정 상품에 요청 폭주 (평소의 1000배)
14:02 - Proactive Refresh로는 감당 안 됨
14:03 - Single Flight 없었다면? → DB 뻗음 💥
14:03 - Single Flight 있어서 → 1개 요청만 DB, 나머지 대기 ✅&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Case 2: DB 장애&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;15:00 - Primary DB 장애 발생
15:10 - Proactive Refresh 계속 실패
15:20 - 캐시들 하나둘 만료 시작
15:30 - Circuit Breaker 없다면? → 모든 요청 타임아웃 💥
15:30 - Circuit Breaker 있어서 → 즉시 실패, Stale Cache 반환 ✅&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;Case 3: 코드 배포&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;16:00 - 새 버전 배포로 서버 재시작
16:01 - 모든 캐시 날라감 (Redis 외부 캐시 제외)
16:02 - 저녁 시간 트래픽 시작
16:03 - 모든 조합 필요함:
        - Jitter: 캐시 재생성 시점 분산
        - Single Flight: 중복 호출 방지  
        - Circuit Breaker: DB 보호
        - Proactive: 이후 안정화&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;보험의 개념&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# 자동차 보험 비유
proactive_refresh = &quot;안전 운전&quot;     # 99% 사고 방지
circuit_breaker = &quot;에어백&quot;         # 사고 시 피해 최소화  
single_flight = &quot;브레이크&quot;         # 위험 상황 대응
ttl_jitter = &quot;안전거리&quot;           # 연쇄 추돌 방지&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3&gt;99% vs 99.99%의 차이&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Proactive Refresh만&lt;/strong&gt;: 99% 안정성&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;4개 조합&lt;/strong&gt;: 99.99% 안정성&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;0.99%의 차이&lt;/strong&gt;가 별거 아닌 것 같지만:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;하루 100만 요청 → 1000번 장애&lt;/li&gt;
&lt;li&gt;한 달 → 30,000번 장애&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;매월 8시간씩 서비스 불안정&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;대규모 서비스에서는 &lt;strong&gt;이 차이가 엄청남&lt;/strong&gt;.&lt;/p&gt;
&lt;h2&gt;+ 캐시무효화&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;데이터 일관성&lt;/strong&gt; 문제 때문에 필요함&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;# 문제 상황
10:00 - 상품 가격: 10,000원 (DB + 캐시 둘 다)
10:30 - 관리자가 가격 변경: 15,000원 (DB만 업데이트)
10:31 - 사용자가 조회 → 캐시에서 10,000원 반환 😡

# 사용자: &quot;어? 결제할 때는 15,000원이네? 사기당한 기분&quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;캐시와 DB 데이터가 달라지는 문제&lt;/strong&gt;를 해결하는 게 캐시 무효화임.&lt;/p&gt;
&lt;h3&gt;주요 캐시 무효화 전략들&lt;/h3&gt;
&lt;h4&gt;1. TTL (Time To Live) 기반&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;가장 단순한 방법&lt;/strong&gt;: 시간 지나면 자동 삭제&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;자주 변하지 않는 데이터&lt;/strong&gt; (사용자 프로필, 상품 기본 정보)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;약간의 지연 허용 가능&lt;/strong&gt;한 경우&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;2. Manual Invalidation (수동 무효화)&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;데이터 변경 시 직접 캐시 삭제&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터 일관성 보장&lt;/li&gt;
&lt;li&gt;연관 캐시 다 찾아서 지워야 함 → 실수하기 쉬움&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;3. Write-Through 패턴&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;DB 쓸 때 캐시도 같이 업데이트&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;캐시 항상 최신&lt;/li&gt;
&lt;li&gt;쓰기 성능 느려짐 (DB + 캐시 둘 다 써야함)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;4. Write-Behind (Write-Back) 패턴&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;캐시만 먼저 업데이트, DB는 나중에&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;쓰기 성능 좋음&lt;/li&gt;
&lt;li&gt;캐시 장애 시 데이터 손실** 위험&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;5. Event-Driven Invalidation&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;DB 변경 이벤트 감지해서 캐시 무효화&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;자동화, 놓치는 캐시 없음&lt;/li&gt;
&lt;li&gt;구현 복잡, 이벤트 시스템 필요&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;6. Tag-Based Invalidation&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;캐시에 태그 붙여서 관련된 것들 한 번에 삭제&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;관련 캐시 찾기 쉬움&lt;/li&gt;
&lt;li&gt;태그 관리 복잡, Redis에서 기본 지원 안 함&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;7. Refresh-Ahead (사전 갱신)&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;만료되기 전에 미리 새 데이터로 교체&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;사용자는 항상 빠른 응답&lt;/li&gt;
&lt;li&gt;백그라운드 작업 필요&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;참고자료&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://toss.tech/article/cache-traffic-tip&quot;&gt;https://toss.tech/article/cache-traffic-tip&lt;/a&gt;
&lt;a href=&quot;https://channel.io/ko/team/blog/articles/tech-cache-rdb-4cc0bbf4&quot;&gt;https://channel.io/ko/team/blog/articles/tech-cache-rdb-4cc0bbf4&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[No title]]></title><description><![CDATA[인프라 및 서비스 구성 설명서 개요 제가 설계하고 구축한 Spring Boot…]]></description><link>https://minjun.blog/우테코_레벨3_정리/</link><guid isPermaLink="false">https://minjun.blog/우테코_레벨3_정리/</guid><pubDate>Tue, 11 Feb 2025 09:44:21 GMT</pubDate><content:encoded>&lt;h1&gt;인프라 및 서비스 구성 설명서&lt;/h1&gt;
&lt;h2&gt;개요&lt;/h2&gt;
&lt;p&gt;제가 설계하고 구축한 Spring Boot 애플리케이션 배포 인프라는 개발과 운영 환경을 분리하여 안정성과 확장성을 보장하는 아키텍처입니다. 이 구성을 통해 개발 단계에서의 빠른 반복과 운영 환경에서의 높은 가용성을 동시에 달성할 수 있도록 설계했습니다.&lt;/p&gt;
&lt;h2&gt;전체 아키텍처 구성&lt;/h2&gt;
&lt;h3&gt;1. 환경 분리 전략&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;개발 환경 (Dev)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;컴퓨팅&lt;/strong&gt;: AWS EC2 인스턴스 (Amazon Linux 2023, ARM64)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;데이터베이스&lt;/strong&gt;: Docker MySQL 8.0 컨테이너&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;배포 트리거&lt;/strong&gt;: dev 브랜치 push 시 자동 배포&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;: 빠른 개발 사이클을 위한 컨테이너 기반 구성&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;운영 환경 (Prod)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;컴퓨팅&lt;/strong&gt;: 동일한 EC2 인스턴스 (리소스 공유)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;데이터베이스&lt;/strong&gt;: AWS RDS MySQL 8.0 (별도 인스턴스)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;배포 트리거&lt;/strong&gt;: prod 브랜치 push 시 자동 배포&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;특징&lt;/strong&gt;: 데이터 영속성과 가용성을 위한 관리형 서비스 활용&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;2. CI/CD 파이프라인 설계&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;GitHub Actions 기반 자동화&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Self-hosted Runner&lt;/strong&gt;: EC2 인스턴스에 직접 설치하여 배포 지연시간 최소화&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;단일 워크플로우&lt;/strong&gt;: 브랜치별 조건부 실행으로 관리 복잡성 감소&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;환경별 분기 처리&lt;/strong&gt;: 런타임에 브랜치 정보를 기반으로 환경 설정 자동 선택&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3. 데이터베이스 전략&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;개발 환경의 Docker MySQL&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 빠른 프로토타이핑과 스키마 변경 테스트 가능&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;데이터 보존&lt;/strong&gt;: Docker Volume 설정으로 컨테이너 재시작 시에도 데이터 유지&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;설정&lt;/strong&gt;: &lt;code class=&quot;language-text&quot;&gt;ddl-auto: update&lt;/code&gt;로 스키마 자동 업데이트&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;운영 환경의 RDS&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;장점&lt;/strong&gt;: 자동 백업, Multi-AZ 배포, 모니터링 기능 내장&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;보안&lt;/strong&gt;: 프라이빗 서브넷 배치, EC2 보안그룹을 통한 접근 제한&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;설정&lt;/strong&gt;: &lt;code class=&quot;language-text&quot;&gt;ddl-auto: validate&lt;/code&gt;로 스키마 무결성 검증&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;네트워크 보안&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;RDS는 프라이빗 서브넷에 배치&lt;/li&gt;
&lt;li&gt;보안그룹을 통해 EC2에서만 3306 포트 접근 허용&lt;/li&gt;
&lt;li&gt;애플리케이션은 8080 포트로 외부 접근 제한적 허용&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;민감정보 관리&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub Secrets를 통한 운영 환경 설정 관리&lt;/li&gt;
&lt;li&gt;개발 환경은 하드코딩된 개발용 계정 사용&lt;/li&gt;
&lt;li&gt;JWT Secret 등 보안 키는 환경별 분리&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[우아한테크코스 7기 BE 레벨3 회고]]></title><description><![CDATA[지난 회고: 우아한테크코스_7기_BE_레벨2_회고 레벨3도 끝났다. 가속도가 붙은 것처럼 시간이 점점 빨리 지나간다. 지난 8주간 내가 느꼈던 것들을 하나씩 톺아보자! 문제를 정의하고 요구사항을 파악하는 능력은 어떻게 기를까 레벨…]]></description><link>https://minjun.blog/우아한테크코스_7기_BE_레벨3_회고/</link><guid isPermaLink="false">https://minjun.blog/우아한테크코스_7기_BE_레벨3_회고/</guid><pubDate>Sat, 30 Aug 2025 09:44:21 GMT</pubDate><content:encoded>&lt;p&gt;지난 회고: &lt;a href=&quot;/%EC%9A%B0%EC%95%84%ED%95%9C%ED%85%8C%ED%81%AC%EC%BD%94%EC%8A%A4_7%EA%B8%B0_BE_%EB%A0%88%EB%B2%A82_%ED%9A%8C%EA%B3%A0&quot; data-wiki-link=&quot;true&quot;&gt;우아한테크코스_7기_BE_레벨2_회고&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;레벨3도 끝났다. 가속도가 붙은 것처럼 시간이 점점 빨리 지나간다. 지난 8주간 내가 느꼈던 것들을 하나씩 톺아보자!&lt;/p&gt;
&lt;h2&gt;문제를 정의하고 요구사항을 파악하는 능력은 어떻게 기를까&lt;/h2&gt;
&lt;p&gt;레벨3 내내 머릿속에서 맴돈 질문이다.&lt;/p&gt;
&lt;p&gt;아이디어를 내고, 팀원들을 설득하고, 기획을 세부화하고, 이를 실제로 구현하는 과정 전반에서 문제 정의와 요구사항 파악은 늘 중심에 있었다. 사람들이 정말 필요로 하는 기능인지, 우리가 이걸 만든다고 해서 진짜 쓸 만한 제품이 되는지, 문제를 효과적으로 해결하고 있는지 계속 고민해야 했다. 이건 단순히 분석 능력만으로 되는 게 아니라 통찰과 메타인지, 그리고 타인에 대한 세심한 관심과 관찰력이 필요했던 것 같다.&lt;/p&gt;
&lt;p&gt;능력있는 팀원들과 함께 하면서 숲을 보는 연습을 많이 했었다. 프로젝트가 처음에 기획을 했던대로, 중심에서 벗어나지 않게 자주 질문을 던지고 방향성을 점검하는 역할을 맡았던 것 같다. 그런 과정을 거치면서 아이디어가 채택되고, 기획이 점점 구체화되고, 마지막 데모데이때 피드백을 받으면서 지금까지 내가 문제를 바라본 방식이 크게 틀리지 않았다는 걸 확인할 수 있었다.&lt;/p&gt;
&lt;p&gt;그리고 이 일련의 과정이 단순히 개발만 하는 것보다 훨씬 재미있었고, &quot;이게 어쩌면 개발자의 본질이 아닐까?&quot;라는 생각도 들었다. 앞으로 어떤 개발자로 성장해야 할지, 내 강점은 어디에 있는지에 대해 더 깊게 고민할 수 있는 계기가 된 것 같다.&lt;/p&gt;
&lt;h2&gt;설득하는 말하기 &amp;#x26; 이해시키기&lt;/h2&gt;
&lt;p&gt;어렵다.&lt;/p&gt;
&lt;p&gt;쿠션어를 많이 쓰거나 의견을 너무 완곡하게 표현하면 상대가 제대로 이해하지 못하거나 납득하지 못한다. 반대로 직설적으로 말하면 공격적으로 받아들이는 사람이 생긴다. 전자를 택하면 프로젝트가 이상한 방향으로 흘러가는 게 보이고, 후자를 택하면 &quot;말이 세다&quot;라는 피드백이 들어온다.&lt;/p&gt;
&lt;p&gt;사람마다 성향이 너무도 다르다는 걸 느끼고 있다. 난 돌려 말해주는 것보다, &apos;싫으면 싫다, 별로인 것 같다, 이 방향이 맞는 것 같다&apos; 처럼 다른 사람이 느끼기에 무언가 잘못되고 있으면 이를 빠르고 정확하게 공유해주는 게 너무 직관적이고 편한 방식이라고 느낀다. 하지만 팀 프로젝트에서는 모두가 나 같을 수 없다는 걸 이번에 뼈저리게 느꼈다.&lt;/p&gt;
&lt;p&gt;더 난감했던 건, 직설적으로 말해줘야 이해하는 사람과, 부드럽게 말해야 상처받지 않는 사람이 동시에 있을 때였다. 강하게 말하면 누군가는 불편해하고, 약하게 말하면 누군가는 제대로 못 알아듣는다. 그 사이 균형을 잡는 게 진짜 어렵다.&lt;/p&gt;
&lt;p&gt;결국 중요한 건 &quot;공격적으로 받아들여지지 않으면서도 무게감 있게 말하는 법&quot;인 것 같다. 단순히 기술적 설득이 아니라 말하는 방식 자체가 하나의 역량이라는 걸 몸소 체감 중이다.&lt;/p&gt;
&lt;h2&gt;우테코에서만 할 수 있는 게 뭘까&lt;/h2&gt;
&lt;p&gt;학교나 동아리에서 할 법한, 어디서나 흔히 볼 수 있는 프로젝트 경험은 하고 싶지 않았다.&lt;/p&gt;
&lt;p&gt;기획을 하는 것도, 새로운 기술을 도입하는 것도, 너무 착하고 무난하게만 하고 싶지 않았다. 회사에서 프로젝트를 할당받아서 진행하는 것도 아니고, 당장 창업을 할 것도 아니고, 그저 시간많고 학습 욕구 가득인 사람들이 모인 곳에서는 좀 더 재미있고 무모해 보이는 선택도 해보고 싶었다. 내가 지금까지 해온 공부들은 모두 호기심에 시작됐고, 물음표가 물음표를 낳으면서 재미를 추구해오며 공부를 했었는데, 우테코에서도 그러고 싶었다. 그리고 이게 우테코에서 원하는 몰입 경험이지 않았나 싶었다.&lt;/p&gt;
&lt;p&gt;하지만 또 모든 팀원이 그러진 않았다. 좀 더 안정적인 선택을 하고 싶어하는 팀원도 있었고 그 간극 때문에 매번 타협하기 어려웠는데 레벨4는 어떨지 모르겠다.&lt;/p&gt;
&lt;h2&gt;앞으로는?&lt;/h2&gt;
&lt;p&gt;모범생처럼만 살고 싶진 않다. 이미 너무 모범생처럼 살아온 것 같다.&lt;/p&gt;
&lt;p&gt;앞으로는 재미있는 상상들, 이상해 보이는 시도들을 더 많이 해보고 싶다. 그 과정에서 내가 스스로 옳고 그름을 판단할 수 있는 기준을 세우고 싶다. 어쩌면 이게 지금까지 내가 공부해온 방식인데, 괜히 다른 사람들의 시선을 너무 의식했던 것 같다. 결국 가장 중요한 건 내가 재미를 느끼는 것인데, 거기서부터 성장이 시작된다고 믿는다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[우아한테크코스 7기 BE 레벨2 회고]]></title><description><![CDATA[지난 회고: 우아한테크코스_7기_BE_레벨1_회고 레벨2도 지나갔다. 지난 8주간 무엇을 배우고 느꼈는지 곰곰이 고민을 했는데, 개인적으로 아쉬운 점들이 많았다. 이번 회고도 그 연장선에서, 지난 8주를 되돌아보며 레벨…]]></description><link>https://minjun.blog/우아한테크코스_7기_BE_레벨2_회고/</link><guid isPermaLink="false">https://minjun.blog/우아한테크코스_7기_BE_레벨2_회고/</guid><pubDate>Wed, 11 Jun 2025 09:44:21 GMT</pubDate><content:encoded>&lt;p&gt;지난 회고: &lt;a href=&quot;/%EC%9A%B0%EC%95%84%ED%95%9C%ED%85%8C%ED%81%AC%EC%BD%94%EC%8A%A4_7%EA%B8%B0_BE_%EB%A0%88%EB%B2%A81_%ED%9A%8C%EA%B3%A0&quot; data-wiki-link=&quot;true&quot;&gt;우아한테크코스_7기_BE_레벨1_회고&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;레벨2도 지나갔다. 지난 8주간 무엇을 배우고 느꼈는지 곰곰이 고민을 했는데, 개인적으로 아쉬운 점들이 많았다. 이번 회고도 그 연장선에서, 지난 8주를 되돌아보며 레벨3를 더 의미 있게 보내기 위한 준비 과정으로 삼고 싶다.&lt;/p&gt;
&lt;h2&gt;나만의 학습법, 왜 찾아야하죠?&lt;/h2&gt;
&lt;p&gt;레벨2의 가장 큰 키워드는 단연 “나만의 학습법 찾기”였다.
시작부터 끝까지 많은 코치분들이 이 메시지를 강조하셨고, 크루들 사이에서도 이 주제가 자주 언급됐다. 나 역시 스프링을 처음 공부하는 입장에서 여러 시도를 했었다. 코드를 직접 뜯어보기도 했고, 공식 문서도 많이 읽어보고, 크루들과 의견을 주고받아보고, AI에게 질문도 던져봤다. 각각의 방식은 나름의 장단점을 가지고 있었고, 상황에 따라 맞는 접근법은 달랐다.&lt;/p&gt;
&lt;p&gt;그런데 어느 순간 이런 생각이 들었다. ‘나만의 학습법’을 하나로 딱 정리해서 말하는 게 과연 자연스러운 일일까? 누군가 나에게 “너는 어떤 방식으로 공부해?“라고 물으면, 뭔가 선명하게 답해야 할 것 같은 압박감이 생겼다. 하지만 실제로는 계속해서 방식이 바뀌고, 유동적으로 대응하는 게 더 현실적인 학습 태도 아닐까 싶었다.&lt;/p&gt;
&lt;p&gt;나는 지금 뭘 알고, 뭘 모르는지 명확히 구분할 수 있다면 그걸로 충분하다고 생각한다. 공부할 때마다 ‘이 방식이 맞는 걸까?’ 고민하는 것보단, 데드라인과 컨디션을 고려해서 가장 효율적인 방향으로 선택하고, 필요하면 또 바꾸는 유연함이 더 중요하다고 느꼈던 것 같다. 공식 문서에 손이 잘 안 가는 날도 있었고, 혼자 실습을 하면서 익힐 때 더 집중이 잘 되는 날도 있었다. 그때그때 내가 가장 잘 배울 수 있는 방식으로 접근하는 게 결국 ‘나만의 학습법’이 아닐까.&lt;/p&gt;
&lt;p&gt;그래서 레벨2에서 지속적으로 “학습법을 찾아야 한다”는 메시지를 강조하는 흐름은 아쉽게 느껴졌다. 레벨1에서는 “정답이 없는 문제를 어떻게 풀어야 하는가?”라는 고민을 중심으로, 문제 해결 능력 자체에 집중할 수 있었는데, 레벨2는 다소 추상적인 주제에 갇힌 느낌도 있었다. 레벨1의 방향성을 조금 더 잘 잇는 목표 설정이었으면 어땠을까 하는 아쉬움이 남는다.&lt;/p&gt;
&lt;h2&gt;내 학습목표는?&lt;/h2&gt;
&lt;p&gt;공식 커리큘럼에서 제시한 학습 목표에 온전히 집중하지 않았기 때문에, 오히려 마음의 여유가 생겼다. 그 여유 덕분에 이전부터 고민하던 ‘소프트 스킬’ 쪽에 더 많은 시간을 쏟을 수 있었다.&lt;/p&gt;
&lt;p&gt;레벨2가 진행되는 동안 현업에 계신 선배들, 코치분들, 학교 친구들과 커피챗을 자주 했고, 그때마다 반복적으로 한 가지 질문을 던졌다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“팀장으로서, 혹은 팀원으로서, 사람들에게 어떻게 동기부여를 할 수 있을까요?”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;내가 속한 어떤 조직에서든 항상 느꼈던 고민이었다. 동아리에서 회장단으로 활동할 때도, 팀 프로젝트에서 팀원으로 참여할 때도, ‘사람이 움직이게 만드는 힘’이 결국 팀의 방향을 좌우한다는 걸 여러 번 체감했었다&lt;/p&gt;
&lt;p&gt;우테코도 마찬가지였다. 모두가 자발적으로 모인 공간이었고, 학습 동기가 충분한 사람들이라고 생각했지만, 의외로 ‘동기 결여’ 상태에 놓인 크루들을 몇 번 마주했다. 그때 다시 한 번, 이 질문의 무게를 느꼈고, 그래서 더 많은 사람들에게 질문을 던지며 그 답을 탐색하고자 했다.&lt;/p&gt;
&lt;p&gt;정답은 없었다. 각자 서로 다른 이야기를 해줬고, 각자의 맥락에 맞는 조언들이었다. 그럼에도 불구하고 하나하나 마음에 남았다. 그리고 그런 대화들이 레벨2에서 내가 가장 의미 있게 느꼈던 순간이기도 했다.&lt;/p&gt;
&lt;h2&gt;우테코의 사실과 오해&lt;/h2&gt;
&lt;p&gt;우테코에 들어오기 전에는 이 부트캠프가 마냥 대단한 활동인 줄 알았다. 이 활동만 하면 벡엔드 분야에 대해 잘 알 수 있고, 부족한 하드 스킬을 배울 수 있을 것만 같았다. 그러다보니 우테코가 취업 발사대인 것 마냥 활동을 하는 사람들이 종종 있었다. 단순 지적 호기심 때문에 학습을 하는 게 아닌, 취업을 위해 필요한 정보들이 무엇인지 찾고, 딱 거기까지만 공부하고자 하는 사람들을 심심치 않게 발견할 수 있다. 물론 잘못된 거라고는 생각하지 않는다. 졸업을 했고, 당장 취업을 해야하는 상황이면 나도 그들과 별반 다르지 않을 것 같았다.&lt;/p&gt;
&lt;p&gt;하지만 그럴수록 더욱 본인의 색깔을 찾으려고 해야하지 않을까.&lt;/p&gt;
&lt;p&gt;우테코 내부에서도 취업의 관점에서 너무 사회의 시선과 요구에 본인을 맞추려고 하는 사람들이 많다. Best Practice를 따라가는 게 안정적인 선택일 수도 있지만 그 과정에서 자기다움을 잃어버리는 건 아닌지, 한 번쯤 되돌아볼 필요가 있다고 느꼈다.&lt;/p&gt;
&lt;h2&gt;앞으로는?&lt;/h2&gt;
&lt;p&gt;우테코는 분명 열정 있는 사람들이 모인 좋은 환경이다. 근데 매일 이 안에서만 생활하다 보니, 어느 순간부터 내 성장 기준이 자연스레 이 내부로만 한정된 느낌이 들었다.&lt;/p&gt;
&lt;p&gt;공부를 하면 할수록 우테코가 모든 걸 해결해주진 않는다는 사실을 체감하고 있다. 방향은 제시해줄 수 있어도, 성장은 결국 내 몫이고, 우테코가 제시해주는 그 방향조차 그리 대단한 게 아님을 느끼고 있다.&lt;/p&gt;
&lt;p&gt;이제는 좀 더 바깥으로 시야를 넓히고 싶다. 우테코 밖의 사람들과도 부딪히면서, 좀 더 객관적으로 메타인지를 해야하지 않을까.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[README]]></title><description><![CDATA[😄 Introduction Hi there! I’m Minjun Choi — a problem solver who’s always thinking about how to build services that actually solve problems…]]></description><link>https://minjun.blog/readme/</link><guid isPermaLink="false">https://minjun.blog/readme/</guid><pubDate>Mon, 01 Jan 2024 22:38:31 GMT</pubDate><content:encoded>&lt;h2&gt;😄 Introduction&lt;/h2&gt;
&lt;p&gt;Hi there! I’m &lt;strong&gt;Minjun Choi&lt;/strong&gt; — a problem solver who’s always thinking about how to build services that actually solve problems and make a real impact. I care deeply about creating meaningful value through the code I write, not just clean features but outcomes that drive business and help people. I’m on a journey to keep learning, building, and contributing to something bigger than myself. Curious about what I’m working on? Check out my &lt;a href=&quot;https://minjun.blog/&quot;&gt;blog&lt;/a&gt;!&lt;/p&gt;
&lt;h2&gt;✏️ Education&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://cse.cau.ac.kr/main.php&quot;&gt;Software (Computer Science &amp;#x26; Engineering)&lt;/a&gt;, Chung-Ang University (2021.03. ~ )&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;💻 Activity&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;CAU ZeroPage 31st Regular Member (2021.03. ~ )&lt;/li&gt;
&lt;li&gt;CAU ZeroPage 32nd vice-President (2022.03. ~ 2023.02.)&lt;/li&gt;
&lt;li&gt;GDSC CAU 1st Member (2021.06. ~ 2022.07.)&lt;/li&gt;
&lt;li&gt;GDG on Campus CAU 4th Core Member (2024.09. ~ 2025.08.)&lt;/li&gt;
&lt;li&gt;CECOM Member (2024.09. ~ )&lt;/li&gt;
&lt;li&gt;Undergraduate researcher at &lt;a href=&quot;https://sites.google.com/view/hcslab-cau/home?authuser=0&quot;&gt;HCSLAB of Chung-Ang Univ.&lt;/a&gt; (2024.09. ~ 2025.01.)&lt;/li&gt;
&lt;li&gt;Woowacourse 7th BE (2025.02. ~ 2025.11.)&lt;/li&gt;
&lt;li&gt;GDG on Campus CAU 5th Organizer (2025.09. ~ )&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;🛠️ Tech Skill&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;Classification&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Skills&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Framework&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Spring, Nuxt, Flutter&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Language&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;Java, python, C, C++, Dart&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;ETC&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;git, Firebase, k8s, docker&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;📖 Study&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Flutter, Design Pattern Study in ZeroPage (2021.09. ~ 2021.11.)&lt;/li&gt;
&lt;li&gt;Data Structure Study in ZeroPage (2022.03. ~ 2022.06.)&lt;/li&gt;
&lt;li&gt;Spring, Kotlin Study in ZeroPage (2022.04 ~ 2022.07.)&lt;/li&gt;
&lt;li&gt;Computer Structure Study in ZeroPage (2022.09. ~ 2022.12.)&lt;/li&gt;
&lt;li&gt;Spring Study in GDG CAU (2024.10. ~ 2024.12.)&lt;/li&gt;
&lt;li&gt;Kubernetes Study in GDG CAU (2024.10. ~ 2024.12.)&lt;/li&gt;
&lt;li&gt;가상면접사례로배우는대규모시스템설계 Study in Woowacourse (2025.07. ~ )&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[How Spring Injects HttpSession]]></title><description><![CDATA[지난 포스트에서 DispatcherServlet에 대해 공부를 했고, 요즘은 로그인 과정에 대해 배우고 있다. 그 중에서 session 로그인 과정을 공부하던 중에 의문이 생기는 코드가 있어서 이번 포스트에서는 이 코드를 실행할 때 Spring…]]></description><link>https://minjun.blog/how_spring_injects_httpsession/</link><guid isPermaLink="false">https://minjun.blog/how_spring_injects_httpsession/</guid><pubDate>Sat, 10 May 2025 09:44:21 GMT</pubDate><content:encoded>&lt;p&gt;지난 포스트에서 DispatcherServlet에 대해 공부를 했고, 요즘은 로그인 과정에 대해 배우고 있다. 그 중에서 session 로그인 과정을 공부하던 중에 의문이 생기는 코드가 있어서 이번 포스트에서는 이 코드를 실행할 때 Spring 내부에서 일어나는 일련의 과정을 알아보고자 한다.&lt;/p&gt;
&lt;h2&gt;문제 상황&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// cholog, spring-auth-1 코드 중 세션 관련 일부&lt;/span&gt;

&lt;span class=&quot;token annotation punctuation&quot;&gt;@PostMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/login/session&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sessionLogin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpSession&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; paramMap &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getParameterMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; email &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; paramMap&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;USERNAME_FIELD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; password &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; paramMap&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;PASSWORD_FIELD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;authService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;checkInvalidLogin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; password&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AuthorizationException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
  
    session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;SESSION_KEY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; email&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
  
&lt;span class=&quot;token annotation punctuation&quot;&gt;@GetMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/members/me/session&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MemberResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;findMyInfo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpSession&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; email &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;SESSION_KEY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;MemberResponse&lt;/span&gt; member &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; authService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;findMember&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;body&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;member&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Test&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sessionLogin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; cookie &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RestAssured&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;given&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;USERNAME_FIELD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;EMAIL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;PASSWORD_FIELD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;PASSWORD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/login/session&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Set-Cookie&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;;&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;token class-name&quot;&gt;MemberResponse&lt;/span&gt; member &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RestAssured&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;given&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Cookie&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; cookie&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;accept&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MediaType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;APPLICATION_JSON_VALUE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/members/me/session&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;statusCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;OK&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;extract&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MemberResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;token function&quot;&gt;assertThat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;member&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getEmail&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEqualTo&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;EMAIL&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;테스트 코드를 보면 단순히 이메일과 비밀번호를 파라미터 값으로 넘겨주고 있는데 컨트롤러의 PostMapping 해주는 코드에서는 request외에도 session을 받아주고, 메서드 내부에서도 &lt;code class=&quot;language-text&quot;&gt;session.setAttribute(SESSION_KEY, email)&lt;/code&gt; 을 해주고 있다.&lt;/p&gt;
&lt;p&gt;누가 메서드의 파라미터로 session까지 넣어주는걸까?&lt;/p&gt;
&lt;h2&gt;Spring MVC의 핵심 흐름&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;/spring_mvc_dispatcherservlet&quot; data-wiki-link=&quot;true&quot;&gt;spring_mvc_dispatcherservlet&lt;/a&gt;에서 다루었듯이 파라미터를 처리하는 역할을 담당하는 건 ArgumentResolver의 한 종류이다. Spring MVC는 컨트롤러의 메서드를 실행할 때 실제로 HandlerMethodArgumentResolver 목록을 순회하며 파라미터를 처리한다.&lt;/p&gt;
&lt;p&gt;세부 흐름은 다음과 같다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;scss&quot;&gt;&lt;pre class=&quot;language-scss&quot;&gt;&lt;code class=&quot;language-scss&quot;&gt;DispatcherServlet
 └── HandlerAdapter
      └── InvocableHandlerMethod
           └── HandlerMethodArgumentResolverComposite
                └── 각 ArgumentResolver의 &lt;span class=&quot;token function&quot;&gt;supportsParameter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; 호출
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;코드 상에서는 다음과 같은 모습으로 호출이된다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// InvocableHandlerMethod.class 내부&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getMethodArgumentValues&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;NativeWebRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndViewContainer&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; providedArgs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;MethodParameter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; parameters &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getMethodParameters&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ObjectUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;parameters&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;EMPTY_ARGS&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; args &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;parameters&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;int&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; parameters&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
            &lt;span class=&quot;token class-name&quot;&gt;MethodParameter&lt;/span&gt; parameter &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; parameters&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
            parameter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;initParameterNameDiscovery&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;parameterNameDiscoverer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
            args&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;findProvidedArgument&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;parameter&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; providedArgs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;resolvers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;supportsParameter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;parameter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IllegalStateException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;formatArgumentError&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;parameter&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;No suitable resolver&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
                &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
  
                &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                    args&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;resolvers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;resolveArgument&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;parameter&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;dataBinderFactory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
                &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; var10&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isDebugEnabled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                        &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; exMsg &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; var10&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
                        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;exMsg &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;exMsg&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;contains&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;parameter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getExecutable&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toGenericString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                            logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;formatArgumentError&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;parameter&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; exMsg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
                        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
                    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
  
                    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; var10&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
                &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
  
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이때 HttpSession 타입을 지원해주는 게 바로 ServletRequestMethodArgumentResolver이다.&lt;/p&gt;
&lt;h2&gt;ArgumentResolver가 뭘 해주나?&lt;/h2&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerMethodArgumentResolver&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;supportsParameter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MethodParameter&lt;/span&gt; parameter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;resolveArgument&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MethodParameter&lt;/span&gt; parameter&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndViewContainer&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NativeWebRequest&lt;/span&gt; webRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WebDataBinderFactory&lt;/span&gt; binderFactory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;ArgumentResolver는 각 파라미터를 지원해주는지 판단하고, 변환해준다.&lt;/p&gt;
&lt;h3&gt;그 중에서 ServletRequestMethodArgumentResolver은?&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// ServletRequestMethodArgumentResolver.class&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;supportsParameter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MethodParameter&lt;/span&gt; parameter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; paramType &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; parameter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getParameterType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WebRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isAssignableFrom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;paramType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;ServletRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isAssignableFrom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;paramType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt;   
    &lt;span class=&quot;token class-name&quot;&gt;MultipartRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isAssignableFrom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;paramType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;HttpSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isAssignableFrom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;paramType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;PushBuilder&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isAssignableFrom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;paramType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;Principal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isAssignableFrom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;paramType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;parameter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;hasParameterAnnotations&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;InputStream&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isAssignableFrom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;paramType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt;
    &lt;span class=&quot;token class-name&quot;&gt;Reader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isAssignableFrom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;paramType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; 
    &lt;span class=&quot;token class-name&quot;&gt;HttpMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; paramType &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; 
    &lt;span class=&quot;token class-name&quot;&gt;Locale&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; paramType &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; 
    &lt;span class=&quot;token class-name&quot;&gt;TimeZone&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; paramType &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; 
    &lt;span class=&quot;token class-name&quot;&gt;ZoneId&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; paramType&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;resolveArgument&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; paramType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isAssignableFrom&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;paramType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;token class-name&quot;&gt;HttpSession&lt;/span&gt; session &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;paramType&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isInstance&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
            &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; var13 &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; paramType&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
            &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IllegalStateException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Current session is not of type [&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; var13 &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;]: &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;그럼 다시 원래 코드로 돌아와서,&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@PostMapping&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/login/session&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;sessionLogin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpSession&lt;/span&gt; session&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; paramMap &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getParameterMap&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; email &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; paramMap&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;USERNAME_FIELD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; password &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; paramMap&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;PASSWORD_FIELD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;authService&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;checkInvalidLogin&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;email&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; password&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
        &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AuthorizationException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
  
    session&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setAttribute&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;SESSION_KEY&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; email&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;파라미터로 HttpSession을 받고 있기 때문에 ServletRequestMethodArgumentResolver.resolveArgument에서 session을 반환해줄 수 있는 것이다.&lt;/p&gt;
&lt;h2&gt;번외&lt;/h2&gt;
&lt;h3&gt;성능 이슈는 없을까?&lt;/h3&gt;
&lt;p&gt;Q. Spring MVC는 컨트롤러의 메서드를 실행할 때 실제로 HandlerMethodArgumentResolver 목록을 순회하며 파라미터를 처리한다고 했는데, HandlerMethodArgumentResolver가 많으면 매번 찾을 때마다 성능 문제가 생기지 않을까?&lt;/p&gt;
&lt;p&gt;A. Spring에서 이미 고려해주고 있다.
HandlerMethodArgumentResolverComposite의 필드로 캐시된 값들을 관리해주고 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerMethodArgumentResolverComposite&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerMethodArgumentResolver&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;MethodParameter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerMethodArgumentResolver&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; argumentResolverCache&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[커피빵(CoffeeShout) 기획]]></title><description><![CDATA[프로젝트명 - 한글 커피빵 프로젝트명 - 영어 CoffeeShout…]]></description><link>https://minjun.blog/coffeeshout_ideation/</link><guid isPermaLink="false">https://minjun.blog/coffeeshout_ideation/</guid><pubDate>Mon, 07 Jul 2025 09:44:21 GMT</pubDate><content:encoded>&lt;h2&gt;프로젝트명 - 한글&lt;/h2&gt;
&lt;p&gt;커피빵&lt;/p&gt;
&lt;h2&gt;프로젝트명 - 영어&lt;/h2&gt;
&lt;p&gt;CoffeeShout&lt;/p&gt;
&lt;h2&gt;프로젝트 주제&lt;/h2&gt;
&lt;p&gt;똥손도 즐기는 커피빵 전쟁&lt;/p&gt;
&lt;h2&gt;프로젝트 목적 및 설명&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;커피 내기를 재미있고 간편하게 할 수 있도록 만든 플랫폼&lt;/li&gt;
&lt;li&gt;점심시간마다 반복되는 커피 내기를 좀 더 유쾌하고 흥미롭게 즐길 수 있도록&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[커피빵(CoffeeShout) 페르소나]]></title><description><![CDATA[커피빵(CoffeeShout…]]></description><link>https://minjun.blog/coffeeshout_persona/</link><guid isPermaLink="false">https://minjun.blog/coffeeshout_persona/</guid><pubDate>Tue, 08 Jul 2025 09:44:21 GMT</pubDate><content:encoded>&lt;h1&gt;커피빵(CoffeeShout): 똥손도 즐기는 커피빵 전쟁&lt;/h1&gt;
&lt;h2&gt;목표&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;커피 내기, 재미있게 해보자!&lt;/li&gt;
&lt;li&gt;매일 똑같은 가위바위보 그만!&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;핵심 기능&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;미니게임을 통한 가중치 기반 룰렛 시스템&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;기능 세부사항&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;방을 만든다.
&lt;ol&gt;
&lt;li&gt;초대 코드로 참가 가능.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;사용자들이 해당 방에 입장한다.
&lt;ol&gt;
&lt;li&gt;메뉴 선택.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;미니게임을 통해 확률을 조절한다.&lt;/li&gt;
&lt;li&gt;룰렛을 돌려서 당첨자를 뽑는다.&lt;/li&gt;
&lt;li&gt;당첨자가 메뉴 리스트를 확인해서 주문하러 간다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;사용자 페르소나&lt;/h2&gt;
&lt;p&gt;대전제: 커피 내기 자주함&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;유형&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;정의&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;니즈&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;Pain Points&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;커피 중독 직장인&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;매일같이 아메리카노를 달고 사는 직장인&lt;/td&gt;
&lt;td&gt;공짜로 커피를 먹고 싶음 &lt;br/&gt; 재미있게 당첨자 고르고 싶음&lt;/td&gt;
&lt;td&gt;재미있게 몰빵 정하고 싶음&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;똥손(루키)&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;운이 없어서 매번 커피사는 사람&lt;/td&gt;
&lt;td&gt;낮은 당첨 확률&lt;/td&gt;
&lt;td&gt;운 나쁘면 계속 걸림&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;사용자 페르소나 상세&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;사용자 유형&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;페르소나 상세&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;커피 중독 직장인&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;이름:&lt;/strong&gt; 엠제이 (27, 마케터) &lt;br/&gt; &lt;strong&gt;목표:&lt;/strong&gt; 점심 먹고 카페인 수혈 &lt;br/&gt; &lt;strong&gt;니즈:&lt;/strong&gt; 도파민 부족, 커피라도 재밌게 마시고 싶다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;똥손&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;이름:&lt;/strong&gt; 루키 (25, 백엔드 개발자) &lt;br/&gt; &lt;strong&gt;목표:&lt;/strong&gt; 오늘은 걸리지 말자! &lt;br/&gt; &lt;strong&gt;니즈:&lt;/strong&gt; 낮은 당첨 확률&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;사용자 시나리오 &amp;#x26; 요구사항&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;strong&gt;페르소나&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;시나리오 (사용 흐름)&lt;/strong&gt;&lt;/th&gt;
&lt;th&gt;&lt;strong&gt;요구사항&lt;/strong&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;strong&gt;루키&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;점심 식사 → 팀원들과 커피 내기 → 서비스 참가 → 메뉴 선정 → 미니게임 → 결과 확인&lt;/td&gt;
&lt;td&gt;1. 미니게임 &lt;br/&gt; 2. 승리 시 당첨 확률 감소 &lt;br/&gt; 3. 주문리스트 확인&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;사용자 스토리&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;나는야 카페인 필수 인간 – 루키&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;요구사항:&lt;/strong&gt; 재미있게 당첨자 추첨 &amp;#x26; 주문리스트 쉽게 알아보기&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;스토리:&lt;/strong&gt; &quot;오늘은 난 절대 안걸린다!&quot;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;인수조건:&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Given:&lt;/strong&gt; 루키, 월요일 13:00, 식사 후 팀원들과 커피 내기&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;When:&lt;/strong&gt; 커피빵의 방 입장 후 ‘참가’ 버튼 클릭&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Then:&lt;/strong&gt; 미니게임 후 룰렛 추첨, 본인 당첨 시 쉽게 주문리스트 확인&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[커피빵(CoffeeShout) 서버 기술스택]]></title><description><![CDATA[해당 문서에서는 커피빵(CoffeeShout)를 구성하는 서버파트 테크 스택 선정 이유에 관한 내용을 담고 있습니다. ✏️ 언어 Java 팀원 모두 Java…]]></description><link>https://minjun.blog/coffeeshout_server_tech_stack/</link><guid isPermaLink="false">https://minjun.blog/coffeeshout_server_tech_stack/</guid><pubDate>Wed, 09 Jul 2025 09:44:21 GMT</pubDate><content:encoded>&lt;p&gt;해당 문서에서는 커피빵(CoffeeShout)를 구성하는 서버파트 테크 스택 선정 이유에 관한 내용을 담고 있습니다.&lt;/p&gt;
&lt;h2&gt;✏️ 언어&lt;/h2&gt;
&lt;h3&gt;&lt;strong&gt;Java&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;팀원 모두 Java에 대한 이해도가 높음.&lt;/li&gt;
&lt;li&gt;한국어 자료 및 커뮤니티가 풍부하여 문제 해결이 용이함.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;Corretto JDK 21&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;AWS에서 공식 제공, 친화도 좋음.&lt;/li&gt;
&lt;li&gt;LTS(Long Term Support) 중 최신 버전.&lt;/li&gt;
&lt;li&gt;Spring Boot 및 다양한 Java 생태계 라이브러리와의 호환성이 검증됨.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🌱 백엔드 프레임워크 및 라이브러리&lt;/h2&gt;
&lt;h3&gt;&lt;strong&gt;Spring Boot 3.5.3&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/user-attachments/assets/fdb2d622-c8fa-4655-9f8c-7646239422d4&quot; alt=&quot;Spring Boot Support&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;출처: &lt;a href=&quot;https://spring.io/projects/spring-boot#support&quot;&gt;https://spring.io/projects/spring-boot#support&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;LTS 중 최신이자 안정적인 버전으로, 스냅샷이 아닌 3.5.3 선택.&lt;/li&gt;
&lt;li&gt;DI, IoC, AOP 엔터프라이즈 아키텍처 핵심 개념을 기반으로 한 프레임워크.&lt;/li&gt;
&lt;li&gt;Java와 호환성이 우수함.&lt;/li&gt;
&lt;li&gt;톰캣 내장 서버 지원 등 생산성이 높음.&lt;/li&gt;
&lt;li&gt;방대한 생태계와 커뮤니티.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;Lombok&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;반복적인 보일러플레이트 코드를 제거 가능. 코드 간결화.&lt;/li&gt;
&lt;li&gt;비즈니스 코드 집중 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🔍 테스트 및 품질 관리&lt;/h2&gt;
&lt;h3&gt;&lt;strong&gt;RestAssured&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;실제 HTTP 요청을 통한 테스트가 가능하여 e2e 테스트에 최적화된 라이브러리.&lt;/li&gt;
&lt;li&gt;통합 테스트 시 외부 API 흐름을 시뮬레이션하기에 적합하며 신뢰도 높은 테스트 가능.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;JUnit5 &amp;#x26; AssertJ&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Java 생태계의 표준 테스트 프레임워크로, Spring Boot와의 통합이 뛰어남.&lt;/li&gt;
&lt;li&gt;선언적이고 직관적인 문법을 제공하여 협업 및 유지보수에 유리함.&lt;/li&gt;
&lt;li&gt;강력한 체이닝 방식으로 여러 시나리오 테스트에 유리함.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2&gt;🚀 배포 및 인프라&lt;/h2&gt;
&lt;h3&gt;&lt;strong&gt;Docker&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;컨테이너 기반 가상화 환경으로 일관된 개발/운영 환경 구성이 가능.&lt;/li&gt;
&lt;li&gt;공식 문서, 커뮤니티, CLI 기반 관리 도구, YAML 설정 등 개발자 친화적.&lt;/li&gt;
&lt;li&gt;이미지 기반으로 배포와 버전 관리가 용이하며, 프로젝트 규모에 적합한 경량성과 유연성을 제공.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;EC2&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;실 배포 환경을 구성할 수 있는 AWS 인스턴스.&lt;/li&gt;
&lt;li&gt;과거 사용 경험이 있어 빠르게 셋업 가능하며, 추후 다른 클라우드로 이전도 고려 가능.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[기존 블로그 대신 Obsidian을 택한 이유]]></title><description><![CDATA[…]]></description><link>https://minjun.blog/why-obsidian/</link><guid isPermaLink="false">https://minjun.blog/why-obsidian/</guid><pubDate>Wed, 10 Jan 2024 13:23:24 GMT</pubDate><content:encoded>&lt;p&gt;항상 기록의 중요성을 느끼고 있었다. 내가 어떤 걸 배우고 해냈다라는 걸 뽑내기 보다는 내 생각들과 학습한 내용들을 구조화해서 나중에 다시 쉽게 찾아볼 수 있도록, 그리고 그게 또 하나의 내 자산이 되기를 원했다. 그래서 제작년부터 이런 저런 툴을 사용해보며 블로깅을 해왔는데 결국은 하나같이 다 마음에 들지 않았다.&lt;/p&gt;
&lt;h2&gt;생산성&lt;/h2&gt;
&lt;p&gt;내가 원한 건 생산성 딱 하나였다. 블로깅을 하는 유일한 목적이 결국은 스쳐지나가는 생각들을 메모해두기 위함인데 기존에 사용하던 &lt;a href=&quot;https://github.com/theminjunchoi/ex-blog&quot;&gt;Nuxt로 개발된 블로그&lt;/a&gt;는 생산성 측면에서 부족했던 것 같다. 글 하나를 쓰기 위해 노트북을 열어야했고 괜히 나도 있어보이는 글을 쓰기 위해 억지로 분량을 늘리고 이쁜 문장들을 찾았다. 공부 내용을 기록할 때도 학습에 초점을 둔 기록이기보단 정리에 초점을 둔 기록들 투성이었다. 지금 생각해보면 모든 요소 하나하나가 너무 많은 시간을 잡아먹는 것 같았다. 그러던 와중에 obsidian을 발견했다.&lt;/p&gt;
&lt;h2&gt;현재 블로그&lt;/h2&gt;
&lt;h3&gt;obsidian&lt;/h3&gt;
&lt;p&gt;세컨드브레인이라는 책을 읽다가 obsidian이라는 툴을 알게 됐다. 글과 글 사이에 관계를 나타내기 좋아서 사용하기 시작했는데 여러 플러그인들도 많아서 내가 사용하는 용도에 맞게 커스텀하기 좋은 것 같다. 플러그인은 아래의 것들을 사용하고 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Omnisearch&lt;/li&gt;
&lt;li&gt;Templater&lt;/li&gt;
&lt;li&gt;Update time on edit&lt;/li&gt;
&lt;li&gt;Outliner&lt;/li&gt;
&lt;li&gt;Checklist&lt;/li&gt;
&lt;li&gt;Calendar&lt;/li&gt;
&lt;li&gt;MindMap&lt;/li&gt;
&lt;li&gt;Obsidian git&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Gatsby&lt;/h3&gt;
&lt;p&gt;기존 블로그는 Nuxt로 개발된 정적 웹페이지였다. Nuxt에서 Gatsby로 넘어간 이유는 2가지다.&lt;/p&gt;
&lt;p&gt;첫째는 원래 사용하던 블로그는 Nuxt2로 개발되었는데 내가 군대를 간 사이에 Nuxt3가 나왔다. 처음에는 마이그레이션을 해보려고 해봤는데 생각만큼 그리 단순하지 않았다. 가장 큰 문제는 아래에서도 간단하게 언급하겠지만 Nuxt가 버전업이 되면서 이를 지원하던 노드 모듈들도 이에 맞게 수정이 되어야하는데 vue 생태계가 그렇게 반응이 빠르지 않았다. 그래서 내가 마이그레이션을 해도 기존에 쓰던 기능들을 못 쓰게 되고 내가 노드 모듈을 직접 건드려보기도 했는데 도저히 휴가 때 할 수 있는 양이 아니었다.&lt;/p&gt;
&lt;p&gt;두 번째 이유는 단순히 vue 기반의 프레임워크랑 react 기반의 프레임워크를 비교해보고 싶었다. 여러 프레임워크를 쓰면서 나한테 맞고 편한 프레임워크를 찾아보고 싶었고 얼마나 많이 다른지 단순 호기심에서 시작했다. 좀 더 써봐야 알겠지만 프레임워크를 지원하는 생태계는 역시 vue보단 react가 좀 더 좋은 것 같다. 지원하는 노드 모듈들이 많은 것도 틀린 말은 아닌데 그것보다는 프레임워크의 버전업을 노드 모듈들이 빠르게 반응해서 맞춰주는 건 react가 더 편한 것 같다. 사실 차이가 그렇게 크지는 않겠지만 그래도 아직 익숙한 건 아직까지 vue인 것 같다.&lt;/p&gt;
&lt;h3&gt;동기화: Working Copy&lt;/h3&gt;
&lt;p&gt;obsidian에서 obsidian sync라는 기능으로 유료 구독제를 결제하면 여러 기기간의 동기화를 지원해주고 있다. 하지만 나는 Working copy라는 어플로 노트북과 아이패드, 아이폰을 동기화 해주고 있다.  결국은 Github로 동기화를 해주고 있는 건데 조금은 불편할지라도 내가 원할 때 커밋을 올리고 버전관리가 더 쉬울 것 같아서 이렇게 사용하고 있다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Nuxt content에 Mathtype 사용하기]]></title><description><![CDATA[기존 블로그에서 이전해온 글입니다. Nuxt.png 삽질 배경 내 개인페이지는 올해 초에 처음 개발되기 시작했었다. 그때도 markdown에 수식을 적용하기 위해 이것저것 시도해보다가 포기했었는데 며칠 전부터 스터디 페이지를 개발하면서 markdown…]]></description><link>https://minjun.blog/nuxt-katex/</link><guid isPermaLink="false">https://minjun.blog/nuxt-katex/</guid><pubDate>Tue, 13 Sep 2022 22:12:20 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://choiminjun.netlify.app/blog/nuxt-katex&quot;&gt;기존 블로그&lt;/a&gt;에서 이전해온 글입니다.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/Nuxt.png&quot; alt=&quot;Nuxt.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;삽질 배경&lt;/h2&gt;
&lt;p&gt;내 개인페이지는 올해 초에 처음 개발되기 시작했었다. 그때도 markdown에 수식을 적용하기 위해 이것저것 시도해보다가 포기했었는데 며칠 전부터 &lt;a href=&quot;https://choiminjun.netlify.app/study/computer-architecture/0-1&quot;&gt;스터디 페이지&lt;/a&gt;를 개발하면서 markdown에 수식을 적어야 할 일이 또 생기고 말았다.&lt;/p&gt;
&lt;h3&gt;문제 상황&lt;/h3&gt;
&lt;p&gt;본 페이지는 Nuxt content와 tailwindcss typography로 개발되었는데 둘 다 markdown에서 수식을 기본적으로 지원해주지 않기 때문에 내가 추가적으로
플러그인이나 패키지를 다운받아 적용시켜줘야했다. 구글링을 하다보면 이 &lt;a href=&quot;https://github.com/nuxt/content/issues/102&quot;&gt;GitHub Issue&lt;/a&gt;가 그나마 제일 믿을 만한 정보가 많았는데 이 페이지뿐만 아니라 거의 모든 사이트들이 &lt;code class=&quot;language-text&quot;&gt;rehype-katex&lt;/code&gt;와 &lt;code class=&quot;language-text&quot;&gt;remark-math&lt;/code&gt; package를 다운받아 적용하라고 한다. 근데 문제는 &lt;code class=&quot;language-text&quot;&gt;nuxt/content&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;rehype-katex&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;remark-math&lt;/code&gt; package들이 새롭게 업데이트 되면서 서로 호환이 되도록 작업을 안해놨기 때문에 전부 다 최신 버전으로 다운 받아 사용할 경우 수식 적용 자체가 되지를 않는다.&lt;/p&gt;
&lt;h2&gt;정답&lt;/h2&gt;
&lt;h3&gt;삽질 방법&lt;/h3&gt;
&lt;p&gt;일단 Nuxt content에서 katex를 지원해주는 방법에 대한 거의 모든 글을 읽어봤을만큼 몇 시간동안 구글링을 해보고 모든 버전들끼리 조합을 해본 뒤에 정답을 찾았다. 또한 &lt;code class=&quot;language-text&quot;&gt;nuxt/content&lt;/code&gt;을 바꿔주게 되면 수식이 필요없는 파일들에게도 영향이 갈 수 있어서 &lt;code class=&quot;language-text&quot;&gt;rehype-katex&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;remark-math&lt;/code&gt; package들만 버전 조합을 찾아봤다. npm downgrade를 하면 쉬운데 에러가 많이 나서 매번 &lt;strong&gt;노드 모듈&lt;/strong&gt;들을 지워주고 &lt;strong&gt;package.json&lt;/strong&gt;을 수정한다음에 새롭게 모듈들을 깔아보면서 로컬에서 실행해보며 확인해주었다.&lt;/p&gt;
&lt;h3&gt;결론&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token string-property property&quot;&gt;&quot;dependencies&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string-property property&quot;&gt;&quot;@nuxt/content&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^1.15.1&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string-property property&quot;&gt;&quot;rehype-katex&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^4.0.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string-property property&quot;&gt;&quot;remark-math&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^4.0.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string-property property&quot;&gt;&quot;katex&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;^0.15.3&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;center&gt;package.json&lt;/center&gt;
&lt;br&gt;
&lt;p&gt;우선 위에서부터 언급한 3가지 package들은 저 버전들로 설치를 해놔야 호환이 된다. 특히 &lt;code class=&quot;language-text&quot;&gt;rehype-katex&lt;/code&gt;는 5버전, &lt;code class=&quot;language-text&quot;&gt;remark-math&lt;/code&gt;는 4버전을 넘기면 안된다. 추가로 &lt;code class=&quot;language-text&quot;&gt;katex&lt;/code&gt; package도 필요한데, 이 package가 없으면 수식을 인식하긴하는데 우리가 원하는대로 깔끔하게 적용되지 않는다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token literal-property property&quot;&gt;css&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;src&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;katex/dist/katex.min.css&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;defer&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&quot;@/assets/css/main.css&quot;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token literal-property property&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token literal-property property&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;remarkPlugins&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;remark-math&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
      &lt;span class=&quot;token literal-property property&quot;&gt;rehypePlugins&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;rehype-katex&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;center&gt;nuxt.config.js&lt;/center&gt;
&lt;br&gt;
&lt;p&gt;그리고 나서 &lt;strong&gt;nuxt.config.js&lt;/strong&gt; 파일에 가서 위와 같이 적용을 시켜줘야한다.&lt;/p&gt;
&lt;h2&gt;마무리&lt;/h2&gt;
&lt;p&gt;아무리 구글링을 해도 답이 안나오길래 Github에 Nuxt content로 빌드된 페이지 레포 중에 markdown에서 수식을 지원해줄 수 있게 작업한 것들을 찾아봤다. 유일하게 한 개가 있었는데 그 레포에서는 &lt;code class=&quot;language-text&quot;&gt;katex&lt;/code&gt; package를 추가로 설치해서 적용해주길래 똑같이 적용시켜보았다.&lt;/p&gt;
&lt;p&gt;이럴 때 보면 확실히 Nuxt가 React에 비해 커뮤니티 활성도가 조금 낮은 듯하다. 지금은 Nuxt가 너무 익숙해져서 넘어갈 생각은 없지만 프로그래밍을 하는데에 있어 커뮤니티가 기여하는 점이 크다는 것을 알았다.&lt;/p&gt;
&lt;p&gt;적게 잡아도 5시간정도는 이 작업만 한 것 같다. 중간에 던질까 생각도 많았는데 모든 경우를 시도해보지 않으면 나중에 후회할 것 같아서 광기어린 눈으로 지구끝까지 삽질을 해보았다. 나처럼 Nuxt content에 mathtype을 적용하고자 하는 사람이 많을 것 같은데 도움이 됐으면 좋겠다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Daily Easy English Expression]]></title><description><![CDATA[How are you doing Ha yuh doin What's up this weekend I'm gonna kick back going to relax and stop doing things I slept in get up late (on…]]></description><link>https://minjun.blog/daily_easy_english_expression_summary/</link><guid isPermaLink="false">https://minjun.blog/daily_easy_english_expression_summary/</guid><pubDate>Tue, 11 Feb 2025 09:44:21 GMT</pubDate><content:encoded>&lt;ol&gt;
&lt;li&gt;How are you doing
&lt;ul&gt;
&lt;li&gt;Ha yuh doin&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What&apos;s up this weekend&lt;/li&gt;
&lt;li&gt;I&apos;m gonna kick back
&lt;ul&gt;
&lt;li&gt;going to relax and stop doing things&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I slept in
&lt;ul&gt;
&lt;li&gt;get up late (on purpose)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;What do you do for a living&lt;/li&gt;
&lt;li&gt;I&apos;m into sports&lt;/li&gt;
&lt;li&gt;My knee went out&lt;/li&gt;
&lt;li&gt;I overslept&lt;/li&gt;
&lt;li&gt;to stock up on something
&lt;ul&gt;
&lt;li&gt;to buy a large quantity of something&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;to count on&lt;/li&gt;
&lt;li&gt;Did you get out ~ing?&lt;/li&gt;
&lt;li&gt;pure nonsense&lt;/li&gt;
&lt;li&gt;to do away with&lt;/li&gt;
&lt;li&gt;I had a long week&lt;/li&gt;
&lt;li&gt;TGIF
&lt;ul&gt;
&lt;li&gt;Thank God It&apos;s Friday&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;to do something up&lt;/li&gt;
&lt;li&gt;to do up something&lt;/li&gt;
&lt;li&gt;because of ~&lt;/li&gt;
&lt;li&gt;thanks to ~&lt;/li&gt;
&lt;li&gt;in a jiffy
&lt;ul&gt;
&lt;li&gt;very soon&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Do it over
&lt;ul&gt;
&lt;li&gt;try again&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;pick up your poison&lt;/li&gt;
&lt;li&gt;poor children&lt;/li&gt;
&lt;li&gt;pathetic&lt;/li&gt;
&lt;li&gt;What purpose does it serve?&lt;/li&gt;
&lt;li&gt;I couldn&apos;t help it&lt;/li&gt;
&lt;li&gt;to look away&lt;/li&gt;
&lt;li&gt;to push it&lt;/li&gt;
&lt;li&gt;Are you done yet?&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[2024 ZeroPage 지금그때]]></title><description><![CDATA[지난 회고 참고: ZeroPage_지금그때_2022 어제 중앙대학교 소프트웨어학부 학술동아리 ZeroPage…]]></description><link>https://minjun.blog/ZeroPage_지금그때_2024/</link><guid isPermaLink="false">https://minjun.blog/ZeroPage_지금그때_2024/</guid><pubDate>Sun, 01 Dec 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;지난 회고 참고: &lt;strong&gt;&lt;a href=&quot;/ZeroPage_%EC%A7%80%EA%B8%88%EA%B7%B8%EB%95%8C_2022&quot; data-wiki-link=&quot;true&quot;&gt;ZeroPage_지금그때_2022&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;어제 중앙대학교 소프트웨어학부 학술동아리 &lt;a href=&quot;https://portal.zeropage.org/&quot;&gt;ZeroPage&lt;/a&gt;에서 매년 주기적으로 열리는 &lt;code class=&quot;language-text&quot;&gt;지금그때&lt;/code&gt; 행사를 다녀왔다.&lt;/p&gt;
&lt;p&gt;이 행사는 졸업하신 선배분들과 재학생이 만나 선배분들의 그때와 우리들의 지금을 서로 공유하고 엿볼 수 있는 자리다. 후배분들은 학업이나 학교생활에 대한 본인의 고민을 털어 놓을 수 있고 이에 대한 조언이나 선배분들의 경험을 들을 수 있다. 반대로 선배분들은 그런 질문들에 조언을 해주시고 요즘은 어떤 공부를 하는지, 학교 생활은 무엇이 달라졌는지 서로 이야기를 나눌 수 있는 자리이다.&lt;/p&gt;
&lt;p&gt;2023년에도 군복무 중에 휴가를 내서 참석을 했었는데 여건 상 기록을 못해서 올해는 이렇게라도 남겨보려고 한다. 올해는 약 20명정도가 모였고 재학생부터 99학번 선배님까지 평소 보기 힘든 분들까지 뵐 수 있었다.&lt;/p&gt;
&lt;h3&gt;진행 방법&lt;/h3&gt;
&lt;p&gt;총 3타임으로 나눠서 진행했고 매 타임마다 자유주제로 이야기를 이어갔다. 하루만에 기억이 날라간게 많아서 아쉽지만 기억나는 대로 적어보고자한다.&lt;/p&gt;
&lt;h3&gt;공부&lt;/h3&gt;
&lt;p&gt;최근에 든 고민 거리 중에 하나였는데, 좀 추상적으로 설명하자면, &apos;이렇게 공부하는 게 맞는가?&apos; 였다. 이런 고민이 든 이유는, 주변 사람들을 보면 각자 너무 재밌어하고 깊게 파고드는 기술이라든가, 개념이라든가, 그 기술 자체에 푹 빠져들어 공부하는 사람들을 많이 봐왔었다. 그러다보니 내가 공부하는 방식이 틀린 건가? 하는 생각이 종종 들었었다.&lt;/p&gt;
&lt;p&gt;지금까지는 어떠한 문제를 푸는 과정에서 필요에 의해 몇몇 개념과 기술들을 접하고 공부했는데 이러다보니 넓지만 얕은 지식만 쌓은 느낌이 들었다. 이런 고민이 들 찰나에, 선배가 해주신 말로는, 기본기가 잘 갖춰진 상태라면 아무 문제 없다, 오히려 본인은 한창 빅데이터에 푹 빠져서 공부를 했는데 요즘은 누구나 다 쓴다며 기술의 유행은 시도때도 없이 변하니까 그거에 맞게 따라갈 줄 알면 된다고 하셨다.&lt;/p&gt;
&lt;p&gt;필요에 의해 시작한 공부만큼 동기부여가 잘 된 경우가 없다는 이야기를 들었는데, 조금은 안심이 됐다. 그래도 어긋나가지는 않았구나 하는 생각이 들었다. 그렇지만 제너럴리스트는 되기 싫으니까, 공부를 해나가다가 내가 잘할 수 있는 분야를 얼른 찾아야겠다는 생각이 들긴 했다.&lt;/p&gt;
&lt;h3&gt;군대&lt;/h3&gt;
&lt;p&gt;아직 미필인 후배들한테는 한창 군대 이슈가 핫했다. 재작년의 나를 보는 기분이었다. 정보보호병으로 갈지, 공군을 갈지, 카투사는 붙을 수 있을지, 다 안되면 어떡하지, 등 여러 고민과 이로 인한 공부에 대한 공백 때문에 스트레스를 너무 받았었는데, 23학번 후배들도 비슷한 고민이 있는 것 같았다.&lt;/p&gt;
&lt;p&gt;이제와서 생각하면, 뭐로 가든 장단점은 있고, 대신 전역하고 복학 전까지 충분한 시간을 마련할 수 있게 군대를 가는 게 좋은 것 같다. 군대에서도, 군대에서만 배울 수 있는 게 있으니까 그거에 집중하고 평소에 하지 못했던 것들을 경험해보는 게 군복무를 잘 다녀오는 방법인 것 같다.&lt;/p&gt;
&lt;p&gt;평소 읽지 못했던 책을 읽어보고 많은 고민을 해보고, 본인에 대해 더 알아보고 취향을 찾아보는 것도 지루한 군복무를 조금은 다채롭게 만들 수 있는 방법인 것 같다. 운동을 습관화해오는 것도 추천한다.&lt;/p&gt;
&lt;h3&gt;우리 동아리 문 닫습니다?&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/Pasted%20image%2020241202230437.png&quot; alt=&quot;Pasted image 20241202230437.png&quot;&gt;
그렇다고 한다. 전역한 지 얼마 안돼서 동아리가 이 정도인 줄 모르고 있었는데 생각보다 활동 인원이 없는 것 같다. 선배분들 말로는 전에도 똑같은 상황이 있었다고, 걱정하지 말라고 하셨는데 회장단은 또 나름대로 고민이 많아보였다.&lt;/p&gt;
&lt;p&gt;내가 보기엔 동아리를 이끌어줄 3,4학년들이 코로나 학번이라 많이 없는 것 같다. 내가 새내기때도 열심히 활동하는 3,4학년을 보고 이거저거 참여했었는데, 지금은 고학년 부재로 참여하는 저학년분들이 없어서 아쉬운 것 같다. 그래도 애정하는 동아리인만큼, 어떻게든 동아리가 잘 이어나갔으면 좋겠다.&lt;/p&gt;
&lt;h3&gt;2024 지금그때 회고&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/Pasted%20image%2020241203000143.png&quot; alt=&quot;Pasted image 20241203000143.png&quot;&gt;
재학 중인 선후배도 만나고, 현직에 계신 분들도 만나면서 얼른 다시 학교 생활을 하고 싶다는 생각이 잠깐 들었다. 아직도 모르는 게 너무 많고, 배워야할 것도 너무도 많지만 그 과정이 너무 재밌고 내년, 내후년의 내가 어떤 고민을 갖고 살아갈지가 궁금해지는 하루였다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[2022 ZeroPage 지금그때]]></title><description><![CDATA[기존 블로그에서 이전해온 글입니다. What is 지금그때? ZeroPage.svg 현재 내가 32대 회장단으로 있는 중앙대학교 소프트웨어학부 학술동아리 ZeroPage에는 매년 주기적으로 열리는 행사가 크게…]]></description><link>https://minjun.blog/ZeroPage_지금그때_2022/</link><guid isPermaLink="false">https://minjun.blog/ZeroPage_지금그때_2022/</guid><pubDate>Sat, 26 Nov 2022 20:00:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://choiminjun.netlify.app/blog/after-jigeumgeuddae&quot;&gt;기존 블로그&lt;/a&gt;에서 이전해온 글입니다.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;What is 지금그때?&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/ZeroPage.svg&quot; alt=&quot;ZeroPage.svg&quot;&gt;&lt;/p&gt;
&lt;p&gt;현재 내가 32대 회장단으로 있는 중앙대학교 소프트웨어학부 학술동아리 ZeroPage에는 매년 주기적으로 열리는 행사가 크게 4개가 있다. 오늘은 마지막 행사인 &lt;a href=&quot;https://zp-portal.org/jigeumgeuddae/&quot;&gt;&apos;지금그때&apos;&lt;/a&gt;를 진행했다.&lt;/p&gt;
&lt;p&gt;이 행사는 졸업하신 선배분들과 재학생이 만나 선배분들의 그때와 우리들의 지금을 서로 공유하고 엿볼 수 있는 자리다. 후배분들은 학업이나 학교생활에 대한 본인의 고민을 털어 놓을 수 있고 이에 대한 조언이나 선배분들의 경험을 들을 수 있다. 반대로 선배분들은 그런 질문들에 기꺼이 조언을 아끼지 않아주시고 요즘은 어떤 공부를 하는지, 학교 생활은 무엇이 달라졌는지 서로 이야기를 나눌 수 있는 자리이다.&lt;/p&gt;
&lt;p&gt;작년에도 내가 1학년일 때 이 행사를 참여했었는데 선배분들과 이야기를 하면서 학교 수업에서는 얻을 수 없던 이야기들을 나눌 수 있었고, 취업이나 대학원 뿐이 아니라 개발자라는 종류의 사람이 무엇인지, 앞으로의 공부 방향성을 어떻게 확립해나가야 하는지를 알 수 있었다.&lt;/p&gt;
&lt;p&gt;올해는 이 동아리의 회장단으로서 행사를 준비하고 운영하고 참여했다.&lt;/p&gt;
&lt;h3&gt;진행 방법&lt;/h3&gt;
&lt;p&gt;우선 간단히 아이스 브레이킹을 하고 본격적으로 시작이 됐다. 대략 한 시간씩 3타임이 운영이 됐고 각 타임에는 본인이 관심이 있는 주제가 있는 자리에 가서 편하게 대화를 하면 된다.&lt;/p&gt;
&lt;p&gt;자세한 타임테이블은 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Time&lt;/th&gt;
&lt;th&gt;Activity&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;13:30 - 14:00&lt;/td&gt;
&lt;td&gt;참가자 등록&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14:00 - 14:30&lt;/td&gt;
&lt;td&gt;개회사&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14:30 - 15:00&lt;/td&gt;
&lt;td&gt;아이스브레이킹&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;15:00 - 16:00&lt;/td&gt;
&lt;td&gt;월드카페 1부&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;16:00 - 17:00&lt;/td&gt;
&lt;td&gt;월드카페 2부&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;14:30 - 15:00&lt;/td&gt;
&lt;td&gt;월드카페 3부&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18:00&lt;/td&gt;
&lt;td&gt;후기 및 폐막&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;18:30&lt;/td&gt;
&lt;td&gt;회식&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;주제는 신청하신 분들이 원하는 것을 바탕으로 총 12개를 만들었다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;무슨 공부를 해야하는가, 학부생때 해야할 것들에 대한 추천&lt;/li&gt;
&lt;li&gt;학교 수업을 따라가는 것이 중요한가&lt;/li&gt;
&lt;li&gt;졸업생으로서 가장 유용하게 생각하는 과목&lt;/li&gt;
&lt;li&gt;취업을 위해 준비해야할 것들&lt;/li&gt;
&lt;li&gt;대학원에 대한 조언&lt;/li&gt;
&lt;li&gt;관심 분야를 어떻게 정했는지&lt;/li&gt;
&lt;li&gt;지금 하는 일이 즐거운 이유&lt;/li&gt;
&lt;li&gt;컴퓨터 전공자는 어떤 유형으로 사회에 진출하는가&lt;/li&gt;
&lt;li&gt;ZeroPage가 나에게 미친 영향&lt;/li&gt;
&lt;li&gt;시간, 멘탈 체력 등의 관리&lt;/li&gt;
&lt;li&gt;방학에는 무엇을 하는 게 좋은가&lt;/li&gt;
&lt;li&gt;개발자와 커뮤니케이션에 대해&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;어떤 주제에 참여했는가&lt;/h2&gt;
&lt;p&gt;꼭 한 타임에 한 주제에 머물러 있을 필요는 없었는데 자리에서 이야기를 하다보니 물어볼 것도 많았고 들을 내용도 많아서 총 3개의 주제에 참여를 했다.&lt;/p&gt;
&lt;h3&gt;학교 수업을 따라가는 것이 중요한가&lt;/h3&gt;
&lt;p&gt;첫 번째 타임에 참여한 주제다. 사실 이 주제는 내가 1학년 때부터 재학생 선배분들께 많이 물어보며 다녔고 이에 대한 답도 알지만, 오늘 처음 본 선배분들, 특히 현업에 종사하신 분들의 생각은 어떤지 궁금해서 자리를 찾아갔다.&lt;/p&gt;
&lt;p&gt;당연히, 다들 중요하다고 대답해주셨다. 근데 그거에 덧붙여서 이야기 해주신게 기억이 남았다. 내 기억에 남는대로 재해석을 하자면, 학교에서 배운 내용은 일종의 지도 같은 역할을 한다고 하셨다. 당장은 현업에서 쓰이지 않고 내가 필요로 하지는 않을 수도 있지만, 언젠가 내가 그 지식이 필요할 때 그 길을 찾는데 유리하다고 한다. 또한 본인이 취직을 하든, 연구를 하든 무엇을 할 지 아무도 알 수 없기에 기회비용일 수도 있지만 잘 만들어진 학교 커리큘럼을 따라가는 게 맞다고 하셨다.&lt;/p&gt;
&lt;p&gt;하지만 오히려 반대로 학점은 그리 중요하지 않았다. 대학원을 준비하지 않는 이상, 취업을 할 때는 학점보다는 그 과목을 본인이 자신의 말로 설명할 수 있는지, 얼만큼 자기의 지식으로 만들었는지를 판별하기 때문에 학점에 그리 목 메이지 않아도 된다고 한다.&lt;/p&gt;
&lt;p&gt;그래서 나는 요즘 기업에서 신입을 뽑을 때 학점보다는 프로젝트를 더 중요하게 생각하냐고 여쭤봤고, 거기 계신 세 분의 선배들 모두 얼추 맞다고 대답하셨다. 대신 우리들이 프로젝트를 통해서 어떤 특정한 모습을 뽑내려고 안해도 된다고 하셨다. 지원자들을 보면, 프로젝트를 통해 본인의 특장점을 억지로 어필하려는 모습이 보인다고 하는데 이러한 점보다는 오히려 &lt;strong&gt;본인이 문제를 정의하고, 몰두하고, 해결해나가는 과정 속에서 생기는 고민이나 선택들에 대한 이유를 본인만의 생각으로 논리적이게 풀이할 수 있고 그 과정을 제시할 수 있으면 된다고 했다.&lt;/strong&gt; 단순히 예를 들자면, 왜 React를 안쓰고 Nuxt로 개발을 하는지에 대한 본인만의 생각이 있고 말을 할 수 있으면 그걸로 충분하다는 얘기다. 실제 현업에서도 예시와 경우가 많기 때문에 이런 상황에는 지원자가 어떤 이유로 왜 이런 선택을 하는지 알아가는 과정인 것이었다. 또 더불어서 &lt;strong&gt;학교에서 배운 내용들을 본인의 프로젝트에 적용하려는 시도를 하면 좋을 것 같다고 하셨다.&lt;/strong&gt; 개념적이고 추상적인 CS 지식을 프로젝트에 적용하는 게 쉽지는 않지만 low level를 다루면서 양질의 프로젝트를 만들 수 있거나 문제를 해결할 수 있는 근본적인 해결책을 찾을 수도 있다고 하셨다.&lt;/p&gt;
&lt;h3&gt;관심 분야를 어떻게 정했는지&lt;/h3&gt;
&lt;p&gt;두 번째 타임에 참여한 주제다. 입학 전부터, 나는 문제를 찾아 공학적인 기술로 해결해나가는 것을 좋아했다. 그렇다보니 프로젝트성 공부를 지속했었다. 문제를 해결해나가는 과정에서 앱이 필요하면 앱 개발 공부를 했고, 웹이 필요할 것 같으면 그때부터 웹을 공부하기 시작했다. 필요성에 의해 공부를 하다보니 여러 분야를 어느정도 경험은 해봤지만 특정 분야에 대한 깊은 지식이나 내가 그 분야를 제대로 잘 안다고 말을 할 수는 없었던 것 같았다. 그래서 최근에는 내가 좋아하는 분야를 찾아서 깊게 파보고 싶다는 생각이 문득 들었고 선배분들은 어떻게 본인의 분야를 정했는지 궁금했다.&lt;/p&gt;
&lt;p&gt;여러 선배들의 조언을 정리하면 아래와 같다.&lt;/p&gt;
&lt;p&gt;우선 다양한 경험을 해봐야한다는 것이었다. 동아리 내에서 스터디를 하든, 더 몰입감 있게 공모전을 나가든 어느정도의 강제성을 부여한 채로 여러 분야를 접해야한다는 것이다. 사실 지금 관심 분야를 찾아도 실제 현업에 나가면 자신이 관심있어 하는 분야를 다루는 경우는 일부기 때문에 한 분야를 깊게 파는 것이 물론 개인의 성장에 도움은 되지만, 관심 분야를 못 정했다고 불안해할 필요는 없다고 하셨다. 다만 오래 방황을 할 경우에는 학교 공부를 더 열심히 해야한다고 하셨다. 학교에서 배우는 CS 지식이 현업에서 일하는 지금까지도 도움이 되기 때문에 기본 중에 기본이 되는 내용들은 탄탄히 쌓을 필요가 있다고 했다.&lt;/p&gt;
&lt;p&gt;사실 너무 당연한 얘기였다. 오히려 선배분께서 지금처럼 필요에 의해 찾아 공부하고 고민하는 시간이 필요한 게 당연하다고 하셨다. 그 말에 안심이 되기도 했고, 지금처럼 지치지 말고 여러 자극을 받으며 살아야겠다고 생각했다.&lt;/p&gt;
&lt;h3&gt;방학에는 무엇을 하는 게 좋은가&lt;/h3&gt;
&lt;p&gt;세 번째 타임에 참여한 주제다. 사실 세 번째 타임에는 조언을 들으러 간 게 아니라 1학년분들이 계셔서 고민을 들어주려고 갔었다. 그래봤자 1년 차이라 도움이 될 지는 모르겠지만, 그래도 쉬지 않고 바쁘게 1학년을 보냈다고 말할 수 있어서 좋았던 점, 또 아쉬웠던 점을 들려주려고 갔다.&lt;/p&gt;
&lt;p&gt;내가 말한 내용만 정리를 하면 아래와 같다.&lt;/p&gt;
&lt;p&gt;난 하나의 기술 스택을 공부해보거나, 학교에서 지원해주는 외부 프로그램을 해보라고 추천했었다. 경험에서 오는 차이만큼 확실한 게 없다고 생각을 해와서 방학만큼은 학기 중에 병행하기 어려웠던 개발공부를 하거나, 해외 프로그램에 참여하는 게 도움이 많이 될 것 같았다. 또한 본인이 졸업 전에 하고 싶은 것에 대한 계획을 세울 필요가 있다고 말해줬다. 교환학생만 해도, 적어도 1년 전부터는 어학성적을 준비해야한다. 외부 동아리도 코딩 테스트를 통과하려면 몇 달을 할애해야한다. 나도 이런 점에 있어서는 부족했고 아쉬웠기에 후배분들은 더 낫길 바라는 마음에 말해줬다.&lt;/p&gt;
&lt;h2&gt;2022 지금그때 회고&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/2022%20%EC%A7%80%EA%B8%88%EA%B7%B8%EB%95%8C.jpg&quot; alt=&quot;2022 지금그때.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;올해에도 작년과 마찬가지로 여러 생각이 들었고 다양한 감정들을 느낄 수 있었다. 참여자로서, 또 이 행사를 준비했던 회장단으로서도 느낀점이 있었다.&lt;/p&gt;
&lt;p&gt;우선 장소가 급히 바뀌어 예상했던 방향대로 안흘러가서 좀 아쉬웠다. 그럼에도 다른 회장단들이 열심히 같이 준비해줘서 다행이었고 무사히 진행됐다는 점에서 뿌듯하기도 했다. 이럴 때마다 회장단하길 잘한 것 같다는 생각이 든다.&lt;/p&gt;
&lt;p&gt;1년동안 학교 생활을 하다보면 자연스럽게 진로에 관한 이런저런 고민들이 쌓이게 된다. 오히려 난 방향성 없게 입에 넣어주는 공부만 하면 안된다고 생각하고 본인이 학교를 다니면서 진로나, 학업, 개발 등 본인만의 여러 고민들이 생겨야한다고 생각한다. 나는 그럴 때마다 물어볼 곳이 없었는데 졸업을 하셔도 여전히 관심을 가져주시는 분들 덕분에 동아리 운영도 되고 나와 같은 재학생들의 고민이 조금은 덜어지는 것 같다. 선배분들께 질문을 하고, 이야기를 하다보면 내 로드맵을 잠시 먼 시점에서 관찰하는 느낌이 든다. 미로에서 잠시 나와 탈출구가 어딨는지 확인하는 느낌이었다. 평상시에 갖고 있던 여러 고민들이 하나하나 풀려서 그런가 다시금 방향성이 잡히고 새로운 자극을 찾은 느낌이 들었다.&lt;/p&gt;
&lt;p&gt;학부 차원에서 이런 이벤트를 유지를 못시켜서 더욱 동아리 선배분들께 감사하기도했다. 다만 아쉬운 건, 1학년분들도 나와 같은 기분을 느끼셨으면 했다. 듣는 것에만 익숙해진 분들이 꽤 있으셨는데 기회를 놓치지 않고 이런 저런 질문을 더 많이 했으면 어땟을까.. 라는 생각이 들었다.&lt;/p&gt;
&lt;p&gt;추가로 선배분들이 어떤 일을 하는지, 어느 분야를 공부하고 계신지 여쭤봤었는데 그럴 때마다 난 &lt;strong&gt;대체 불가능 한 사람, 개발자를 위한 개발자&lt;/strong&gt;라는 타이틀을 내밀 수 있는 사림이 되어야겠다고 생각했다. 본인이 지금 무엇을 하고 있는지, 자신 있게 보여주고 설명하는 모습이 내가 바라는 모습이기도 했다. 지금 내가 하고자 하는 분야를 뚜렷히 못정해서 저런 생각이 들은 것 같기도 했다. 앞으로도 많은 자극들을 받으며 아직 접해보지 못한 것들을 경험해보고 싶었고, 지금 도움을 받은 만큼 나의 지금이 그때가 될 때 후배분들의 지금에 도움이 될 수 있는 사람이 되어야겠다는 생각을 했다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[sigchi 2024 관심 주제]]></title><description><![CDATA[학>SIGCHI 2024 1. Touching the Moon: Leveraging Passive Haptics, Embodiment and Presence for Operational Assessments in Virtual Reality Intro…]]></description><link>https://minjun.blog/interesting topic among sigchi 2024/</link><guid isPermaLink="false">https://minjun.blog/interesting topic among sigchi 2024/</guid><pubDate>Sat, 07 Sep 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;학&gt;&lt;a href=&quot;https://programs.sigchi.org/chi/2024&quot;&gt;SIGCHI 2024&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://programs.sigchi.org/chi/2024/program/content/147838&quot;&gt;1. Touching the Moon: Leveraging Passive Haptics, Embodiment and Presence for Operational Assessments in Virtual Reality&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;Intro 요약&lt;/h3&gt;
&lt;p&gt;다시금 달에 가기 위해 인력, 통신, 하드웨어, 소프트웨어 및 데이터 등 새로운 솔루션들이 뒷받침되고 있음. 달과 같은 더 밝은 빛, 더 어두운 그림자, 감소된 중력이 있는 상황 속에서 우주인이 부피가 크고 제한적인 우주복을 입고 장애물을 탐색해야함. 이러한 독특한 상황들을 시뮬레이션 하기 위해 VR이 활용되고 있음.&lt;/p&gt;
&lt;p&gt;VR은 달의 환경 조건을 시각화하고 예상되는 시나리오를 테스트하는데 이상적인 도구이지만 시청각적 특성만 제현가능하다는 점 때문에 달을 완벽히 구현하는데 한계가 있음.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;본 연구에서는 장갑과 물리적 모형을 이용해 실제와 비슷한 촉각적, 운동 감각을 구현&lt;/strong&gt;하고 가상 신체에 대한 구체화 감각을 향상시키려는 노력을 함.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://programs.sigchi.org/chi/2024/program/content/146728&quot;&gt;2. Mindfulness-based Embodied Tangible Interactions for Stroke Rehabilitation at Home&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;Intro 요약&lt;/h3&gt;
&lt;p&gt;전 세계적으로 뇌졸중 환자 수가 증가하며 재활 비용이 상승하고 있음. 경제적인 문제 이외에도 물리 치료사도 부족하기 때문에 가정에서 재활 활동을 하기 어려움. 최근에는 촉각으로 상호 작용할 수 있는 도구를 통해 재활을 하기 시작했는데, HCI 분야에서 웨어러블 기기 분야로 연구를 하고 있음.&lt;/p&gt;
&lt;p&gt;Mindfulness-based interventions는 신체적, 심리적으로 뇌졸중 회복에 도움이 된다고 함. 본 연구에서는 &lt;strong&gt;Mindfulness-based interventions와 촉각을 결합하여 가정에서 재활을 위해 구체화할 수 있는 기술 설계를 연구함.&lt;/strong&gt; 이 연구는 Mindfulness-based Embodied Tangible Interactions(MBETI)에 대한 디자인 원칙 개발에 기여함.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://programs.sigchi.org/chi/2024/program/content/147082&quot;&gt;3. “I know I have this till my Last Breath”: Unmasking the Gaps in Chronic Obstructive Pulmonary Disease (COPD) Care in India&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;Intro 요약&lt;/h3&gt;
&lt;p&gt;비전염성 질환(NCD: Non-communicable disease)은 전 세계 사망자의 74%를 차지함. 이러한 비전염성 질환 중 만성 호흡기 질환(CRD: Chronic Respiratory Diseases)은 사망률에 크게 기여함. 최근 20년 사이에 사망률 28.5%, 유병률 39.8% 증가. 그 중 만성 폐쇄성 폐질환(COPD: Chronic Obstructive Pulmonary Disease)은 흔하지만 진단하기가 어려워 전 세계 사망 원인 중 3위를 차지함. 세계보건기구(WHO)는 심각성을 인지하고 NCD 예방  및 관리를 위한 세계 행동 계획과 지속 가능한 개발을 UN 2030 의제에 포함 시킴.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;COPD와 같은 CRD로 인한 사망의 90%는 저소득 및 중소득 국가에서 발생&lt;/strong&gt;. 2016년, CRD는 인도의 총 사망 및 장애 조정 생명 연수(DALY)의 10.9%와 6.4%를 차지, 이 중 CRD로 인한 총 DALY의 75.6%가 COPD에 기인. &lt;strong&gt;인도의 의료 인프라에 불균형이 있기 때문&lt;/strong&gt;. 대기 오염이 심화되면서 인도에 상당한 사회경제적 부담이 생김. 2016년 인도에서 COPD로 인한 총 DALY 중 53.7%가 대기 오염에 기인. 병원과 병상이 인도 인구에 비해 현저히 적음.&lt;/p&gt;
&lt;p&gt;HCI 연구원들은 최근 몇 년 동안 CRD에 점점 더 관심을 보이고 있으며 디지털 건강 모니터링 및 웨어러블 장치, 원격 진료 및 원격 의료 솔루션, 행동 개입 및 게임화, 자기 관리를 포함한 CRD 치료의 다양한 측면을 다루고 있음.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://programs.sigchi.org/chi/2024/program/content/146904&quot;&gt;4. Evaluating ActuAir: Building Occupants&apos; Experiences of a Shape-Changing Air Quality Display&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;Intro 요약&lt;/h3&gt;
&lt;p&gt;건물이 점점 더 센서가 많아지고 기후 변화 압박 속에서 인식 및 웰빙 목적으로 건물 내 환경 데이터를 사용하는 데 대한 관심이 커지고 있음. 그에 비해 대형 모양 변경 디스플레이를 중심으로 한 연구에서는 거주자의 공기 질 데이터 경험에 대한 연구는 별로 없음.&lt;/p&gt;
&lt;p&gt;ActuAir 시스템은 생체 모방 개념에서 영감을 받은 모듈식 맞춤형 룸 디바이더로, 팽창과 LED 애니메이션으로 AQ(Air Quality)를 표시. 이와 같은 대규모 소프트 로봇 및 모양 변경 반응형 아키텍쳐는 미래 스마트 빌딩 설계 및 HCI/HBI 연구에 기여함.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[2022년 하반기 회고]]></title><description><![CDATA[기존 블로그에서 이전해온 글입니다. 지난 회고: retrospect-2022-1 들어가기 전에 어느덧 연말이 다가왔다. 상반기 회고를 쓴 게 엊그제 같은데 다시금 회고를 써야한다는 것을 깨닫고 나서야 연말이 다가왔음을 느꼈다.
202…]]></description><link>https://minjun.blog/retrospect-2022-2/</link><guid isPermaLink="false">https://minjun.blog/retrospect-2022-2/</guid><pubDate>Fri, 23 Dec 2022 12:30:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://choiminjun.netlify.app/blog/retrospect-2022-2&quot;&gt;기존 블로그&lt;/a&gt;에서 이전해온 글입니다.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;지난 회고: &lt;a href=&quot;/retrospect-2022-1&quot; data-wiki-link=&quot;true&quot;&gt;retrospect-2022-1&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;들어가기 전에&lt;/h2&gt;
&lt;p&gt;어느덧 연말이 다가왔다. 상반기 회고를 쓴 게 엊그제 같은데 다시금 회고를 써야한다는 것을 깨닫고 나서야 연말이 다가왔음을 느꼈다.
2022년 하반기 회고를 작성하기 전에, 지난 9월에 작성했던 &lt;a href=&quot;https://minjun.blog/retrospect-2022-1&quot;&gt;상반기 회고&lt;/a&gt;를 다시 읽어봤다. 내가 무슨 생각을 해왔었는지, 하반기에 새운 목표들은 잘 이루었는지 확인해봤다. 다 읽고 가장 먼저 생각이 든 건, &lt;strong&gt;내 사고의 기록은 더 구체적으로, 목표는 더더욱 구체적으로 적어야겠다는 것이&lt;/strong&gt;었다. 나름 한 학기 동안 내가 느꼈던 것들을 자세히 적었다고 생각했는데 지금 다시 보니 그 순간의 기억을 다시 불러내기엔 조금 부족한 것 같다. 이번 회고는 보다 더 다양한 내 기억들을 저장하고자 한다.&lt;/p&gt;
&lt;h2&gt;학교 수업&lt;/h2&gt;
&lt;p&gt;이번 학기엔 전공 수업이 5개였다. 컴퓨터구조, 컴퓨터통신, 객체지향프로그래밍, 오토마타와 형식언어, 데이터베이스설계, 이렇게 총 5개를 들었다. 생각보다 전공 수업을 5개나 듣는 건 쉬운 일이 아니었다. 강의 자체를 오프라인으로 오랜시간동안 듣는 게 너무도 오랜만이었기 때문에 학기 초에는 몸이 적응하기 힘들었었다. 그럼에도 난 시간을 쪼개면 내 개인 개발 공부를 할 수 있는 시간이 있을거라고 생각했는데 학교 수업을 너무 재밌있게 들어서 그런지 그 둘을 병행하기엔 물리적으로 불가능했었다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/Computer-Architecture.jpg&quot; alt=&quot;Computer-Architecture.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;특히 컴퓨터구조와 컴퓨터통신 과목을 배우면서 검은색화면 뒤로, 우리 눈에 보이지 않는 방식으로 일어나고 있는 일들을 얕게나마 알아가는 과정이 흥미로웠다. 컴퓨터구조를 공부하면서 수업 자료 이외에도 원서도 많이 읽었는데, 학교 강의에서는 다뤄주지 않는 내용들도 궁금해하고 찾아보면서 잠시나마 대학원에 가면 어떨까.. 하는 생각을 했다. 나도 저런 책을 쓸 만큼의 연구를 해보고 싶기도 했고, 책을 읽으면서 나라면 이런 문제를 다르게 접근하지 않았을까.. 혹은 더 효율적인 뱡향으로 풀 수 있지 않을까.. 하는 건방진 생각을 하기도 했다.&lt;/p&gt;
&lt;h2&gt;ZeroPage&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/zp-angelscamp-site.jpg&quot; alt=&quot;zp-angelscamp-site.jpg&quot;&gt;
&lt;img src=&quot;/attachments/zp-%EC%A7%80%EA%B8%88%EA%B7%B8%EB%95%8C-site.jpg&quot; alt=&quot;zp-지금그때-site.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;ZeroPage의 모든 굵지막한 행사들이 끝이 났다. 엔젤스캠프, 지금그때를 진행했고, 1월 초에 다같이 기년회를 할 예정이다. 그때가서도 말할 예정이지만, 나에게 ZeroPage는 가장 자극을 많이 받을 수 있는 곳이었다. 각자 자리에서 열심히 사는 그들을 보며 순수한 열정을 불태울 수 있는, 내가 학교 생활에서 가장 아끼던 부분이었다.&lt;/p&gt;
&lt;p&gt;기년회를 끝으로 공식적인 회장단 활동이 끝이 난다. 한 동아리의 회장단은 참 해야할 일이 많다는 걸 깨달은 한 해였지만, 그럼에도 너무 재미있었던 1년이었다. 사람 만나는 재미를 알게 되고 내 생각을 누군가와 공유한다는 느낌을 받을 수 있던 자리였다.&lt;/p&gt;
&lt;p&gt;1년 사이에 동아리에 대한 애정이 많이 커졌다. 내가 보고 듣고 느끼고 배운 게 많았던 곳이어서 그런지, 회장단이 끝난다는 게 왠지 모르게 시원섭섭한 느낌이다. 동아리 사람들에게 올해의 ZeroPage가 어떻게 기억될지는 모르겠지만, 다들 이 동아리로 하여금 나처럼 배우고 느낀 점이 많으면 그걸로 만족할 수 있을 것 같다.&lt;/p&gt;
&lt;p&gt;32대 회장단을 같이 이끌어온 친구들에게도 너무 수고했다고 고맙다고 전해주고 싶다.&lt;/p&gt;
&lt;h2&gt;2023년&lt;/h2&gt;
&lt;p&gt;적은 건 몇 개 없지만 모니터 앞에서는 몇 시간을 넘게 그동안의 시간들을 쭉 되새겨보았다. 올해는 공부도 열심히 하고 노는 것도 열심히 해서 그런지 시간이 너무 빠르다고 느껴질만큼 바쁘게, 재밌게 보낸 것 같다. 내년엔, 잠시 하던 걸 멈춰두고 2023년 1월 9일에 입대를 하기로 했다. 사실 공부도 더 하고 싶고, 학교 생활도 더 하고 싶고, 더 자극받고 성장하고 싶은데 갑작스럽게 가는 것 같아서 많이 아쉬운 건 사실이다. 하지만 더 늦어질 수도 없고 오히려 하고 싶은 게 너무나도 많아서 하루 빨리 가기로 결정을 하기도 했다. 전역 후에 하고 싶은 게 너무도 많기에, 좀 더 빨리 입대하고 좀 더 빨리 전역할 생각이다.&lt;/p&gt;
&lt;p&gt;군대에서의 계획은 아직 잘 모르겠다. 원래는 토플도 공부하고 알고리즘도 공부하겠다는 목표를 적으려고 했지만, 가봐야 생각이 정리될 수 있을 것 같다. 20살이 돼도 학교 수업과 별개로 열심히 자기 계발하고 공부했었다. 한 번쯤 쉬는 것도 나쁘지 않을 것 같다는 생각이 이 글을 쓰면서 문득 떠올랐다. 대신, 나한테 2023년은 어느때보다 느리게 가겠지만 그래도 인생에 있어서 의미없는 1년으로 만들지 말자는 게 내 작은 목표이다.&lt;/p&gt;
&lt;h2&gt;2022년의 나&lt;/h2&gt;
&lt;p&gt;나는 학교 수업 이외에도 이런 저런 활동 하는 것을 좋아하고, 사람들을 만나서 배우고 같이 공부하는 과정을 좋아하며 그로 인해 얻게 되는 시너지와 에너지를 좋아하는 사람이다. 하지만 올해에는 부족한 점도 있었다.&lt;/p&gt;
&lt;p&gt;어느 순간 팀플 과제를 하는 내 모습이 내가 원하던 모습이 아니었다는 것을 깨달았다. 성적에 대한 욕심 때문에 기분이 내 태도가 되어버린 순간들이 몇몇 있었다. 팀 프로젝트를 하면서 가장 아쉬운 순간은, 팀원들이 나만큼 이 과제에 진심이 아니었다는 걸 깨달은 순간이다. 데일 카네기는 인간관계의 기본원칙을 설명하면서 마지막으로 &quot;상대방에게 열렬한 욕망을 불러일으켜라.&quot;라고 한다. 수도 없이 읽은 구절인데 팀원들에게 미안하기도 하고 아직은 부족한 나에게 실망한 순간이었다.&lt;/p&gt;
&lt;p&gt;반대로 올해의 내가 잘한 점은, 나에게 집중할 수 있는 시간이 많았다는 것이다. 해외프로그램을 다녀온 이후로 나한테 보다 더 집중할 수 있었다. 관심과 욕심은 내가 성장할 수 있게하는 내 동력원인데 항상 그 관심의 영역에는 내가 없음을 깨달을 수 있었다. 내가 잘하고 못하는 게 무엇인지, 내 관심사와 시선은 어디로 향하는지 알 수 있었고 이외에도 감정적으로, 또 그 밖으로도 느낀 게 너무 많은 올해였다.&lt;/p&gt;
&lt;h2&gt;마무리하며&lt;/h2&gt;
&lt;p&gt;회고를 하면서 올해는 돌아봤는데 알차게, 또 후회없이 보낸 것 같아서 다행이었다. 나를 성장시킬 수 있었던 한 해였고, 동기부여가 많이 됐던 한 해였다. 다음 회고는 아마 24년 하반기 회고가 될 것 같은데 얼른 그 회고를 쓰는 날이 다가왔으면 좋겠다&lt;/p&gt;</content:encoded></item><item><title><![CDATA[2022년 상반기 회고]]></title><description><![CDATA[기존 블로그에서 이전해온 글입니다. 들어가기전에 이 글을 작성하는 오늘은 9월 5일, 하반기에 접어들고 벌써 2학년…]]></description><link>https://minjun.blog/retrospect-2022-1/</link><guid isPermaLink="false">https://minjun.blog/retrospect-2022-1/</guid><pubDate>Mon, 05 Sep 2022 12:30:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://choiminjun.netlify.app/blog/retrospect-2022-1&quot;&gt;기존 블로그&lt;/a&gt;에서 이전해온 글입니다.&lt;/em&gt;&lt;/p&gt;
&lt;h2&gt;들어가기전에&lt;/h2&gt;
&lt;p&gt;이 글을 작성하는 오늘은 9월 5일, 하반기에 접어들고 벌써 2학년 2학기를 이제 막 시작하는 날이다.
사실 회고를 작성해야겠다고 생각한 건 꽤 오래되었다. 내가 그동안 어떤 생각을 했고 어떻게 그것들을 달성해나갔는지 되돌아보는 것 자체만으로도 스스로 많은 자극이 되었기에 회고를 작성하는 습관을 들여야겠다고 꾸준히 생각했었는데 내 마음에 들 때까지 내 페이지를 개발하는 게 우선인 것 같아서 조금 늦은 감이 없진 않지만 지금에서야 작성해보고자한다.&lt;/p&gt;
&lt;h2&gt;Google Developer Student Club CAU&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/GDSC.svg&quot; alt=&quot;GDSC.svg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;열정적인 사람들을 만나며&lt;/h3&gt;
&lt;p&gt;2021년 9월쯤, 우연히 학교 에브리타임에서 GDSC CAU 1기를 모집한다는 글을 보았다. 홍보글을 보았을 때 &apos;이 동아리는 개발을 잘하는 사람만
들어갈 수 있는 곳인가?&apos; 라는 의문이 제일 먼저 들면서 나도 모르게 움츠러들었었다. 그런 나에게 반항심이라도 들었는지 떨어져도 본전이라는 마음으로, 한 편으로는 이 동아리를 통해 나도 개발을 잘하는 사람이라는 가치에 한 발자국 더 다가가고자 하는 마음으로 지원을 했고 운이 좋았는지는 모르겠지만 합격을 해서 1년을 열심히 활동하고 얼마전 수료식을 했다.&lt;/p&gt;
&lt;p&gt;21년도에 중앙대학교 소프트웨어학부에 입학을 하고 입학과 동시에 전부 비대면 수업을 들었던 나는 자연스레 학교 생활과는 멀어졌었고 학교 수업만 따라가고 있었다. 그러다가 처음으로 동아리라는 것을 해보고 환경의 중요성을 더욱 실감했던 것 같다. 온라인이었지만 정모에 나가고 스터디를 하고 프로젝트를 진행하면서 나와 같은 목표를 가진, 또 나와 같은 열정을 가진, 어쩌면 나보다도 더욱 큰 꿈을 가진 사람들을 만나면서 그들로부터 동기와 열정을 느끼고 나 또한 다시 내가 하고 싶었던 것들에 몰두할 수 있었다.&lt;/p&gt;
&lt;h3&gt;나를 성장시키는 힘&lt;/h3&gt;
&lt;p&gt;이 동아리를 통해 기술적으로 배운 것들도 많았지만 더욱 중요하게, 나라는 사람을 성장시킬 수 있는 방법을 깨달았다.
그건 바로 &lt;strong&gt;불편함에 익숙해져야한다는 것&lt;/strong&gt;이다. GDSC에서 나는 Flutter를 공부하고 앱 개발을 했는데 매 순간 고민의 연속이었고 기존에 내가 하던 것과는 완전 다른 느낌의 코딩이기에 쉬운 것이 하나 없었다. 이처럼 새로운 언어와 프레임워크를 접하면서 누구나 당연히 불편함을 느낄거라 생각을 한다. 하지만 그 불편함을 느끼는 과정이 학습의 동기가 되고 성장의 과정이라는 것을 배웠다. 2학년인 지금도 새롭게 배우고 접하는 것들이 많지만 앞으로도 다를 것 같지는 않아보였다. 중요한 건 그런 과정 속에서 나를 둘러싼 불편함을 받아드리고 적응하는 것임을 배울 수 있었다.&lt;/p&gt;
&lt;p&gt;또 다른 것으로는, &lt;strong&gt;새로움에 주저하지 말자는 것&lt;/strong&gt;이다. 아무것도 모르는 1학년 학부생이 무작정 동아리에 들어가고 FE/BE 경험도 없으면서 Flutter를 시작하는 것이 누가 보기엔 살짝 무모하다 할 수 있지만 그럼에도 생각을 실천으로 옮기는 것 또한 나를 성장시키는 방법이라고 생각했다. 처음 동아리에 들어갔을 때 내가 유일한 1학년이었다. &apos;내가 잘 따라갈 수 있을까&apos; 걱정도 했지만 새로움에 도전하는 걸 어느순간 내가 즐기고 있음을 느꼈던 것 같다. 처음에는 쉬운 것조차 어떻게 하는지 몰라서 많이 헤매고 시도때도 없이 선배들한테 질문을 했는데 지금 생각해도 본인 일처럼 친절하게 알려준 선배들께 감사하다.&lt;/p&gt;
&lt;h2&gt;ZeroPage | 중앙대학교 소프트웨어학부 학술연구회&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/ZeroPage.svg&quot; alt=&quot;ZeroPage.svg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;회장단 상반기 회고&lt;/h3&gt;
&lt;p&gt;GDSC에서 가깝게 지낸 사람들이 대부분 중앙대학교 소프트웨어학부 학술연구회인 ZeroPage 소속이었다. 그들과 지내면서 자연스레 나도 ZeroPage에 가입을 했고 작년 하반기에 열심히 활동을 하면서 이 동아리를 이어나가고자 올해 초 회장단에 지원을 했다.&lt;/p&gt;
&lt;p&gt;회장단으로 한 학기를 보내고 되돌아봤을 때 잘한 점도 있는 것 같고 아쉬운 점도 몇몇 있는 것 같다. 우선 대면으로 조금씩 허용되면서 그동안의 행사들과 동아리 분위기를 바꾸고자 나름대로 노력을 했다. 최근에는 Devils Camp를 대면으로 진행했는데 마침 내가 그때 코로나에 걸려 못 간 게 아쉬웠다. 또한 동아리를 유지하기 위해서는 회원들을 꾸준히 모집하는 것도 중요한데 그래도 노력한만큼 동아리가 유지되고 있는 것 같아서 다행인 것 같다.&lt;/p&gt;
&lt;p&gt;최근에 후배분들 중 한 분이 동아리 회장단을 하는 게 부담스럽지 않냐고 물어봐주셨다. 30년 넘게 유지되고 있는 동아리라 초반에는 부담도 됐지만 지금은 조금이나마 편해진 것 같다. 그럼에도 불구하고 나는 그 후배분께 본인이 애정을 쏟고 싶은 곳이 있다면 회장단만큼 유대감을 크게 느낄 수 있는 방법이 몇 없을 거라고 말을 해줬다. 매주 정모를 하고 함께 스터디를 해나가면서 같이 성장해나가는 기분은 말로 설명할 수 없을 무언가가 있는 것 같다고 말이다. 아직 상반기밖에 안지났지만 여전히 하루하루 느끼는 게 많은 것 같다. 요즘 하는 생각은 &apos;&lt;strong&gt;어렵지 않은 사람이 되자&lt;/strong&gt;&apos;이다. 여러 사람을 만나며 소통을 해나가는 과정 속에서 처음의 진입장벽을 허무는 게 중요한 것 같다. 그래서 앞으로는 스터디도 더 자주 개최하고 보다 활동적인 동아리를 만들려고 계획 중이다.&lt;/p&gt;
&lt;h2&gt;해외인턴프로그램&lt;/h2&gt;
&lt;p&gt;얼마 전, 여름방학에 미국 LA로 한 달간 인턴프로그램을 다녀왔다. 본 프로그램을 통해 창업이라는 개념에 벽이 조금은 허물어진 것 같고, 진지하게 교환학생에 대해서 생각을 해보았다. 다른 문화 속에서 내가 좋아하는 분야를 공부해보고 싶다. 대학원을 해외로 가는 방법도 있지만, 그건 차후에 내가 공부하고 싶은 분야를 뚜렷이 찾으면 고민해볼 것 같다.&lt;/p&gt;
&lt;h2&gt;운동&lt;/h2&gt;
&lt;p&gt;내 책상 바로 옆에 풀업을 할 수 있는 치닝디핑(턱걸이 기구)과 덤벨이 있다. 작년 초부터 지금까지 못해도 일주일에 3번이상 꾸준히 운동을 해오고 있는데 점점 개수가 느는 게 보인다. 책상에 앉아있는 시간이 많아질 수록 체력 또한 중요하다고 생각해서 눈에 보이면 일단 하나 당기고 본다. 앞으로는 더 바빠질 것을 대비해서 오전 시간을 최대한 활용해보고자 한다.&lt;/p&gt;
&lt;h2&gt;앞으로의 목표&lt;/h2&gt;
&lt;p&gt;지난 한 학기, 크게는 1년을 돌아보며 나는 다양한 사람들과 만나면서 다양한 방면으로 성장하고 있음을 느꼈다. 이렇게 회고를 하다보니 뿌듯하기도 하고 새롭게 자극받는 기분이 든다. 2학년 2학기를 시작하고 있는 지금, 전공을 5개나 듣고 있지만 또 새로운 것에 도전하고 새로운 환경에서 또 다른 사람들을 만나보고 싶다는 생각이 드는 요즘이다. 아직 정확히 무엇을 더 할지는 모르겠지만 올해 하반기에는 좀 더 많은 자극을 받으며 열심히 살고 싶다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[2023년 회고]]></title><description><![CDATA[지난 회고: retrospect-2022-2 이제 막 옵시디언으로 넘어왔는데 이 글이 옵시디언으로 기록하는 첫 번째 글이 되지 않을까싶다. 원래 2023년은 군대로 모든 시간을 보내서 회고를 안쓰려고 했는데 오늘이 입대한 지 딱 1년이 됐고, 그…]]></description><link>https://minjun.blog/retrospect-2023/</link><guid isPermaLink="false">https://minjun.blog/retrospect-2023/</guid><pubDate>Mon, 08 Jan 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;지난 회고: &lt;a href=&quot;/retrospect-2022-2&quot; data-wiki-link=&quot;true&quot;&gt;retrospect-2022-2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;이제 막 옵시디언으로 넘어왔는데 이 글이 옵시디언으로 기록하는 첫 번째 글이 되지 않을까싶다. 원래 2023년은 군대로 모든 시간을 보내서 회고를 안쓰려고 했는데 오늘이 입대한 지 딱 1년이 됐고, 그 1년동안 내가 무슨 생각을 가지고 살았는지, 전역 후에 내가 어떤 목표를 가지고 살아야하는지 한 번쯤은 정리해보려고 늦었지만 휴가를 나와서 23년 회고를 작성하기로 했다.&lt;/p&gt;
&lt;h2&gt;2023년 과연 난 뭘 했을까?&lt;/h2&gt;
&lt;p&gt;사실 한 게 별로 없다. 머리 밀고 훈련소 들어가서 열심히 훈련받고, 자대 배치받고, 흘러가는 시간에 몸을 맡긴 채 하루하루를 녹이고 있는 날들의 연속이었다. 그래도 그 속에서 1년 반이라는 시간이 내 20대의 공백으로만 남는 건 허락하지 못하기에 이거저거 시도를 해봤다.&lt;/p&gt;
&lt;h3&gt;독서&lt;/h3&gt;
&lt;p&gt;사실 난 책과는 그리 친한 편은 아닌데, 훈련소를 들어가면 쉬는 시간에 너무나도 할 게 없었다. 그래서 진중문고에 올라와있던 책을 한 두권씩 읽었는데 난 책이 그렇게 재밌다는 걸 훈련소에서 알았다. 그렇게 훈련소에서 한 두권 읽다가 자대 배치를 받고 핸드폰이라는 신문물을 발견해서 초반에는 열심히 밀린 핸드폰을 하다가 그거마저 지쳐버려서 다시 또 책을 읽기 시작했다. 당직을 서야할 때나 주말에도 꽤 많이 읽었는데 지금 다시 생각하면 막상 기억에 남는 건 몇 개 없는 것 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;우리는 모두 각자의 별에서 빛난다 - 이광형&lt;/li&gt;
&lt;li&gt;세컨드브레인 - 티아고포르테&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다음 휴가 때는 이 2권이라도 책 리뷰를 써볼까한다.&lt;/p&gt;
&lt;h3&gt;운동&lt;/h3&gt;
&lt;p&gt;요즘은 운동을 안하면 불안할 정도로 습관이 된 것 같다. 주변 형들이 군대를 다녀오면 남는 건 군적금과 몸밖에 없다고 하길래 시작했는데 여러모로 군생활을 버티게끔 해준 유일한 취미생활이 된 것 같다. 군생활에 현타가 올 때마다 운동하다보니 재미도 붙어서 주 5회 1시간 이상씩 꾸준히 하고 있다. 전역 후에도 유지할 수 있도록 해야겠다.&lt;/p&gt;
&lt;h3&gt;코딩&lt;/h3&gt;
&lt;p&gt;난 내가 군대에서도 코딩을 할 줄 알았다. 어떻게든 꾸역꾸역 할 줄 알았는데 지금 막상 돌아보면 별로 못한 것 같다. pc가 4대 밖에 없는 사지방에서 차가운 손 녹여가며 해봤는데 집중도 안되고 군e러닝도 하다보니까 당장 눈 앞에 놓인 학점 따기 바빴던 것 같다. 남은 기간 동안에는 군e러닝도 안들으니까 적어도 코테준비를 해야겠다.&lt;/p&gt;
&lt;h3&gt;군e러닝&lt;/h3&gt;
&lt;p&gt;군복무를 하면서 군e러닝을 들을 수 있다. 각 학교에서 군 휴학생을 위해 몇몇 강의들을 개설해주는데 나는 23-1에는 &lt;strong&gt;소비의문화와역사&lt;/strong&gt;, 23-2에는 그 놈의 &lt;strong&gt;실용한자&lt;/strong&gt;를 수강했다. 타 학교에 비해 중앙대가 개설해주는 강의가 별로 없어서 아쉽긴 했지만 실용한자가 군e러닝으로 들을 수 있어서 다행이었다. 아직 실용한자를 수강하지 않은 중대 미필분들은 군대에서 끝내버리세요 :)&lt;/p&gt;
&lt;p&gt;생각보다 뺏기는 시간도 많았고 시험에, 과제에 준비해야할 것들은 군 휴학생이라고 배려해주는 건 별로 없지만 그래도 무의미하게 군생활을 보내지 않고 학점이라도 채운 것 같다.&lt;/p&gt;
&lt;h3&gt;창업아이디어경진대회&lt;/h3&gt;
&lt;p&gt;23년 2월, 8월 2번에 걸쳐서 창업아이디어경진대회에 나갔다. 물론 포상휴가에 눈이 멀어 나갔지만 그래도 반복되는 군생활 가운데 새로운 바람을 불어넣어준 활동이었다. 2월에는 본선에서 떨어져서 8월에 좀 더 열심히 준비해서 다시 도전했다. 이 활동이 어떤 지식의 도약을 일으켜 준 건 아니었지만 지금 생각해보면 군복무하면서 이거저거 시도해보면서 바쁘게 생활한 것 같아서 뿌듯하다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/presentation.png&quot; alt=&quot;presentation.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;2024년 목표&lt;/h2&gt;
&lt;p&gt;군대에 있으면서 &apos;개발자로서 나&apos; 라는 부분에 대해 생각을 많이 해오고 있다. 혼자 고민할 수 있는 시간이 많다보니 이런저런 생각을 하곤 하는데 요즘 난 나라는 개발자가 뭘 좋아하는지, 무엇을 잘하고 어떤 일을 할 때 행복해하는지 고민을 하고 있는 것 같다.&lt;/p&gt;
&lt;p&gt;사실 내가 스스로를 개발자라고 칭할 수 있나? 라는 생각이 들기도 한다. 아직 내 이름을 걸고 보여줄 수 있는 프로젝트도 없고 이룬 게 별로 없는 것 같아서 조바심도 나고 얼른 다시 학교로 가고 싶다는 생각이 든다.&lt;/p&gt;
&lt;p&gt;그래서 2024년의 목표는 커리어 성장과 가치 높이기다. 내년이면 올해보다 회고할 게 많은 내가 되면 좋겠다. 그때까지 옵시디언으로 꾸준히 기록을 해나가면서 유의미한 한 해를 보내고 싶다.&lt;/p&gt;
&lt;p&gt;이렇게 보니 군생활하면서 후회하지 않을 정도로 열심히 산 것 같다. 내년 이맘때도 1년 동안 정말 열심히 살았구나라는 생각을 할 수 있길 바라며 23년 회고와 24년 목표를 기록해본다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[2024년 상반기 회고]]></title><description><![CDATA[지난 회고: retrospect-2023 어느덧 24년 상반기가 지나갔다. 2주 전에 전역도 하고 한창 바쁘게 살고 있는 요즘이다. 물론 공부를 그렇게 한다는 건 아니고 자취 준비도 하고 못 만났던 사람들도 열심히 만나고 있다. 학교는 아직…]]></description><link>https://minjun.blog/retrospect-2024-1/</link><guid isPermaLink="false">https://minjun.blog/retrospect-2024-1/</guid><pubDate>Sat, 20 Jul 2024 20:05:24 GMT</pubDate><content:encoded>&lt;p&gt;지난 회고: &lt;a href=&quot;/retrospect-2023&quot; data-wiki-link=&quot;true&quot;&gt;retrospect-2023&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;어느덧 24년 상반기가 지나갔다. 2주 전에 전역도 하고 한창 바쁘게 살고 있는 요즘이다. 물론 공부를 그렇게 한다는 건 아니고 자취 준비도 하고 못 만났던 사람들도 열심히 만나고 있다. 학교는 아직 4차 학기밖에 안 끝낸 상태인데 엇복학은 힘들 것 같아서 내년에 복학할 예정이고 대신 학부연구생은 하반기부터 진행할 예정이다.&lt;/p&gt;
&lt;p&gt;우선 이번 반기 목표는 아래와 같다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;운동 꾸준히 하기 (체중80 골격근량43 목표)&lt;/li&gt;
&lt;li&gt;코테 준비하기&lt;/li&gt;
&lt;li&gt;좋아하는 분야 찾기&lt;/li&gt;
&lt;li&gt;일찍 자고 일찍 일어나기&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h2&gt;운동 꾸준히 하기&lt;/h2&gt;
&lt;p&gt;입대 후부터 지금까지 습관처럼 운동을 해오고 있는데 이제는 안하면 스트레스를 받는 정도인 것 같다. 좋은 건지, 안 좋은 건지는 모르겠지만 점점 욕심도 생기고 변해가는 모습이 마음에 든다.&lt;/p&gt;
&lt;p&gt;지금은 학교도 안다니고 약속도 정해진 게 없어서 운동을 오전에 해치우고 있는데 학부연구생을 시작하거나 복학하고 나서는 언제 운동을 가야할 지 모르겠다. 운동하는 직장인분들 보면 저녁 늦게 오시는 것 같던데 다들 일정 다 끝내고 힘든 와중에 어떻게들 하는지... 대단한 것 같다.
&lt;img src=&quot;/attachments/inbody.jpg&quot; alt=&quot;inbody.jpg&quot;&gt;
위 사진이 6월말 인바디 결과다. 예전에 비해서는 체중도 많이 늘고 골격근량도 증가해서 진짜 좋아진 편인데 하다보니 욕심이 생겨서... 올해 안으로 체중 80kg, 골격근량 43kg 만드는 게 목표다. 체지방도 많이 필요해보이긴 하는데 그렇다고 지금 복근이 선명하게 보일정도로 마르지도 않아서 더 찌워도 되나... 하는 생각이 든다. 근데 찌우고 싶어도 살이 찌지는 않더라..&lt;/p&gt;
&lt;p&gt;지금은 4분할 운동하고 하루 또는 상황이 여의치 않으면 이틀 쉬어주고 있는데 하반기에도 유지하는 게 목표다. 꾸준히 하자!&lt;/p&gt;
&lt;h2&gt;코딩테스트 준비&lt;/h2&gt;
&lt;p&gt;군복무를 하면서 코테 준비만큼은 목표를 달성하지 못한 것 같다. 지금 상태는 어떤 알고리즘을 써야하는지 보면 어찌저찌 풀 수 있는 정도인데 그 알고리즘 마저도 온전히 내 걸로 만들지도 못했다. 아직 많이 부족한 분야라고 생각이 들고 그만큼 내가 그동안 피해왔던 분야라고 생각이 든다.&lt;/p&gt;
&lt;p&gt;어떤 종류의 알고리즘을 써야하는지 안보면서 푸는 연습, 푸는 방식을 정했으면 스스로 구현하는 연습을 처음부터 기초를 다진다는 생각으로 해야할 것 같고 공부 과정을 여기에 잘 남기도록 해야겠다/&lt;/p&gt;
&lt;h2&gt;좋아하는 분야 찾기 (미래 계획)&lt;/h2&gt;
&lt;p&gt;학부연구생을 하는 것도 이 목표의 일환이기도 한데, 난 내가 생각했을 때 아직은 어떤 분야를 깊게 알고싶은지 모르는 것 같다. 관심사도 계절 바뀌듯이 바뀌어서 넓고 얕은 지식 상태를 유지하고 있는 상황이다. 최근엔 HCI (Human Computer Interactions)에 관심이 생겼다. 그래서 &lt;a href=&quot;https://sites.google.com/view/hcslab-cau/home?authuser=0&quot;&gt;중앙대 김효수 교수님 연구실&lt;/a&gt;에서 학부연구생을 하기로 했고, 아직은 그곳에서 내가 무엇을 할지는 모르겠지만 내 바람은 연구 분위기도 경험해보면서 내가 선택한 분야가 나와 과연 잘 맞는가, 내가 계속 호기심을 갖고 접근하는가, 이런 일련의 과정들을 계속 해갈 수 있을지에 대한 답을 찾아가고 싶다.&lt;/p&gt;
&lt;p&gt;주변에 학교를 졸업하는 사람이 하나 둘 생기면서 과연 난 학사 졸업 후에 무엇을 할 지에 대한 막연한 고민들이 생기기 시작했다. 대학원을 가고 싶은지, 취업을 하고 싶은지, 창업을 하고 싶은지 아무것도 모르는 상태다. 고등학생 때는 당연히 대입이라는 어떻게 보면 정해진 미래 덕분에, 혹은 아직은 미성년자라는 것 때문에 미래에 대한 고민들이 없었지만 대학생이라는 신분은 좀 애매한 것 같다. 법적상 성인이긴 하지만 과연 그만큼의 책임감을 우리가 느끼고 있느냐, 난 개인적으론 아닌 것 같다. 아직은 철 없다고 느끼는 순간도 많고 애처럼 책임을 회피하는 순간들이 종종 있는데, 남은 반기동안에는 졸업 후의 모습에 대해서, 내가 진짜 하고 싶은게 무엇인지 고민할 수 있는 시간을 많이 가져야겠다고 생각이 든다.&lt;/p&gt;
&lt;h2&gt;일찍 자고 일찍 일어나기&lt;/h2&gt;
&lt;p&gt;전역 후에 자연스럽게  늦게 자고 늦게 일어나는... 입대 전 생활로 돌아가고 있다. 그렇다고 새벽까지 생산적인 일을 하는 것도 아니라서 온전히 활용하는 시간이 적다. 오전 시간을 활용하려고 하고 있고 지금도 일찍 자고 일찍 일어나서 운동을 가는 루틴을 습관화하려고 하는데 유지하자.&lt;/p&gt;
&lt;h2&gt;마무리하며&lt;/h2&gt;
&lt;p&gt;지나고나서야 군대에 있는 1년 반이 짧게 느껴지는 것 같다. 그동안 못해왔던 공부를 다시 할 생각에 막막하기도 하고 기대도 되는 시점인데 절반도 안남은 24년을 후회없이 보내고 싶다. 전에도 쓴 것 같은데 기록의 중요성을 다시 한 번 느끼면서 하반기에는 공부 뿐이 아니라 여러 활동들, 생각들을 적으려고 노력해봐야겠다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[2024년 하반기 회고]]></title><description><![CDATA[지난 회고: retrospect-2024-1 돌아보기 이제 25년이라는 게 믿기지 않을 정도로 24년이 빨리 지나갔다. 돌아보니 작년 7월에 전역을 하고 남은 반년을 의미있게 보내려고 나름대로 부지런히 산 것 같은데 우선, 2…]]></description><link>https://minjun.blog/retrospect-2024-2/</link><guid isPermaLink="false">https://minjun.blog/retrospect-2024-2/</guid><pubDate>Fri, 27 Dec 2024 22:00:50 GMT</pubDate><content:encoded>&lt;p&gt;지난 회고: &lt;a href=&quot;/retrospect-2024-1&quot; data-wiki-link=&quot;true&quot;&gt;retrospect-2024-1&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;돌아보기&lt;/h2&gt;
&lt;p&gt;이제 25년이라는 게 믿기지 않을 정도로 24년이 빨리 지나갔다. 돌아보니 작년 7월에 전역을 하고 남은 반년을 의미있게 보내려고 나름대로 부지런히 산 것 같은데 우선, 24년 하반기에는 드디어 자취를 시작했다. 자취를 한 여러 이유가 있지만 무엇보다 그동안 못 해왔던 공부를 할 수 있는 공간을 만들고 싶었다. 군복무를 하면서 항상 코딩이든, 운동이든 자기계발에 대한 갈증이 있었는데 그럴 수 있는 공간이 없어서 아쉬웠다. 또 노트북과 한 몸인 컴공생들은 다들 이런 로망이 하나쯤은 있을 것 같은데, 내가 원하는 세팅을 맞추고 작업을 하고 싶다는 생각을 오래 해왔어서 사실 자취는 핑계 정도가 맞지 않나 싶다.&lt;/p&gt;
&lt;p&gt;우선 24년 하반기에 진행했던 것들은 아래와 같다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;GDG on Campus CAU 4기 Core&lt;/li&gt;
&lt;li&gt;우테코 지원하기&lt;/li&gt;
&lt;li&gt;학부연구생&lt;/li&gt;
&lt;li&gt;운동&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3&gt;우테코&lt;/h3&gt;
&lt;p&gt;입대를 하기 전부터 하고 싶었던 것 중에 하나였다. 전역을 하고 7기 모집 공고만 올라오길 기다렸는데 공고가 올라오자마자 자소서를 준비했던 기억이 있다.&lt;/p&gt;
&lt;p&gt;공부해야할 게 명확했던 고등학생과 달리 대학에 오고 길지 않은 시간일 수 있지만, 그래도 지금까지 공부를 해오면서 항상 내가 향하고 있는 방향이 옳은 방향일까...에 대한 의문이 은연 중에 있었던 것 같았다. 그런 의문을 우테코가 풀어줄 수 있지 않을까, 또한 내가 틀리지 않았음을 스스로 증명하고 싶어서 우테코를 지원했다.&lt;/p&gt;
&lt;p&gt;지원 과정은 많은 시간을 요구한다. 운이 좋게도 나는 2학기도 군휴학 기간이라 다른 분들에 비해 비교적 많은 시간을 쏟을 수 있었고, 그중에서 자소서에 유독 공을 많이 들였다. 자소서는 최대한 담담하게, 내가 해온 것들에 대한 이유와 그 과정에서 느끼고 배운 점들을 최대한 주관적인 관점에서 자세히 적었는데 운이 좋게 잘 통한 것 같다.&lt;/p&gt;
&lt;p&gt;프리코스와 최종 코테를 하면서 코딩을 잘하는 사람은 어딜가나 많구나... 라는 걸 체감할 수 있었다. 당시에는 그런 사람들 사이에서 불안감, 열등감만 느꼈던 것 같은데 지금 생각해보면 한 번 더 겸손해질 수 있는 기회였고 배울 수 있는 점도 찾을 수 있는 시간이었다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/%EC%8A%A4%ED%81%AC%EB%A6%B0%EC%83%B7%202024-12-29%20%EC%98%A4%EC%A0%84%2012.40.35.png&quot; alt=&quot;스크린샷 2024-12-29 오전 12.40.35.png&quot;&gt;
일부러 발표 당일에 기대도 안하려고 했지만 긴장이 엄청 됐던 기억이 있다. 운이 좋게 찾아온 기회인만큼 올해도 열심히 참여해서 배우는 것도, 느끼는 점도 많았으면 좋겠다.&lt;/p&gt;
&lt;h3&gt;학부연구생&lt;/h3&gt;
&lt;p&gt;자취 시작과 동시에 학부연구생을 시작했다. 입대 전에 미리 컨택을 드렸던 교수님의 연구실에 마침 전역할 때쯤에 자리가 생긴다고 해서 이것도 운이 좋게 바로 시작을 할 수 있었다.&lt;/p&gt;
&lt;p&gt;연구 주제도 마침 내가 관심 있어하던 문제를 다루고 있어서 큰 고민 없이 연구를 시작했다. 지금까지 하면서 느낀 점은 내가 생각하는 &lt;code class=&quot;language-text&quot;&gt;개발&lt;/code&gt;이라는 과정이 연구와 크게 다르지 않다는 것이다. 오히려 연구 과정이 캡스톤이나 여타 프로젝트 활동보다 더 &lt;code class=&quot;language-text&quot;&gt;개발&lt;/code&gt;이라는 키워드와 가깝지 않나...라는 생각이 든다.&lt;/p&gt;
&lt;p&gt;요즘 학교를 다니면서 느끼는 건, 학부생에게 학교나 동아리에서 요구하는 개발이라는 경험이 너무 프레임워크나 특정 언어에 대한 지식 수준만 해당하는 것 같은 느낌이 있었다. 내가 생각한 개발자라는 건 결국 현실세계에 있는 문제를 해결하는 과정에서 코딩을 하나의 수단으로 쓸 수 있는 사람인데, 요즘 학교나 동아리에서는 반대로 문제가 안되는 것들을 오히려 강요하고, 그래서 본인들이 제작한 프로그램의 필요성을 강제하는 듯한 느낌이 불편하게 다가오는 것 같다.&lt;/p&gt;
&lt;p&gt;하지만 학부연구생의 신분으로 짧지만 그동안 느꼈던 점은, 내가 문제 자체에 집중할 수 있는 시간이 많아서 좋았다. 그 과정에서 문제의 본질을 고민해보고, 여러 방향으로 생각하면서 &lt;code class=&quot;language-text&quot;&gt;우리가 풀어야하는 문제가 무엇인지&lt;/code&gt; 라는 단계부터 시작할 수 있어서 더 몰입할 수 있었고, 그래서 더 재미있게 다가온 것 같다.&lt;/p&gt;
&lt;p&gt;그치만 우테코를 시작하면서 병행을 하기는 힘들 것 같아 1월까지만 학부연구생을 할 것 같다. 마음 같아서는 둘 다 병행을 하고 싶은데 한 편으론 이것도 내 욕심같아서 복학 후에 다시 시작하지 않을까싶다.&lt;/p&gt;
&lt;h3&gt;운동&lt;/h3&gt;
&lt;p&gt;운동은 하면 할 수록 욕심이 생겨서 어려운 것 같다. 전역 이후에도 꾸준히 일주일에 적어도 4번, 5번은 운동을 해왔는데 어느 순간 내가 드는 중량과 몸이 정체가 돼서 어떻게 더 발전시킬 수 있을지 고민이 되는 시점인 것 같다.&lt;/p&gt;
&lt;p&gt;먹는 양을 늘리는 게 답인 것 같아서 최근에는 운동만큼 먹는 것도 신경을 쓰고 있지만 유의미한 변화가 있을지는 앞으로 더 지켜봐야할 것 같다.&lt;/p&gt;
&lt;p&gt;25년에는 우테코를 하면서 어떻게 병행해나갈지 고민도 된다. 일주일에 적어도 3번, 욕심내서 4번정도 운동을 하고 싶은데 이 부분도 우테코를 시작해봐야 알 수 있을 것 같다.&lt;/p&gt;
&lt;h2&gt;2025년은?&lt;/h2&gt;
&lt;p&gt;군복무 중 밤을 샐 때마다 전역 후의 계획을 세웠는데 신기할만큼 하나하나 이뤄갈 수 있었던 24년이었다. 운도 많이 따라준 것 같고 지금까지 준비해온 것들이 유의미했음을 알 수 있던 시간이었다.&lt;/p&gt;
&lt;p&gt;25년도 어쩌다보니 휴학을 하게 되었는데 여러 사람들을 만나면서 많이 배우고, 깨닫고, 성장할 수 있는 한 해가 되었으면 좋겠다. 깊이 있는 지식을 쌓고 내실을 다질 수 있는 시간이 되도록, 커리어 내외적으로 내 가치를 키울 수 있는 시간이 되도록 노력해보고 싶다.&lt;/p&gt;
&lt;p&gt;2025년에는 새로운 것들에 불편해하지 않고 도전해보기를, 주변 사람들에게 긍정적인 영향을 끼칠 수 있는 사람이 되기를, 부족한 것들을 인정하고 메꿀 수 있는 시간이 되기를 바라면서 24년 회고와 25년 목표를 기록해본다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Understanding DispatcherServlet in Spring MVC]]></title><description><![CDATA[Preview overview.jpg DispatcherServlet 공식문서에 따르면, Spring MVC는 다른 많은 웹 프레임워크들과 마찬가지로 Front Controller Pattern에 기반을 두고 있다. 우선 여기서 말하는 Front…]]></description><link>https://minjun.blog/spring_mvc_dispatcherservlet/</link><guid isPermaLink="false">https://minjun.blog/spring_mvc_dispatcherservlet/</guid><pubDate>Tue, 15 Apr 2025 09:44:21 GMT</pubDate><content:encoded>&lt;h2&gt;Preview&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/overview.jpg&quot; alt=&quot;overview.jpg&quot;&gt;&lt;/p&gt;
&lt;h2&gt;DispatcherServlet&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://docs.spring.io/spring-framework/reference/web/webmvc/mvc-servlet.html&quot;&gt;공식문서&lt;/a&gt;에 따르면, Spring MVC는 다른 많은 웹 프레임워크들과 마찬가지로 Front Controller Pattern에 기반을 두고 있다.&lt;/p&gt;
&lt;p&gt;우선 여기서 말하는 &lt;strong&gt;Front Controller Pattern은 뭘까?&lt;/strong&gt; 이는 어플리케이션에서 들어오는 모든 요청을 하나의 진입점으로 모아서 처리하는 설계 방식이다. 좀 더 자세히 설명하면, 로그인은 LoginServlet에서, 회원가입은 SignupServlet에서 처리하는 게 아니라 공통된 모듈에서 처리해주는 설계방식이다.&lt;/p&gt;
&lt;p&gt;그럼 다시 &lt;strong&gt;Servlet은 뭘까?&lt;/strong&gt; Servlet은 웹 요청을 받아 동적인 웹 페이지나 데이터를 만들어주는 역할을 하는 객체인데, 자바로 만든 서버측 컴포넌트 정도로 이해하고 넘어가려한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;DispatcherServlet도 이 Servlet을 상속해서 만들어진 것으로, 여기서 모든 요청을 받아주고 있다.&lt;/strong&gt; 이후 실제 처리는 여러 delegate component들이 나누어 담당하고 있다.&lt;/p&gt;
&lt;p&gt;delegate components&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Handler Mapping&lt;/li&gt;
&lt;li&gt;Handler Adapter&lt;/li&gt;
&lt;li&gt;View Resolver&lt;/li&gt;
&lt;li&gt;Exception Handler&lt;/li&gt;
&lt;li&gt;etc...&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Spring MVC&apos;s Internal Request Handling Flow&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;DispatcherServlet이 클라이언트로부터 Request를 받는다.&lt;/li&gt;
&lt;li&gt;HandlerMapping을 통해 Request 정보에 대한 알맞은 Controller를 찾는다.&lt;/li&gt;
&lt;li&gt;Request를 Controller로 건내줄 수 있는 HandlerAdapter를 찾아서 건내준다.&lt;/li&gt;
&lt;li&gt;HandlerAdapter를 통해 Controller 메서드를 호출한다.&lt;/li&gt;
&lt;li&gt;반환값(Response)을 HandlerAdapter에게 건내준다.&lt;/li&gt;
&lt;li&gt;반환값에 따라 ResponseEntity로 감싸는 경우가 있고, 이 형식에 따라 다른 Converter가 동작한다.
&lt;ul&gt;
&lt;li&gt;반환값이 view 이름인 경우, ViewResolver를 통해 렌더링&lt;/li&gt;
&lt;li&gt;반환값이 데이터(json)인 경우, ResponseEntity로 감싸고 HttpMessageConverter가 작동
&lt;ul&gt;
&lt;li&gt;단순 문자열이면, StringHttpMessageConverter&lt;/li&gt;
&lt;li&gt;객체면, MappingJackson2HttpMessageConverter&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Deep Dive to Workflow&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/diagram.png&quot; alt=&quot;diagram.png&quot;&gt;
DispatcherServlet은 위와 같은 계층 구조로 이루어져있다. 그래서 각 단계마다 실행되는 메서드의 위치가 다른데, 좀 더 자세히 살펴보자&lt;/p&gt;
&lt;h3&gt;1. DispatcherServlet이 클라이언트로부터 Request를 받는다.&lt;/h3&gt;
&lt;p&gt;외부에서 들어온 요청은 HttpServlet에서 구현된 service 메서드에서 처리된다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;GenericServlet&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ServletRequest&lt;/span&gt; req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletResponse&lt;/span&gt; res&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	    &lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        request &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	        response &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;res&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ClassCastException&lt;/span&gt; var6&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lStrings&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;http.non_http&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	  
	    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이 메서드에서는 외부에서 받은 ServletRequest, ServletResponse 객체를 각각 HttpServletRequest, HttpServletResponse 객체로 캐스팅해주고 다시 서비스를 호출해주는데, 이때 호출되는 service 메서드는 다음과 같다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServlet&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;GenericServlet&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; resp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	    &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; method &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; req&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;method&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;GET&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; lastModified &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getLastModified&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lastModified &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	            &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; resp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	            &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; ifModifiedSince&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	            &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	                ifModifiedSince &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; req&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getDateHeader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;If-Modified-Since&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IllegalArgumentException&lt;/span&gt; var9&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	                ifModifiedSince &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1L&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	  
	            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ifModifiedSince &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; lastModified &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000L&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1000L&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	                &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;maybeSetLastModified&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resp&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; lastModified&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	                &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; resp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	                resp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;304&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;method&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;HEAD&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; lastModified &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getLastModified&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	        &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;maybeSetLastModified&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;resp&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; lastModified&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	        &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;doHead&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; resp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;method&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;POST&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;doPost&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; resp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;method&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;PUT&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;doPut&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; resp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;method&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;DELETE&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;doDelete&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; resp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;method&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;OPTIONS&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;doOptions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; resp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;method&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;TRACE&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;doTrace&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;req&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; resp&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; errMsg &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; lStrings&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;http.method_not_implemented&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	        &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; errArgs &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	        errArgs&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; method&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	        errMsg &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MessageFormat&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;errMsg&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; errArgs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	        resp&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;sendError&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;501&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; errMsg&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;들어오는 Request의 종류에 따라 알맞은 doX 메서드를 각각 호출해주고 있다. 이때 doX 메서드들은 자식 클래스인 FrameworkServlet에서 구현되어있는 것들이 호출된다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FrameworkServlet&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletBean&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ApplicationContextAware&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;  
	&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doGet&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	  
	    &lt;span class=&quot;token function&quot;&gt;processRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	  
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;  
	&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doPost&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	  
	    &lt;span class=&quot;token function&quot;&gt;processRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	  
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;  
	&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doPut&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	  
	    &lt;span class=&quot;token function&quot;&gt;processRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token comment&quot;&gt;// ... 다른 doX 메서드들&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;생각보다 각 doX 메서드에서 해주는 게 없었고 processRequest가 Request에 맞게 처리를 해주고 있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FrameworkServlet&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletBean&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ApplicationContextAware&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;processRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
  
    &lt;span class=&quot;token comment&quot;&gt;// ...  &lt;/span&gt;
  
	    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       &lt;span class=&quot;token function&quot;&gt;doService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       failureCause &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Throwable&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       failureCause &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Request processing failed: &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	  
	    &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;processRequest는 내부에서 doService를 호출하고 있고, 이 메서드는 FrameworkServlet의 자식 클래스인 DispatcherServlet에서 구현되어있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DispatcherServlet&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FrameworkServlet&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doService&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;logRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token function&quot;&gt;doDispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;

&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;또 다시 여기서 doDispatch를 호출해주고 있는데 좀 더 자세히 들여다보자.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;DispatcherServlet&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;FrameworkServlet&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    
    &lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doDispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; processedRequest &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token class-name&quot;&gt;HandlerExecutionChain&lt;/span&gt; mappedHandler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; multipartRequestParsed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;token class-name&quot;&gt;WebAsyncManager&lt;/span&gt; asyncManager &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WebAsyncUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getAsyncManager&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token class-name&quot;&gt;ModelAndView&lt;/span&gt; mv &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; dispatchException &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
       &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          processedRequest &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;checkMultipart&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          multipartRequestParsed &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
          &lt;span class=&quot;token comment&quot;&gt;// Determine handler for the current request.  &lt;/span&gt;
          mappedHandler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mappedHandler &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             &lt;span class=&quot;token function&quot;&gt;noHandlerFound&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
             &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
  
          &lt;span class=&quot;token comment&quot;&gt;// Determine handler adapter for the current request.  &lt;/span&gt;
          &lt;span class=&quot;token class-name&quot;&gt;HandlerAdapter&lt;/span&gt; ha &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getHandlerAdapter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
          &lt;span class=&quot;token comment&quot;&gt;// Process last-modified header, if supported by the handler.  &lt;/span&gt;
          &lt;span class=&quot;token class-name&quot;&gt;String&lt;/span&gt; method &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;boolean&lt;/span&gt; isGet &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;method&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;isGet &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;HEAD&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;matches&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;method&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             &lt;span class=&quot;token keyword&quot;&gt;long&lt;/span&gt; lastModified &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ha&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getLastModified&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
             &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletWebRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;checkNotModified&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;lastModified&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; isGet&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
                &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
             &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
  
          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;applyPreHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
  
          &lt;span class=&quot;token comment&quot;&gt;// Actually invoke the handler.  &lt;/span&gt;
          mv &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ha&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
  
          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isConcurrentHandlingStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
  
          &lt;span class=&quot;token function&quot;&gt;applyDefaultViewName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mv&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;applyPostHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mv&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          dispatchException &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Throwable&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          &lt;span class=&quot;token comment&quot;&gt;// As of 4.3, we&apos;re processing Errors thrown from handler methods as well,  &lt;/span&gt;
          &lt;span class=&quot;token comment&quot;&gt;// making them available for @ExceptionHandler methods and other scenarios.          dispatchException = new ServletException(&quot;Handler dispatch failed: &quot; + err, err);  &lt;/span&gt;
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token function&quot;&gt;processDispatchResult&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mv&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; dispatchException&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token function&quot;&gt;triggerAfterCompletion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Throwable&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token function&quot;&gt;triggerAfterCompletion&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  
             &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Handler processing failed: &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; err&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isConcurrentHandlingStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          &lt;span class=&quot;token comment&quot;&gt;// Instead of postHandle and afterCompletion  &lt;/span&gt;
          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mappedHandler &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;applyAfterConcurrentHandlingStarted&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
          asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setMultipartRequestParsed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;multipartRequestParsed&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          &lt;span class=&quot;token comment&quot;&gt;// Clean up any resources used by a multipart request.  &lt;/span&gt;
          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;multipartRequestParsed &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; asyncManager&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isMultipartRequestParsed&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             &lt;span class=&quot;token function&quot;&gt;cleanupMultipart&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;doDispatch 메서드를 살펴보면 많은 것들을 해주고 있다.&lt;/p&gt;
&lt;p&gt;우선 HandlerMapping을 해주고, 이를 처리할 HandlerAdapter를 조회해주고 있다. 이후에 컨트롤러를 찾아 메서드들을 수행한다.&lt;/p&gt;
&lt;h3&gt;2. HandlerMapping을 통해 Request 정보에 대한 알맞은 Controller를 찾는다.&lt;/h3&gt;
&lt;p&gt;잠깐 되돌아보면, 지금까지 DispatcherServlet은 Request를 받아서 여러 메서드를 거쳐, doDispatch까지 왔다. 이제 DispatchServlet은 개발자가 만들어놓은 컨트롤러 중에서 요청을 처리할  수 컨트롤러를 찾고 해당 객체의 메서드를 호출해야하는데, 이때 컨트롤러를 찾아줄 수 있는 게 HandlerMapping이다.&lt;/p&gt;
&lt;p&gt;아래는 위 코드의 일부분을 그대로 가져왔다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doDispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	
	&lt;span class=&quot;token comment&quot;&gt;// Determine handler for the current request.  &lt;/span&gt;
	mappedHandler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mappedHandler &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
		 &lt;span class=&quot;token function&quot;&gt;noHandlerFound&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
		 &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; 

	&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt;  
&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerExecutionChain&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;handlerMappings &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HandlerMapping&lt;/span&gt; mapping &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;handlerMappings&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          &lt;span class=&quot;token class-name&quot;&gt;HandlerExecutionChain&lt;/span&gt; handler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; mapping&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;handler &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; handler&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이 코드에서는 요청에 맞는 HandlerExecutionChain(mappedHandler)을 찾아주고 있다.&lt;/p&gt;
&lt;p&gt;찾아주는 방법은 다음과 같다.&lt;/p&gt;
&lt;p&gt;RequestMappingHandlerMapping은 @Controller로 어노테이트된 모든 컨트롤러를 찾아서 필드로 관리를 해주고 있다. 이 클래스는 필드로 Map&amp;#x3C;String, Predicate&amp;#x3C;&gt;&gt; pathPrefixes를 갖고 있어서, key 값에는 요청 정보, value 값에는 처리할 대상을 관리하고 있다.&lt;/p&gt;
&lt;p&gt;처리할 대상은 컨트롤러와 메서드를 담고 있는 HandlerMethod 객체이며, 요청정보로 Map에서 값을 찾고 반환할 때 HandlerExecutionChain으로 감싸서 넘겨준다.&lt;/p&gt;
&lt;p&gt;HandlerExecutionChain은 실제 HTTP 요청을 처리하는 handler(컨트롤러 메서드)와 handler 전후에 인증, 로깅 등을 처리할 수 있는 인터셉터로 이루어진다.&lt;/p&gt;
&lt;h3&gt;3. Request를 Controller로 건내줄 수 있는 HandlerAdapter를 찾아서 건내준다.&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doDispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  

	&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	
	&lt;span class=&quot;token comment&quot;&gt;// Determine handler adapter for the current request.  &lt;/span&gt;
	&lt;span class=&quot;token class-name&quot;&gt;HandlerAdapter&lt;/span&gt; ha &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getHandlerAdapter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  

	&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerAdapter&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getHandlerAdapter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; handler&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;handlerAdapters &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HandlerAdapter&lt;/span&gt; adapter &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;handlerAdapters&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;adapter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;supports&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;handler&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
             &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; adapter&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
    &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;No adapter for handler [&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; handler &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt;  
          &lt;span class=&quot;token string&quot;&gt;&quot;]: The DispatcherServlet configuration needs to include a HandlerAdapter that supports this handler&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;HandlerExecutionChain에는 요청에 맞는 handler가 저장되어있고, 이를 통해 다음과 같이 HandlerAdapter를 조회하고 있다.&lt;/p&gt;
&lt;h3&gt;4. HandlerAdapter를 통해 Controller 메서드를 호출한다.&lt;/h3&gt;
&lt;p&gt;HandlerAdapter는 HandlerExecutionChain을 처리하는 과정에서, 내부적으로 인터셉터를 관리하여 공통적인 전/후 처리 작업을 수행한다. 예를 들어, 컨트롤러 메서드 호출 전에는 적합한 파라미터를 생성하여 전달하는 작업이 필요하고, 호출 후에는 메시지 컨버터를 사용하여 ResponseEntity의 본문을 찾아 JSON 직렬화와 같은 작업을 처리하는 과정이 필요하다.&lt;/p&gt;
&lt;p&gt;HandlerAdapter가 요청하는 코드를 살펴보자.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doDispatch&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  

	&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	
	&lt;span class=&quot;token comment&quot;&gt;// Actually invoke the handler.  &lt;/span&gt;
	mv &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ha&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;processedRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mappedHandler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; 

	&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이때 요청의 종류에 따라 HandlerAdapter의 종류가 달라지고, 예시로 @Controller로 어노테이트된 컨트롤러를 처리하는 RequestMappingHandlerAdapter의 코드는 다음과 같다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AbstractHandlerMethodAdapter&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WebContentGenerator&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerAdapter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Ordered&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;  
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt;  
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; handler&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleInternal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HandlerMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; handler&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RequestMappingHandlerAdapter&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AbstractHandlerMethodAdapter&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;  
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt;  
	&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleInternal&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  
	       &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerMethod&lt;/span&gt; handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	  
	    &lt;span class=&quot;token class-name&quot;&gt;ModelAndView&lt;/span&gt; mav&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token function&quot;&gt;checkRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	  
	    &lt;span class=&quot;token comment&quot;&gt;// Execute invokeHandlerMethod in synchronized block if required.  &lt;/span&gt;
	    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;synchronizeOnSession&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       &lt;span class=&quot;token class-name&quot;&gt;HttpSession&lt;/span&gt; session &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSession&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	          &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; mutex &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;WebUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSessionMutex&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;session&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	          &lt;span class=&quot;token keyword&quot;&gt;synchronized&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mutex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	             mav &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;invokeHandlerMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	          &lt;span class=&quot;token comment&quot;&gt;// No HttpSession available -&gt; no mutex necessary  &lt;/span&gt;
	          mav &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;invokeHandlerMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	    &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; mav&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;여기서도 중요한건 invokeHandlerMethod를 호출해주고 있다는 것인데, 이를 통해 컨트롤러로 요청을 위임하고있다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;RequestMappingHandlerAdapter&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AbstractHandlerMethodAdapter&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt;  
	&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndView&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;invokeHandlerMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpServletRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  
	       &lt;span class=&quot;token class-name&quot;&gt;HttpServletResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerMethod&lt;/span&gt; handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	  
	    &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	  
	    &lt;span class=&quot;token class-name&quot;&gt;ServletWebRequest&lt;/span&gt; webRequest &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;asyncWebRequest &lt;span class=&quot;token keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletWebRequest&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;  
	          &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ServletWebRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; asyncWebRequest &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletWebRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	  
	    &lt;span class=&quot;token class-name&quot;&gt;WebDataBinderFactory&lt;/span&gt; binderFactory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getDataBinderFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token class-name&quot;&gt;ModelFactory&lt;/span&gt; modelFactory &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getModelFactory&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; binderFactory&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	  
	    &lt;span class=&quot;token class-name&quot;&gt;ServletInvocableHandlerMethod&lt;/span&gt; invocableMethod &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createInvocableHandlerMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;handlerMethod&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;argumentResolvers &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       invocableMethod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setHandlerMethodArgumentResolvers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;argumentResolvers&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;returnValueHandlers &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       invocableMethod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setHandlerMethodReturnValueHandlers&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;returnValueHandlers&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	    
	    &lt;span class=&quot;token comment&quot;&gt;// ...	  &lt;/span&gt;
	    
	    invocableMethod&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;invokeAndHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;webRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  

		&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	  
	    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getModelAndView&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; modelFactory&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; webRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;HandlerExecutionChain에는 인터셉터를 통해 전후처리가 진행된다고 했었는데, 이 코드에서는 컨트롤러의 파라미터를 위해 ArgumentResolver가, 반환값 처리를 위해 ReturnValueHandler가 등장한다.&lt;/p&gt;
&lt;p&gt;다시 말하면 ArgumentResolver를 통해 컨트롤러의 메서드 인자값을 받고, ReturnValueHandler를 통해 컨트롤러 메서드의 반환값을 얻는 것이다.&lt;/p&gt;
&lt;p&gt;세팅이 끝나면 invokeAndHandle이 호출되고, 또 그 내부에서 invokeForRequest가 실행된다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletInvocableHandlerMethod&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;InvocableHandlerMethod&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;invokeAndHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ServletWebRequest&lt;/span&gt; webRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndViewContainer&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  
	       &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; providedArgs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	  
	    &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; returnValue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;invokeForRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;webRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; providedArgs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    
	    &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	    
	    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;returnValueHandlers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;handleReturnValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;  
	             returnValue&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getReturnValueType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;returnValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; webRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	       &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;InvocableHandlerMethod&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerMethod&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt;  
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;invokeForRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;NativeWebRequest&lt;/span&gt; request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndViewContainer&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; providedArgs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	    &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; args &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getMethodArgumentValues&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;request&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; providedArgs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
		&lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; returnValue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;doInvoke&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
	    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; returnValue&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;여기서는 인자로 받은 값을 받아오는게 중요하다. 우리가 사용하는 어노테이션들을 getMethodArgumentValues에서 처리가 되고 doInvoke에서 만들어진 값으로 컨트롤러의 메서드를 호출한다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;InvocableHandlerMethod&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerMethod&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt;  
	&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;doInvoke&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	    &lt;span class=&quot;token class-name&quot;&gt;Method&lt;/span&gt; method &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBridgedMethod&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	  
	    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;KotlinDetector&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isKotlinReflectPresent&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	            &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	  
	        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; method&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;invoke&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IllegalArgumentException&lt;/span&gt; var8&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; 
	    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; method&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;invoke&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBean&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; args&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;자바의 리플렉션으로 컨트롤러의 메소드 객체를 가져온다. 그리고 method.invoke(this.getBean(), args)로 실제 컨트롤러에게 위임을 해주고 있다.&lt;/p&gt;
&lt;h3&gt;5. 반환값(Response)을 HandlerAdapter에게 건내준다.&lt;/h3&gt;
&lt;p&gt;그리고 다시 ServletInvocableHandlerMethod의 invokeAndHandle 메서드로 다시 돌아온다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletInvocableHandlerMethod&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;InvocableHandlerMethod&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	
		&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;invokeAndHandle&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ServletWebRequest&lt;/span&gt; webRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndViewContainer&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  
	       &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt; providedArgs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	  
	    &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; returnValue &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;invokeForRequest&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;webRequest&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; providedArgs&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    
	    &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	    
	    &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;returnValueHandlers&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;handleReturnValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;  
	             returnValue&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getReturnValueType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;returnValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; webRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	       &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;컨트톨러의 로직이 끝나고 이때 반환값은 returnValue에 담긴다. 이후에는 ReturnValueHandler에서 후 처리를 거친다.&lt;/p&gt;
&lt;h3&gt;6. 반환값에 따라 ResponseEntity로 감싸는 경우가 있고, 이 형식에 따라 다른 Converter가 동작한다.&lt;/h3&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerMethodReturnValueHandlerComposite&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerMethodReturnValueHandler&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleReturnValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; returnValue&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MethodParameter&lt;/span&gt; returnType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ModelAndViewContainer&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NativeWebRequest&lt;/span&gt; webRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	    &lt;span class=&quot;token class-name&quot;&gt;HandlerMethodReturnValueHandler&lt;/span&gt; handler &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;selectHandler&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;returnValue&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; returnType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;handler &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IllegalArgumentException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Unknown return value type: &quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; returnType&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getParameterType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	        handler&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;handleReturnValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;returnValue&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; returnType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; webRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;어떤 값을 반환하느냐에 따라 HandlerMethodReturnValueHandler 구현체가 정해지고, 예를 들어 ResponseEntity 객체가 반환되는 경우 HttpEntityMethodProcessor가 사용된다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpEntityMethodProcessor&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AbstractMessageConverterMethodProcessor&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;token annotation punctuation&quot;&gt;@Override&lt;/span&gt;  
	&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;handleReturnValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; returnValue&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MethodParameter&lt;/span&gt; returnType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  
	       &lt;span class=&quot;token class-name&quot;&gt;ModelAndViewContainer&lt;/span&gt; mavContainer&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;NativeWebRequest&lt;/span&gt; webRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	  
	    mavContainer&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setRequestHandled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;returnValue &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	  
	    &lt;span class=&quot;token class-name&quot;&gt;ServletServerHttpRequest&lt;/span&gt; inputMessage &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createInputMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;webRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token class-name&quot;&gt;ServletServerHttpResponse&lt;/span&gt; outputMessage &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;createOutputMessage&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;webRequest&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	  
	    &lt;span class=&quot;token class-name&quot;&gt;HttpEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; httpEntity&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;returnValue &lt;span class=&quot;token keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ErrorResponse&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       httpEntity &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHeaders&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; response&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStatusCode&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;returnValue &lt;span class=&quot;token keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ProblemDetail&lt;/span&gt; detail&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       httpEntity &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;of&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;detail&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       &lt;span class=&quot;token class-name&quot;&gt;Assert&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isInstanceOf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpEntity&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; returnValue&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	       httpEntity &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpEntity&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; returnValue&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	  
	    &lt;span class=&quot;token comment&quot;&gt;// ... &lt;/span&gt;
	  
	    &lt;span class=&quot;token comment&quot;&gt;// Try even with null body. ResponseBodyAdvice could get involved.  &lt;/span&gt;
	    &lt;span class=&quot;token function&quot;&gt;writeWithMessageConverters&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;httpEntity&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getBody&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; returnType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputMessage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outputMessage&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	  
	    &lt;span class=&quot;token comment&quot;&gt;// Ensure headers are flushed even if no body was written.  &lt;/span&gt;
	    outputMessage&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;이 메서드는 응답가능한 타입인지 확인해주고 적절한 Converter와 응답을 처리할 수 있게 해준다.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;java&quot;&gt;&lt;pre class=&quot;language-java&quot;&gt;&lt;code class=&quot;language-java&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;abstract&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AbstractMessageConverterMethodProcessor&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;AbstractMessageConverterMethodArgumentResolver&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HandlerMethodReturnValueHandler&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;protected&lt;/span&gt; &lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;writeWithMessageConverters&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token annotation punctuation&quot;&gt;@Nullable&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;T&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;MethodParameter&lt;/span&gt; returnType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  
       &lt;span class=&quot;token class-name&quot;&gt;ServletServerHttpRequest&lt;/span&gt; inputMessage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ServletServerHttpResponse&lt;/span&gt; outputMessage&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;  
       &lt;span class=&quot;token keyword&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;IOException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpMediaTypeNotAcceptableException&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpMessageNotWritableException&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
  
	    &lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	  
	    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isResourceType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; returnType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       outputMessage&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHeaders&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpHeaders&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;ACCEPT_RANGES&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;bytes&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;value &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; inputMessage&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHeaders&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getFirst&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpHeaders&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;RANGE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;  
	             outputMessage&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getServletResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;200&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	          &lt;span class=&quot;token class-name&quot;&gt;Resource&lt;/span&gt; resource &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Resource&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; value&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	          &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	             &lt;span class=&quot;token class-name&quot;&gt;List&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpRange&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt; httpRanges &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; inputMessage&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHeaders&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getRange&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	             outputMessage&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getServletResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;PARTIAL_CONTENT&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	             body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpRange&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toResourceRegions&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;httpRanges&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; resource&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	             valueType &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; body&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	             targetType &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;RESOURCE_REGION_LIST_TYPE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	          &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;IllegalArgumentException&lt;/span&gt; ex&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	             outputMessage&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getHeaders&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpHeaders&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;CONTENT_RANGE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;bytes */&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; resource&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;contentLength&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	             outputMessage&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getServletResponse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;setStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;REQUESTED_RANGE_NOT_SATISFIABLE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;

	&lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;selectedMediaType &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
		selectedMediaType &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; selectedMediaType&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;removeQualityValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	  
	    &lt;span class=&quot;token class-name&quot;&gt;ResolvableType&lt;/span&gt; targetResolvableType &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;HttpMessageConverter&lt;/span&gt; converter &lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;messageConverters&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	       &lt;span class=&quot;token class-name&quot;&gt;ConverterType&lt;/span&gt; converterTypeToUse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;converter &lt;span class=&quot;token keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;GenericHttpMessageConverter&lt;/span&gt; genericConverter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;genericConverter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;canWrite&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;targetType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; valueType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; selectedMediaType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	             converterTypeToUse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ConverterType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;GENERIC&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;converter &lt;span class=&quot;token keyword&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;SmartHttpMessageConverter&lt;/span&gt; smartConverter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	          targetResolvableType &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getNestedTypeIfNeeded&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;ResolvableType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;forMethodParameter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;returnType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;smartConverter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;canWrite&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;targetResolvableType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; valueType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; selectedMediaType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	             converterTypeToUse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ConverterType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;SMART&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;converter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;canWrite&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;valueType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; selectedMediaType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	          converterTypeToUse &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;ConverterType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;BASE&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	       &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;converterTypeToUse &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	          body &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;getAdvice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;beforeBodyWrite&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; returnType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; selectedMediaType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;  
	                &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;Class&lt;/span&gt;&lt;span class=&quot;token generics&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;HttpMessageConverter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; converter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getClass&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; inputMessage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outputMessage&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;body &lt;span class=&quot;token operator&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	             &lt;span class=&quot;token class-name&quot;&gt;Object&lt;/span&gt; theBody &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; body&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	             &lt;span class=&quot;token class-name&quot;&gt;LogFormatUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;traceDebug&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logger&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; traceOn &lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt;  
	                   &lt;span class=&quot;token string&quot;&gt;&quot;Writing [&quot;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;LogFormatUtils&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;formatValue&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;theBody&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;traceOn&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;]&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	             &lt;span class=&quot;token function&quot;&gt;addContentDispositionHeader&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;inputMessage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outputMessage&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	             &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;converterTypeToUse&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	                &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;BASE&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt; converter&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; selectedMediaType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outputMessage&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	                &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;GENERIC&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;GenericHttpMessageConverter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; converter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; targetType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; selectedMediaType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outputMessage&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	                &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;SMART&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token class-name&quot;&gt;SmartHttpMessageConverter&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; converter&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;body&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; targetResolvableType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; selectedMediaType&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; outputMessage&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	             &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	          &lt;span class=&quot;token keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	             &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;isDebugEnabled&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;  
	                logger&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;debug&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;Nothing to write: null body&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	             &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	          &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;  
	       &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;  
	&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
	
	&lt;span class=&quot;token comment&quot;&gt;// ...&lt;/span&gt;
	
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Summary (by ChatGPT)&lt;/h2&gt;
&lt;p&gt;Spring MVC의 &lt;code class=&quot;language-text&quot;&gt;DispatcherServlet&lt;/code&gt; 처리 흐름을 목록으로 정리한 내용은 다음과 같다:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;DispatcherServlet&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;클라이언트 요청을 중앙에서 처리하는 역할&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;HandlerMapping&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;HandlerAdapter&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;ReturnValueHandler&lt;/code&gt; 등 delegate components를 사용하여 요청을 처리&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HandlerExecutionChain&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;실제 핸들러(컨트롤러 메서드)와 이를 전후로 처리할 인터셉터들을 관리&lt;/li&gt;
&lt;li&gt;요청에 맞는 핸들러와 인터셉터를 찾아 전후 처리 작업 수행&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HandlerMapping&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;요청에 맞는 컨트롤러를 찾아 반환&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;HandlerAdapter&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;컨트롤러 메서드를 호출하기 위한 어댑터 역할&lt;/li&gt;
&lt;li&gt;적합한 &lt;code class=&quot;language-text&quot;&gt;ArgumentResolver&lt;/code&gt;로 파라미터를 처리하고, &lt;code class=&quot;language-text&quot;&gt;ReturnValueHandler&lt;/code&gt;로 반환값을 처리&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ArgumentResolver&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;컨트롤러 메서드의 파라미터 값을 생성하여 전달&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ReturnValueHandler&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;컨트롤러 메서드의 반환값을 처리&lt;/li&gt;
&lt;li&gt;반환값에 따라 적합한 메시지 컨버터를 사용하여 직렬화 처리&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;MessageConverter&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;반환값을 직렬화하여 클라이언트에게 전달&lt;/li&gt;
&lt;li&gt;예: &lt;code class=&quot;language-text&quot;&gt;StringHttpMessageConverter&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;MappingJackson2HttpMessageConverter&lt;/code&gt; 등&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;최종 처리&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;반환값이 &lt;code class=&quot;language-text&quot;&gt;ResponseEntity&lt;/code&gt;라면, 적합한 &lt;code class=&quot;language-text&quot;&gt;HttpMessageConverter&lt;/code&gt;로 직렬화하여 응답 처리&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;</content:encoded></item><item><title><![CDATA[Respiratory Sound Database 유효성 분석]]></title><description><![CDATA[기존 HCSLAB 폐음 연구팀에서 사용하던 데이터의 질이 좋지 않아 다른 폐음 데이터셋을 찾던 와중 ICBHI Respiratory Sound Database (The Respiratory Sound database - ICBHI 201…]]></description><link>https://minjun.blog/Respiratory Sound Database 유효성 분석/</link><guid isPermaLink="false">https://minjun.blog/Respiratory Sound Database 유효성 분석/</guid><pubDate>Sun, 13 Oct 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;기존 &lt;a href=&quot;https://sites.google.com/view/hcslab-cau/home?authuser=0&quot;&gt;HCSLAB&lt;/a&gt; 폐음 연구팀에서 사용하던 데이터의 질이 좋지 않아 다른 폐음 데이터셋을 찾던 와중 &lt;a href=&quot;https://paperswithcode.com/dataset/icbhi-respiratory-sound-database&quot;&gt;ICBHI Respiratory Sound Database (The Respiratory Sound database - ICBHI 2017 Challenge)&lt;/a&gt;을 발견했다. 폐음 연구 분야에서는 유명한 데이터셋이고 &lt;a href=&quot;https://www.kaggle.com/datasets/swapnilpanda/respiratory-sound-location&quot;&gt;Kaggle&lt;/a&gt;에서도 여러 사람들이 활발히 분석을 해놓은 게 많아서 우리 연구에도 쓸 수 있을지 그 결과를 보고자 한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;알고자 하는 건 2개다.&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Dataset에서 wheeze와 crackle을 분류할 수 있는지&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;1번과의 연관성 유무에 상관없이, 질병과 폐음 사이에 연관성이 있는지&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Respiratory Sound Database&lt;/h2&gt;
&lt;p&gt;본 데이터는 원본 dataset 중 일부이다. 아쉽지만 기존 데이터 중 어떤 근거로 이 부분만 골라왔는지에 대한 설명이 없다.&lt;/p&gt;
&lt;h3&gt;요약&lt;/h3&gt;
&lt;h4&gt;Contents 개요&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;126명 대상 (어린이, 성인, 노인 등 전연령대)&lt;/li&gt;
&lt;li&gt;920개 .wav sound files&lt;/li&gt;
&lt;li&gt;920개 annotation .txt files&lt;/li&gt;
&lt;li&gt;각 환자별 질병 설명 .txt files&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;수집 기기&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;AKG C417L Microphone (AKGC417L)&lt;/li&gt;
&lt;li&gt;3M Littmann Classic II SE Stethoscope (LittC2SE)&lt;/li&gt;
&lt;li&gt;3M Litmmann 3200 Electronic Stethoscope (Litt3200)&lt;/li&gt;
&lt;li&gt;WelchAllyn Meditron Master Elite Electronic Stethoscope (Meditron)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;질병 종류 및 숫자&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;Disease&lt;/th&gt;
&lt;th align=&quot;right&quot;&gt;Num of People&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;COPD (만성폐쇄성폐질환)&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Healthy&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;26&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;URTI (상기도감염)&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Bronchiectasis (기관지 확장증)&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Bronchiolitis (모세기관지염)&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Pneumonia (폐렴)&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Asthma (천식)&lt;/td&gt;
&lt;td align=&quot;right&quot;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;Chest Location&lt;/h4&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/chest%20location.png&quot; alt=&quot;chest location.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a. Trachea (Tc)&lt;/li&gt;
&lt;li&gt;b. Anterior left (Al)&lt;/li&gt;
&lt;li&gt;c. Anterior right (Ar)&lt;/li&gt;
&lt;li&gt;d. Posterior left (Pl)&lt;/li&gt;
&lt;li&gt;e. Posterior right (Pr)&lt;/li&gt;
&lt;li&gt;f. Lateral left (Ll)&lt;/li&gt;
&lt;li&gt;g. Lateral right (Lr)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;&lt;a href=&quot;https://www.kaggle.com/code/eatmygoose/cnn-detection-of-wheezes-and-crackles&quot;&gt;CNN: Detection of wheezes and crackles&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;wheeze와 crackle을 식별하는 CNN 구현에 관한 코드. crackle 감지는 평이한데, wheeze와 wheeze &amp;#x26; crackle이 같이 있는 소리의 경우 분류의 정확도가 비교적 낮음. 전반적인 검증 정확도는 약 70%.
&lt;img src=&quot;/attachments/Accuracy%20and%20Loss%20about%20detection%20of%20wheezes%20and%20crackles.png&quot; alt=&quot;Accuracy and Loss about detection of wheezes and crackles.png&quot;&gt;
&lt;img src=&quot;/attachments/Result%20of%20detection%20of%20wheezes%20and%20crackles.png&quot; alt=&quot;Result of detection of wheezes and crackles.png&quot;&gt;
iteration을 돌려도 Loss가 불규칙하게 튀는 이유가 뭔지 모르겠다. 정확도도 그리 높은 편은 아니라서 추후 연구할 때 wheeze와 crackle을 학습하는 용도로는 부적하지 않을까 생각 중. 폐음이 측정 위치에 따라 소리의 질 차이가 큰데 본 코드에서는 위치에 상관없이 cnn 모델에 학습을 시켜서 이런 결과가 나오지 않았나 추측 중. d, e 구역에서 측정한 wav 파일이 뚜렷하게 잘 들리므로 이것들만 학습을 시켜서 다시 테스트 해볼 필요는 있어보임.&lt;/p&gt;
&lt;h2&gt;&lt;a href=&quot;https://www.kaggle.com/code/markdenton/cnn-disease-classification-linked-features-95/notebook&quot;&gt;CNN: Disease Classification, Linked Features (95%)&lt;/a&gt;&lt;/h2&gt;
&lt;h3&gt;Overview&lt;/h3&gt;
&lt;p&gt;음성 데이터를 기반으로 질병을 식별하는 CNN 구현에 관한 코드. 식별이 잘되는 편, 정확도는 95%, loss는 0.2.
&lt;img src=&quot;/attachments/Accuracy%20and%20Loss%20about%20disease%20claaification.png&quot; alt=&quot;Accuracy and Loss about disease claaification.png&quot;&gt;
&lt;img src=&quot;/attachments/Result%20of%20Disease%20classification.png&quot; alt=&quot;Result of Disease classification.png&quot;&gt;
질병 종류 중 가장 많이 있는 상위 6개의 class에 한해서 학습 및 테스트함. 오른쪽 자료를 보면, COPD를 제외한 다른 질병에 대한 학습 데이터 수가 너무나도 적어서 유의미한 데이터라고는 보기 힘들 것 같음.&lt;/p&gt;
&lt;h2&gt;생각해볼 것들&lt;/h2&gt;
&lt;p&gt;COPD를 제외한 다른 질병에 대한 음성 파일이 너무 적은 것 같다. 본 데이터만으로 CNN 모델을 학습시키기에는 부적절하다고 생각이 들고, 원본 데이터셋에 질병별로 음성 파일이 골고루 있는지 확인해볼 필요가 있어보인다. 또 원본 데이터셋에 대한 &lt;a href=&quot;https://paperswithcode.com/dataset/icbhi-respiratory-sound-database&quot;&gt;Benchmark&lt;/a&gt;가 있는데 이것들에 대해 알아보는 것도 좋을 것 같다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[mobile spirometry 관련 논문]]></title><description><![CDATA[관련 논문 목록 spirosmart 스마트기기 내장 마이크기반 폐질환 진단기기 개발 시중에서 파는 모델 목록 Spirobank Smart SP70BPasted image 20241121012439.png SP80BPasted image…]]></description><link>https://minjun.blog/mobile spirometry 관련 자료/</link><guid isPermaLink="false">https://minjun.blog/mobile spirometry 관련 자료/</guid><pubDate>Sun, 17 Nov 2024 12:35:24 GMT</pubDate><content:encoded>&lt;h3&gt;관련 논문 목록&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/spirosmart&quot; data-wiki-link=&quot;true&quot;&gt;spirosmart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/%EC%8A%A4%EB%A7%88%ED%8A%B8%EA%B8%B0%EA%B8%B0%20%EB%82%B4%EC%9E%A5%20%EB%A7%88%EC%9D%B4%ED%81%AC%EA%B8%B0%EB%B0%98%20%ED%8F%90%EC%A7%88%ED%99%98%20%EC%A7%84%EB%8B%A8%EA%B8%B0%EA%B8%B0%20%EA%B0%9C%EB%B0%9C&quot; data-wiki-link=&quot;true&quot;&gt;스마트기기 내장 마이크기반 폐질환 진단기기 개발&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;시중에서 파는 모델 목록&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://spirometry.com/en/products/spirobank-smart/&quot;&gt;Spirobank Smart&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;SP70B&lt;img src=&quot;/attachments/Pasted%20image%2020241121012439.png&quot; alt=&quot;Pasted image 20241121012439.png&quot;&gt;&lt;/li&gt;
&lt;li&gt;SP80B&lt;img src=&quot;/attachments/Pasted%20image%2020241121012724.png&quot; alt=&quot;Pasted image 20241121012724.png&quot;&gt;&lt;/li&gt;
&lt;li&gt;SPM-A &lt;img src=&quot;/attachments/Pasted%20image%2020241121013623.png&quot; alt=&quot;Pasted image 20241121013623.png&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;ETC&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.khan.co.kr/economy/economy-general/article/202004231115001&quot;&gt;삼성리서치 연구진 스마트폰 폐 기능 측정 기술로 국제학술대회 최우수상&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;관련 논문 찾는 중&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;자료 비교&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&quot;/spirosmart&quot; data-wiki-link=&quot;true&quot;&gt;spirosmart&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&quot;https://minjun.blog/%EC%8A%A4%EB%A7%88%ED%8A%B8%EA%B8%B0%EA%B8%B0%20%EB%82%B4%EC%9E%A5%20%EB%A7%88%EC%9D%B4%ED%81%AC%EA%B8%B0%EB%B0%98%20%ED%8F%90%EC%A7%88%ED%99%98%20%EC%A7%84%EB%8B%A8%EA%B8%B0%EA%B8%B0%20%EA%B0%9C%EB%B0%9C/&quot;&gt;원광대 연구&lt;/a&gt;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;임상기기 대비 오차율&lt;/td&gt;
&lt;td&gt;5.1%&lt;/td&gt;
&lt;td&gt;2~3%&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;측정 파라미터&lt;/td&gt;
&lt;td&gt;FVC&lt;br&gt;FEV1&lt;br&gt;FEV1 / FVC&lt;br&gt;PEF&lt;/td&gt;
&lt;td&gt;FVC&lt;br&gt;FEV1&lt;br&gt;FEV1 / FVC&lt;br&gt;PEF&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;a href=&quot;https://spirometry.com/en/products/spirobank-smart/&quot;&gt;Spirobank Smart&lt;/a&gt;&lt;/th&gt;
&lt;th&gt;SP70B&lt;/th&gt;
&lt;th&gt;SP80B&lt;/th&gt;
&lt;th&gt;SPM-A&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;임상기기 대비 오차율&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;td&gt;Unknown&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;측정 파라미터&lt;/td&gt;
&lt;td&gt;FVC&lt;br&gt;FEV1&lt;br&gt;FEV1 / FVC&lt;br&gt;PEF&lt;br&gt;FEV / FVC &lt;br&gt;FEV6&lt;br&gt;FEF2575&lt;br&gt;...&lt;/td&gt;
&lt;td&gt;FVC&lt;br&gt;FEV1&lt;br&gt;FEV1 / FVC&lt;br&gt;PEF&lt;br&gt;FEV / FVC &lt;br&gt;FEV6&lt;br&gt;FEF2575&lt;br&gt;...&lt;/td&gt;
&lt;td&gt;FVC&lt;br&gt;FEV1&lt;br&gt;FEV1 / FVC&lt;br&gt;PEF&lt;br&gt;FEV / FVC &lt;br&gt;FEV6&lt;br&gt;FEF2575&lt;br&gt;...&lt;/td&gt;
&lt;td&gt;FVC&lt;br&gt;VC&lt;br&gt;MVV&lt;br&gt;40 more...&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Flow range&lt;/td&gt;
&lt;td&gt;±16 L/s&lt;/td&gt;
&lt;td&gt;0 L/s ~ 16 L/s&lt;/td&gt;
&lt;td&gt;0 L/s ~ 16 L/s&lt;/td&gt;
&lt;td&gt;1 L/s ~ 16 L/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Volume accuracy&lt;/td&gt;
&lt;td&gt;±2.5% or 0.05 L&lt;/td&gt;
&lt;td&gt;±3% or 0.05 L&lt;/td&gt;
&lt;td&gt;±3% or 0.05 L&lt;/td&gt;
&lt;td&gt;±3% or 0.05 L&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Flow accuracy&lt;/td&gt;
&lt;td&gt;±5.0% or 0.20 L/s&lt;/td&gt;
&lt;td&gt;±5.0% or 0.2 L/s&lt;/td&gt;
&lt;td&gt;±5.0% or 0.2 L/s&lt;/td&gt;
&lt;td&gt;±10% or ±0.3 L/s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content:encoded></item><item><title><![CDATA[논문 요약 - SpiroSmart: Using a Microphone to MeasureLung Function on a Mobile Phone]]></title><description><![CDATA[mobile spirometry 관련 자료로 돌아가기 과제명 SpiroSmart: Using a Microphone to Measure Lung Function on a Mobile 발행년월 2012-09 링크 https://dl.acm.org/doi…]]></description><link>https://minjun.blog/spirosmart/</link><guid isPermaLink="false">https://minjun.blog/spirosmart/</guid><pubDate>Tue, 19 Nov 2024 17:35:24 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/mobile%20spirometry%20%EA%B4%80%EB%A0%A8%20%EC%9E%90%EB%A3%8C&quot; data-wiki-link=&quot;true&quot;&gt;mobile spirometry 관련 자료&lt;/a&gt;로 돌아가기&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;과제명&lt;/th&gt;
&lt;th&gt;SpiroSmart: Using a Microphone to Measure Lung Function on a Mobile&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;발행년월&lt;/td&gt;
&lt;td&gt;2012-09&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;링크&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://dl.acm.org/doi/10.1145/2370216.2370261&quot;&gt;https://dl.acm.org/doi/10.1145/2370216.2370261&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;요약&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SpiroSmart는 내장 마이크를 활용해 폐활량 측정을 수행하는 저가용 모바일 폰 애플리케이션&lt;/li&gt;
&lt;li&gt;데이터 변환 과정 아래 참고&lt;/li&gt;
&lt;li&gt;측정 파라미터
&lt;ul&gt;
&lt;li&gt;FVC&lt;/li&gt;
&lt;li&gt;FEV1&lt;/li&gt;
&lt;li&gt;FEV1 / FVC&lt;/li&gt;
&lt;li&gt;PEF&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;활용 디바이스: iPhone 4s&lt;/li&gt;
&lt;li&gt;52명의 피실험자 대상으로 임상에서 사용하는 기기와 5.1% 오차 존재 (2012년 기준).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;연구의 주된 알고리즘&lt;/h2&gt;
&lt;p&gt;마이크를 통해 녹음된 음성 데이터를 폐기능 평가에 필요한 데이터로 변환하는 게 목표.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;1. 입력 데이터: 압력 신호 p(t)&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;마이크로폰은 입에서 나오는 압력 신호를 수집&lt;/li&gt;
&lt;li&gt;이 신호는 &lt;strong&gt;교류 결합(AC-coupled)&lt;/strong&gt; 특성을 가지며, 실제 압력의 비례적인 측정값으로 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;2. 압력 손실 보정&lt;/strong&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;strong&gt;(1) 거리 및 소리 반사 보정&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;입에서 스마트폰 마이크까지의 거리에서 발생하는 압력 손실을 보정&lt;/li&gt;
&lt;li&gt;사용자의 머리 주변에서 발생하는 소리 반사와 회절 효과도 모델링.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;strong&gt;(2) Inverse Radiation Modeling&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;소리의 전파를 구체적으로 모델링하기 위해 구형 장애물(spherical baffle)의 음향 전달 함수를 사용 (함수 내용은 논문 참고)&lt;/li&gt;
&lt;li&gt;이 모델은 시간 도메인에서 역변환하여 FIR 필터링을 통해 신호에 적용&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;3. 흐름 속도 변환&lt;/strong&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;strong&gt;(1) 압력을 흐름 속도로 변환&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;입술에서의 난류 흐름을 모델링하여 압력(&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mtext&gt;​&lt;/mtext&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;plips​(t)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;pl&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)을 공기 흐름 속도(&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;ulips(t)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)로 변환&lt;/li&gt;
&lt;li&gt;관련 계산식도 논문 참고&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;4. 특징 추출&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;SpiroSmart는 신호로부터 의미 있는 특징을 추출하기 위해 세 가지 주요 방법을 사용&lt;/p&gt;
&lt;h4&gt;&lt;strong&gt;(1) 시간 도메인: 신호 Envelope 계산&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;신호의 Hilbert 변환을 사용해 Envelope 계산&lt;/li&gt;
&lt;li&gt;Envelope는 신호의 저주파 에너지를 나타내며, 공기 흐름 속도의 근사값으로 간주될 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;strong&gt;(2) 주파수 도메인: Spectogram Processing&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;신호를 짧은 시간 프레임(30ms)으로 나누어 각 프레임의 FFT 계산&lt;/li&gt;
&lt;li&gt;local resonance을 추출해 공기 흐름 속도와의 비례 관계를 파악&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;strong&gt;(3) 선형 예측 코딩(LPC)&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;LPC를 사용하여 신호의 원천 파워와 음성 통로 필터(vocal tract filter)를 분리&lt;/li&gt;
&lt;li&gt;음성 통로 필터의 &quot;소스 파워&quot;는 폐에서 발생하는 흐름 속도의 근사값을 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;5. 머신 러닝 모델&lt;/strong&gt;&lt;/h3&gt;
&lt;h4&gt;&lt;strong&gt;(1) 폐 기능 지표 회귀&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;추출된 특징(예: 신호 Envelope, 공명, LPC)을 사용하여 강제 폐활량(FVC), 1초 강제 호기량(FEV1), 최대 호기 속도(PEF)를 예측&lt;/li&gt;
&lt;li&gt;특징 값은 모델(bagged decision tree)을 통해 지표로 변환&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;&lt;strong&gt;(2) 곡선 모양 회귀&lt;/strong&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;폐 기능 곡선의 모양(예: Flow-Volume 곡선)을 예측하기 위해 CRF(Conditional Random Field를 사용&lt;/li&gt;
&lt;li&gt;곡선의 형상을 정규화한 후, 예측된 지표 값을 사용해 곡선을 스케일링&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;&lt;strong&gt;6. 결과 후처리&lt;/strong&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;예측된 값은 Savitzky-Golay 필터(3차 다항식)를 사용해 잡음을 제거하고 부드럽게 만둚&lt;/li&gt;
&lt;li&gt;물리적으로 불가능한 곡선(예: 부피가 단조 증가하지 않는 곡선)은 제거&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[우아한테크코스 레벨1 고민거리와 자료들]]></title><description><![CDATA[TODO 검색 없이 git, github를 할 수 있을 정도로 공부하기 고민거리와 자료들 해결 전 getter 없이 extracting…]]></description><link>https://minjun.blog/우아한테크코스 레벨1 고민거리와 자료들/</link><guid isPermaLink="false">https://minjun.blog/우아한테크코스 레벨1 고민거리와 자료들/</guid><pubDate>Fri, 14 Feb 2025 09:44:21 GMT</pubDate><content:encoded>&lt;h2&gt;TODO&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;검색 없이 git, github를 할 수 있을 정도로 공부하기&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;고민거리와 자료들&lt;/h2&gt;
&lt;h3&gt;해결 전&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.baeldung.com/java-extract-values-assertj&quot;&gt;getter 없이 extracting으로 필드 검사&lt;/a&gt;가 안좋을 수도 있나?&lt;/li&gt;
&lt;li&gt;질문 잘하는 법이란?&lt;/li&gt;
&lt;li&gt;런타임 컴파일타임 의존성이란?&lt;/li&gt;
&lt;li&gt;제네릭 공변, 블공변이란?&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;해결 중&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;해결 완료&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://tecoble.techcourse.co.kr/post/2020-04-28-ask-instead-of-getter/&quot;&gt;getter 대신 객체에게 메시지를 보내자&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;toList() vs collect(Collectors.toList())
&lt;ul&gt;
&lt;li&gt;toList() : UnModifiableList 또는 UnmodifiableRandomAccessList 반환&lt;/li&gt;
&lt;li&gt;collect(Collectors.toList()) : ArrayList 반환&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;순서에 맞게 정렬해서 출력을 해야하면, &quot;정렬&quot;은 view에서 하는 게 맞는가? 아니면 미리 해서 view에게 넘겨줘야하는가?
&lt;ul&gt;
&lt;li&gt;설계에 따라 다르다&lt;/li&gt;
&lt;li&gt;요구사항에 따라 다르지만 우선 view 역할이라고 생각함&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;모든 원시값을 포장한다&lt;/code&gt;를 어느 수준까지 지켜야할까?
&lt;ul&gt;
&lt;li&gt;저 말의 의미는, 역할이 있는 원시값이면 포장해야한다라고 생각함. 역할이 없고, 이 인스턴스 변수를 갖는 클래스의 하나의 역할로써 존재한다면 굳이 포장할 필요는 없다고 생각함.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TDD는 바텀업?
&lt;ul&gt;
&lt;li&gt;바텀업으로 구현을 하되, 뭐부터 해야할지 막히는 시점에서는 탑다운을 해도 좋다!&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;미리 작성한 메소드들 어떻게 다 기억하나?
&lt;ul&gt;
&lt;li&gt;며칠 전에 만들어둔 메소드가 있는데, 난 다른 이름의 동일 기능을 하고 있는 메소드를 짜고 있음&lt;/li&gt;
&lt;li&gt;코드 베이스를 그때그때 확인해라..&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;mvc패턴에서 validation의 책임은 누구에게? &lt;a href=&quot;https://velog.io/@pengoose_dev/MVC-Pattern%EC%97%90%EC%84%9C-%EC%9C%A0%ED%9A%A8%EC%84%B1-%EA%B2%80%EC%82%AC%EB%8A%94-%EB%88%84%EA%B5%AC%EC%9D%98-%EC%B1%85%EC%9E%84%EC%9D%B8%EA%B0%80#230724---%EC%B2%AB-%EA%B2%B0%EB%A1%A0%EC%9D%80-controller&quot;&gt;참고 자료&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;우선, model에서는 model에 관련된 validation만!
&lt;ul&gt;
&lt;li&gt;ex) Lotto에서는 로또번호의 개수 및 중복체크만, LottoNumber는 범위체크&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;나머지 validation, 예를 들어 문자열, 정수와 같은 형식이나 null 및 공백과 같은 체크는 Controller!&lt;/li&gt;
&lt;li&gt;서비스의 흐름을 제어하는 주체는 Controller라고 생각함.&lt;/li&gt;
&lt;li&gt;대신 Controller의 로직이 너무 복잡해지고 길어지면 View에 validation 책임을 넘겨줘도 된다고 생각함&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;테스트코드 커버리지를 100%을 달성하면서 도메인을 다 구현했는데 컨트롤러를 구현하면서 더 필요한 메소드들이 생기고, 결국 커버리지가 다시 낮아짐.
&lt;ul&gt;
&lt;li&gt;모든 메소드들을 고려면서 tdd를 하는 건 불가능. 커버리지가 낮아지는 게 맞다고 생각함.&lt;/li&gt;
&lt;li&gt;이후에 다시 커버리지를 올리는 것을 목표로&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;필요할 것 같아서 만들어둔 메소드들이 컨트롤러에서 기능들을 합치면서 안필요해짐. 그럼 테스트 코드를 위한 코드가 되는게 아닌가?
&lt;ul&gt;
&lt;li&gt;사용안되는 코드가 되어버리면 삭제해야함.&lt;/li&gt;
&lt;li&gt;프로덕션 코드에 테스트만을 위한 코드가 있으면 안된다고 생각함.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&quot;객체지향의 사실과 오해&quot; 읽기
&lt;ul&gt;
&lt;li&gt;책임이 자율적일수록 적절하게 &apos;추상화&apos;되며, &apos;응집도&apos;가 높아지고, &apos;결합도&apos;가 낮아지며, &apos;캡슐화&apos;가 증진되고, &apos;인터페이스와 구현이 명확히 분리&apos;되며, 설계의 &apos;유연성&apos;과 &apos;재사용성&apos;이 향상된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[우아한테크코스 7기 BE 레벨1 회고]]></title><description><![CDATA[레벨 1이 끝났다.…]]></description><link>https://minjun.blog/우아한테크코스_7기_BE_레벨1_회고/</link><guid isPermaLink="false">https://minjun.blog/우아한테크코스_7기_BE_레벨1_회고/</guid><pubDate>Sun, 13 Apr 2025 09:44:21 GMT</pubDate><content:encoded>&lt;p&gt;레벨 1이 끝났다. 8주라는 시간이 눈 깜짝할 사이에 사라졌다. 너무도 짧게 느껴졌지만, 돌아보면 정말 많은 것을 배우고 느낀 기간이었고, 기억이 희미해지기 전에 회고하고자 한다.&lt;/p&gt;
&lt;h2&gt;열정적인 사람들&lt;/h2&gt;
&lt;p&gt;언제나 열정적인 사람들과 함께하는 건 재미있다.&lt;/p&gt;
&lt;p&gt;내가 꽤나 사람을 좋아하는 사람이구나...를 느낄 수 있었다. 무엇을 하느냐도 중요하지만 누구랑 함께 하느냐가 더 중요하다는 걸 다시 한 번 체감하고 있다.&lt;/p&gt;
&lt;p&gt;레벨1 데일리 조원으로  &lt;a href=&quot;https://github.com/m-a-king&quot;&gt;강산&lt;/a&gt;, &lt;a href=&quot;https://github.com/jye326&quot;&gt;띠용&lt;/a&gt;, &lt;a href=&quot;https://github.com/sonjh919&quot;&gt;링크&lt;/a&gt;, &lt;a href=&quot;https://github.com/Byesol&quot;&gt;벡터&lt;/a&gt;, &lt;a href=&quot;https://github.com/jinu0328&quot;&gt;에드&lt;/a&gt;, &lt;a href=&quot;https://github.com/yeezy-com&quot;&gt;율무&lt;/a&gt;, &lt;a href=&quot;https://github.com/horizonpioneer&quot;&gt;제프&lt;/a&gt;, &lt;a href=&quot;https://github.com/2Jin1031&quot;&gt;칼리&lt;/a&gt;, &lt;a href=&quot;https://github.com/yeong0jae&quot;&gt;폰트&lt;/a&gt;를, 코치로는 &lt;a href=&quot;https://github.com/liquidjoo&quot;&gt;저스틴&lt;/a&gt;을 만났다. 각자 색깔은 달라도 항상 다른 사람의 크고 작은 고민들에 대해 같이 고민해주고 의문을 품어줄 수 있는 사람들이어서 그만큼 편하게 질문하고, 같이 떠들고, 그 과정에서 많은 걸 배울 수 있었다.&lt;/p&gt;
&lt;p&gt;그 중에서도 하나를 꼽자면, &quot;이야기하기 위한 사고력&quot;을 기를 수 있었던 것 같다. 저렇게 표현하는 게 맞나 싶기도 하지만, 그동안은 개발관련, 혹은 지식 공유를 위한 이야기를 하면서 내 생각조차 정립되지 않는 경우가 많았었다. 그러다보니 내 의견이 아닌 어디선가 들은 이야기, 책이 말하고 있는 이야기를 그대로 듣고 그대로 말하는 경우가 많았던 것 같은데, 이 사람들이 지속적으로 내 생각을 톡톡 건드려준 덕에 내가 사고한 것들, 내가 정의하는 내 의견을 찾아갈 수 있었던 것 같다.&lt;/p&gt;
&lt;p&gt;그리고 다시 한 번, 지식의 습득은 책이나 문서가 아니라 누군가에게 물어봤을 때 가장 빠르게 일어난다는 것을 느꼈다. 이 때문에 내가 사람들이랑 떠드는 걸 좋아한다. 열심히 듣다가 궁금한 게 생겨서 물어보면 누구나 친절하게 그것도 아주 자세히 설명을 해준다. 이럴 때마다 나도 누군가에게 지식을 전파할 수 있는 사람이 되어야겠다고, 이런 선순환을 만들 수 있는 사람이 되어야겠다고 다시금 다짐한다.&lt;/p&gt;
&lt;h2&gt;라떼는 말야...&lt;/h2&gt;
&lt;p&gt;우테코는 모든 게 피드백이다. 코딩을 하든, 인터뷰를 하든, 뭐만 하면 피드백이다. 지금까지 지나온 환경에서 이렇게까지 피드백이 많았던 환경이 없어서 그런지 처음에는 나에게 쏟아지는 피드백에 왠지 모를 거부감이 들었다. 피드백은 피드백으로써 남겨야하는데 더나아가서 나에 대한 공격으로 받아드려서 더욱 방어적 태도를 취했던 것 같다. 또 고집스러운 내 성격도 한 몫하지 않았나 싶다 ㅎㅎ.&lt;/p&gt;
&lt;p&gt;하지만 어느 시점에서 &apos;변화하고자, 배우고자 이 곳에 왔는데 여전히 같은 모습이다&apos; 라는 생각이 문득 들었다.
다른 사람의 이야기에 무조건 흔들리지 않는 것도 중요하지만, 동시에 그들의 피드백에서 받아들일 건 받아들이는 태도 역시 필요하다는 걸 깨달았다.&lt;/p&gt;
&lt;p&gt;지금은 어느 정도 중간 지점을 찾은 것 같다. 적어도 처음보다는 내 모습을 더 잘 이해하고, 스스로를 돌아보는 힘도 생겼다.&lt;/p&gt;
&lt;h2&gt;소프트스킬&lt;/h2&gt;
&lt;p&gt;레벨1에서 가장 기억에 남는 부분이다. 페어 프로그래밍을 하면서 더더욱 소프트 스킬의 중요성을 깨달았다. 어느 분야든, 나와 다른 사람과 같이 살아가려면 꼭 필요한 능력 중 하나, 길러야될 덕목이라고 생각한다.&lt;/p&gt;
&lt;p&gt;분명 레벨1을 마무리할 때는 꽤나 만족스럽게 나를 되돌아보고 보완했다고 생각했는데, 지금 회고를 하며 다시 생각해보니 레벨1 초반과 그렇게 크게 바뀐 것 같지 않다는 생각도 스쳐가고 있다. 레벨2에는 지금보다 소프트스킬 향상에 더 많은 시간을 투자하고, 좀 더 나를 객관적인 시선에서 바라볼 수 있으면 좋겠다.&lt;/p&gt;
&lt;h2&gt;앞으로는?&lt;/h2&gt;
&lt;p&gt;아직 레벨1만 끝났고 8개월이 더 남았다. 우테코라는 교육과정이 정말 재미있고, 좋은 개발자로 성장하는 데 많은 도움을 주는 것 같긴 하지만 조금 더 욕심을 내보고 싶다.&lt;/p&gt;
&lt;p&gt;레벨1을 하면서 이 과정에 몰입했다고 생각하고, 개발 지식 내외적으로 많은 것들을 배운 것 같지만 좀 더 넓은 시각으로 봐야겠다는 생각이 들었다. 레벨1 과정에서도 아무리 다 다른 생각을 갖고 설계를 해내가지만, 오답을 피하다보면 어느 순간 다 비슷한 코드를 짜고 있는 것 같았다. 이런 모습이 나쁘다고는 말할 수 없다. 누구나 이해할 수 있는 설계와 코드를 작성하는 건 나 역시 중요하다고 생각한다. 하지만 이런 공장에서 찍어낸듯한 생산품같이, 다같은 개발자가 되는 건 질색이다. 좀 더 나 다운, 좀 더 재미있는 생각과 설계를 할 수 있는 사람이 되고 싶었다.&lt;/p&gt;
&lt;p&gt;그럼 어떻게 해야할까?&lt;/p&gt;
&lt;p&gt;아직 열심히 고민 중이다. 어려운 것 같다. 이에 대한 해답을 레벨2에서 찾고 싶다. 레벨2에서도 지금처럼 많이 고민하고, 시도해보고, 실패하고 깨달았으면 좋겠다. 아자아자화이팅.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[우아한테크코스 7기 BE 프리코스 1주차 회고]]></title><description><![CDATA[과제 요약 Pasted image 20241020194900.png…]]></description><link>https://minjun.blog/우아한테크코스_7기_BE_프리코스_1주차_회고/</link><guid isPermaLink="false">https://minjun.blog/우아한테크코스_7기_BE_프리코스_1주차_회고/</guid><pubDate>Sun, 20 Oct 2024 12:35:24 GMT</pubDate><content:encoded>&lt;h2&gt;과제 요약&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/Pasted%20image%2020241020194900.png&quot; alt=&quot;Pasted image 20241020194900.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;과제 진행 소감&lt;/h2&gt;
&lt;p&gt;구현 요구사항에 대한 난이도 자체는 너무 평이했다. 아무리 프리코스더라도 이래도 되나? 싶을정도로 쉬워서 지난 기수도 찾아보니까 확실히 작년에 비해 난이도가 쉬웠던 것 같다. 그 이유가 뭔지 생각해보니, 과제에서 제한을 둔 사항이 이번에 훨씬 적었다.&lt;/p&gt;
&lt;p&gt;대신 그만큼 예외 상황이 많이 생긴 것 같다. 입력 요구사항이 명확하지 않은 만큼 쉬웠지만 반대로 생각하면 예외가 많이 생겨서 하면 할 수록 예외처리를 많이 했던 것 같다.&lt;/p&gt;
&lt;p&gt;지금 생각하면 현실에서 일어날 법한 상황과 더 유사하지 않나 생각이 들고, 그만큼 진짜로 운영하고자 하는 시스템 속에서는 다양한 예외에 대한 처리가 필요하지 않나 생각이 든다.&lt;/p&gt;
&lt;h3&gt;MVC 패턴&lt;/h3&gt;
&lt;p&gt;이론으로만 알고 있던 MVC 패턴을 처음으로 적용해보려고 시도해봤다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Model은 Controller와 View에 의존하지 않아야 한다.&lt;/li&gt;
&lt;li&gt;View는 Model에만 의존해야 하고, Controller에는 의존하면 안된다.&lt;/li&gt;
&lt;li&gt;View가 Model로부터 데이터를 받을 때는 사용자마다 다르게 보여주어야하는 데이터에 대해서만 받아야한다.&lt;/li&gt;
&lt;li&gt;Controller는 Model과 View에 의존해도 된다.&lt;/li&gt;
&lt;li&gt;View가 모델로부터 데이터를 받을 때, 반드시 Controller에서 받아야한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;위 다섯 가지 규칙에 따라 구현을 했는데, 다른 사람들의 리뷰를 얼른 받아보고 싶다. 본 과제를 하는데 이 패턴이 과연 필요할까 생각도 들고 그럼 어떤 패턴으로 구현하는게 좋을까 이야기 해보고 싶다.&lt;/p&gt;
&lt;h3&gt;예외처리&lt;/h3&gt;
&lt;p&gt;아마 가장 많은 시간을 투자한 부분이지 않을까 생각이 든다. 처음에 기능 구현은 금방 끝났는데 여러 테스트 케이스를 작성할 때마다 새로운 예외를 발견해버렸다.&lt;/p&gt;
&lt;p&gt;사용자의 입장에서 오류가 왜 났는지 피드백을 주고자 오류의 종류마다 새로운 IllegalArgumentException을 던져줬는데 과연 이게 좋은 방향일지 의문이 든다.&lt;/p&gt;
&lt;p&gt;적은 메소드로 여러 예외를 처리하는 게 좋을지, 나눌 수 있는 만큼 케이스마다 새롭게 예외처리를 해주는 게 좋을지 다른 사람의 의견도 궁금하다. 실제 서비스는 어떻게 운영이 될까, 개발자들은 어떤 방향성을 가지고 예외처리를 하는게 좋을까, 단순화가 좋은지 구체화가 좋은지 가장 고민을 많이 했던 부분인데 이번 과제는 앞서 말한 것처럼 사용자가 잘못 입력을 했을 때 그에 맞는 피드백을 주고 싶어서 구체화를 목표로 진행했다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[우아한테크코스 7기 BE 프리코스 2주차 회고]]></title><description><![CDATA[과제 요약 apply.techcourse.co.kr_assignment_14_mission_46.png 과제 진행 소감 지원서에 작성한 목표를 얼마나 달성하고 있다고 생각하나요? 그 이유는 무엇인가요? 지원서에 작성한 목표는 크게…]]></description><link>https://minjun.blog/우아한테크코스_7기_BE_프리코스_2주차_회고/</link><guid isPermaLink="false">https://minjun.blog/우아한테크코스_7기_BE_프리코스_2주차_회고/</guid><pubDate>Mon, 28 Oct 2024 11:35:24 GMT</pubDate><content:encoded>&lt;h2&gt;과제 요약&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/apply.techcourse.co.kr_assignment_14_mission_46.png&quot; alt=&quot;apply.techcourse.co.kr_assignment_14_mission_46.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;과제 진행 소감&lt;/h2&gt;
&lt;h3&gt;지원서에 작성한 목표를 얼마나 달성하고 있다고 생각하나요? 그 이유는 무엇인가요?&lt;/h3&gt;
&lt;p&gt;지원서에 작성한 목표는 크게 4개입니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;코드에 의미 부여 및 구현 능력 향상&lt;/li&gt;
&lt;li&gt;자바에 대한 이해 심화&lt;/li&gt;
&lt;li&gt;다른 사람의 코드 리뷰&lt;/li&gt;
&lt;li&gt;블로그 기록 및 정리&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이 중에서 절반 정도 달성하고 있다고 생각합니다.&lt;/p&gt;
&lt;p&gt;이번 프리코스를 진행하면서 그 어느때보다 &apos;확장가능한 코드&apos;를 작성하려고 노력하고 있습니다. 지금까지 해온 코딩은 대부분 1회성 코드였기 때문에 원하는 결과물을 잘 도출해내는지에 대해서만 집중했다면, 이번 기간동안에는 추후에 다른 사람이 개발을 이어가더라도 문제 없이 진행할 수 있게 각 클래스, 매서드가 자기 일을 하게 만들고 가독성 있게 코드를 작성하려고 신경 쓴 것 같습니다. 그 과정에서 자바의 Stream API도 학습하면서 전보다 더 효율적인 코딩을 할 수 있게 되었습니다.&lt;/p&gt;
&lt;p&gt;코드리뷰는 처음이었습니다. 생각보다 다른 사람이 쓴 코드의 구조와 기능을 이해하는데 오래 걸린 적도 있고, 무엇보다 코드를 작성하는 데 있어서 정답은 없지만 오답은 있다고 생각하여 조심스럽게 리뷰를 한 적도 있었습니다. 리뷰를 잘 해보고 싶다는 생각도 들었는데, 그만큼 자바라는 언어와 객체지향이라는 개념에 대해 잘 알아야한다고 느꼈고, 2주차부터는 좀 더 개선된 리뷰를 해주고 싶다는 생각도 들었습니다. 리뷰를 하고 받는 과정에서 다른 사람의 풀이법도 배우고 제가 쓴 코드의 문제점과 개선점을 파악할 수 있었습니다. 이를 반영하여 2주차 과제를 했는데, 아직까지도 개선점이 많다고 느끼고 있습니다.&lt;/p&gt;
&lt;p&gt;계획했던 것만큼 기록에 많은 시간을 투자하지 못하고 있는 것 같습니다. 원래는 매일 기록을 하려고 계획했었는데, 아직까지는 코드를 작성하고 수정하는 과정에 많은 시간이 필요한 것 같습니다. 그렇게 시간을 소비하는 만큼 코드가 개선되는 게 보여서 손을 떼지 못하고 있는 것 같고, 목표를 수정할 필요성을 느끼고 있습니다.&lt;/p&gt;
&lt;h3&gt;지원서에 작성한 목표를 변경해야 한다고 생각하시나요? 그렇다면 그 이유와 어떤 목표로 변경하고 싶으신가요?&lt;/h3&gt;
&lt;p&gt;지금까지는 기록이라는 과정에 꽤 많은 힘을 주고 있느라 쉽게쉽게 블로그에 포스팅을 하지 못했던 것 같습니다. 이 점 때문에 위에서 말했듯 매일 기록을 하려고 했던 계획을 못 지키고 있는데 단위를 과제 기간에 맞게, 과제 제출 후 다른 사람의 코드 리뷰를 하면서 제 코드의 개선점을 파악하며 기록을 해보려고 합니다.&lt;/p&gt;
&lt;p&gt;코드를 작성하는 중간에는 제가 뭘 잘 못하고 있는지 파악이 안되기 때문에 리뷰를 하고 받은 후에 다음 주차 과제를 시작하기 전, 회고를 작성하면 좋을 것 같습니다.&lt;/p&gt;
&lt;h3&gt;프리코스를 진행하면서 눈에 띄는 변화나 깨달은 점이 있나요?&lt;/h3&gt;
&lt;p&gt;어느 순간 과연 &apos;내가 프로그래밍을 재밌어할까?&apos;라는 막연한 의문이 들었던 것 같습니다. 초등학생때부터 찾아서 할 정도로 좋아했었는데 시간이 지나면서 어느정도 의무감에 공부를 해왔던 것 같습니다.&lt;/p&gt;
&lt;p&gt;하지만 이번 프리코스를 진행하면서 노트북 앞에 앉아있지 않더라도 계속해서 제가 쓴 코드에 대해 고심하고, 테스트 코드는 어떻게 작성해야하는지 고민하면서 이 과정에 깊게 몰입할 수 있었습니다. 코드리뷰를 하면서도 저와는 다르게 풀이하는 과정도 배울 수 있었고,  아직도 제가 배워야할 게 많다는 점이 또 다른 학습 동기로 다가온 것 같습니다. 이 일련의 과정이 저에겐 재미있었고, &apos;이래서 내가 프로그래밍을 좋아했구나&apos; 다시금 알 수 있게된 시간이었습니다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[우아한테크코스 7기 BE 프리코스 4주차 회고]]></title><description><![CDATA[과제 요약 apply.techcourse.co.kr_assignment_14_mission_52.png…]]></description><link>https://minjun.blog/우아한테크코스_7기_BE_프리코스_4주차_회고/</link><guid isPermaLink="false">https://minjun.blog/우아한테크코스_7기_BE_프리코스_4주차_회고/</guid><pubDate>Sun, 10 Nov 2024 12:35:24 GMT</pubDate><content:encoded>&lt;h2&gt;과제 요약&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/apply.techcourse.co.kr_assignment_14_mission_52.png&quot; alt=&quot;apply.techcourse.co.kr_assignment_14_mission_52.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;과제 진행 소감&lt;/h2&gt;
&lt;h3&gt;문제 요구 사항 파악&lt;/h3&gt;
&lt;p&gt;앞서 진행했던 것보다 요구하는 게 많았던 이번 주 과제였던 것 같습니다. 처음 과제를 받았을 때는 구현해야할 사항들이 많아서 쫓기는 마음으로 시작을 했었는데, 이 때문에 후반가서 잘못 이해하고 있던 게 있었습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/Pasted%20image%2020241111004043.png&quot; alt=&quot;Pasted image 20241111004043.png&quot;&gt;
이 부분을 보고 사용자가 특정 아이템을 구매하면, 그만큼을 메모리에서 구현된 재고에서 차감하고, 이를 다시 products.md에도 반영을 해야하는 줄 알았습니다. 모든 기능을 구현하고, 기본으로 제공해주는 테스트를 통과한 뒤에, 온라인에 제출을 했는데 케이스 1개를 통과하지 못한 상황이 발생했습니다. 여러 방면으로 삽질을 하다가 다행히 잘 못 이해한 부분을 찾았는데, 이런 사소한 부분에 대한 체크가 중요하다는 걸 다시 한 번 느꼈던 것 같습니다.&lt;/p&gt;
&lt;h3&gt;지원서나 중간 회고에서 현실적인 목표를 설정하고 이를 달성했다고 생각하나요? 그 이유는 무엇인가요?&lt;/h3&gt;
&lt;p&gt;지원서에서 이번 프리코스 기간 동안 테스트 코드를 작성하는 데에 익숙해지는 것을 목표로 잡았습니다. 앞서 진했던 1,2,3주의 과제와 달리 이번 주차 과제에서는 테스트 코드로 단위 테스트를 하기 어려웠던 것 같습니다.&lt;/p&gt;
&lt;p&gt;지난 과제에서는 어떤 형식으로 특정 값을 반환하는 메소드를 만들어야겠다는 확실한 판단을 갖고 메소드를 만들어서 이를 테스트를 하는 의의가 있었습니다. 하지만 이번 과제에서는, 특히 프로모션에 대한 기능을 구현하면서 어떠한 메소드를 만들어도 계속 그 기능과 반환값을 수정하는 등, 메인 코드들이 변경되는 경우가 많이 생겼습니다. 그렇기에 어떤 기능을 구현하는 코드의 테스트 코드를 작성해도 전체 개발 간에 메인 코드를 지속적으로 수정하면서 테스트 코드까지 같이 수정해야해서 오히려 개발 시간이 길어지는 현상이 생기기도 했습니다.&lt;/p&gt;
&lt;p&gt;테스트 코드를 작성하는 데 익숙해져야겠다는 목표는 달성했다고 생각을 하고, 이를 달성하면서 전체 서비스를 어떤 식으로 구현해야할지에 대한 확실한 판단이 선행되어야 겠다는 점도 깨달았습니다.&lt;/p&gt;
&lt;h3&gt;중간 회고에서 조정한 목표가 실제 목표 달성에 도움이 되었나요? 목표를 달성하는 데 어떤 점이 효과적이었다고 생각하나요?&lt;/h3&gt;
&lt;p&gt;중간 회고 이후 기록하는 과정에 소모되는 시간이 많이 줄었습니다. 프리코스 기간동안 거의 매일 코딩이나 피어리뷰를 했었는데 이를 하면서 새롭게 깨달은 내용이나, 다음 과제간 신경써야할 부분을 간단히라도 기록을 했었습니다.&lt;/p&gt;
&lt;p&gt;특히 테스트 코드 작성에 대한 점을 많이 기록을 했었는데, 이 덕에 확실히 테스트 코드를 통해 개발을 하는 과정이 익숙해진 것 같고, 다양한 방식의 테스트 코드를 작성할 수 있었습니다.&lt;/p&gt;
&lt;h3&gt;각 미션의 목표를 달성하기 위해 세운 계획을 잘 이행했나요? 그 과정에서 어떤 전략이 효과가 있었나요?&lt;/h3&gt;
&lt;p&gt;우테코에서 준 공통 피드백을 꼼꼼히 자주 읽던게 각 미션 목표를 이행하는데 많은 도움이 된 것 같습니다.&lt;/p&gt;
&lt;p&gt;사실 코딩을 하고 서로 피어 리뷰를 진행하면서도 &apos;뭐가 정답일까&apos;, 혹은 &apos;어떤 스타일로 코드를 작성하는 게 좋은건가&apos; 라는 생각이 있었습니다. 피드백을 읽는 과정에서 역시 코딩을 하는 과정에서 정답은 없다는 걸 깨닫기는 했지만, 그래도 코드를 작성하는 긍정적인 컨벤션을 어깨넘어로 배울 수 있었고, 이를 체화하는 과정에서 각 미션에서 제공해준 목표를 자연스럽게 달성할 수 있었던 것 같습니다.&lt;/p&gt;
&lt;h3&gt;몰입하고 함께 성장하는 과정을 통해 인상 깊었던 경험이나 변화가 있었나요?&lt;/h3&gt;
&lt;p&gt;과제를 제출하고 서로 리뷰를 진행했던 게 가장 기억에 남는 것 같습니다. 다른 사람의 코드를 이렇게 깊게, 오랫동안 보고 분석한 적이 처음이었는데, 리뷰를 하고 받는 과정에서 배운 게 굉장히 많았고, 한 가지 주제에서 나랑 같은 코드가 하나도 없다는 점이 꽤 재밌게 느껴졌습니다.&lt;/p&gt;
&lt;p&gt;우선, 처음에는 코드 리뷰가 쉽지는 않았습니다. 다른 사람의 코드와 생각을 이해하는 과정이 꽤 오랜 시간과 집중을 필요로 하는 일임을 알 수 있었고, 반대로 그만큼 저는 코드를 더 가독성 좋게, 이해하기 쉽게 작성해야겠다는 생각도 했습니다. 좋은 리뷰를 해주고 싶은 만큼 자바라는 언어와, 객체 지향이라는 개념을 공부할 수 있었고 학습한 만큼 상대방에게 좋은 피드백을 줄 수 있다는 것도 뿌듯했습니다.&lt;/p&gt;
&lt;p&gt;코드 리뷰를 하면서 같은 고민을 나눌 수 있는 점도 좋았습니다. 과제를 구현하면서 혼자 했던 고민들, 리뷰 과정에서 생긴 해결되지 않은 문제들을 나누고, 이야기 하면서 제 궁금증을 해결할 수 있었습니다.&lt;/p&gt;
&lt;p&gt;그리고 무엇보다, 코드 리뷰를 하면 저보다 수준이 높고, 많은 손을 거친 코드들을 볼 수 있는데, 이분들의 코드를 보면서 제 코드를 개선시켜날 수 있는 점이 좋았습니다. 코드 보는 안목이 잡혀나가는 것 같고, 저만의 기준이 생기면서 이를 다음 과제에 적용해나가는 과정이 꽤나 재미있게 느껴졌습니다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[우아한테크코스 7기 BE 프리코스 3주차 회고]]></title><description><![CDATA[과제 요약 apply.techcourse.co.kr_assignment_14_mission_49 2.png 과제 진행 소감 MVC, 디자인 패턴 꼭 적용해야하나? 1, 2주차는 시작과 동시에 기능에 따라 코드를 분리하려고 노력했었지만, 이번…]]></description><link>https://minjun.blog/우아한테크코스_7기_BE_프리코스_3주차_회고/</link><guid isPermaLink="false">https://minjun.blog/우아한테크코스_7기_BE_프리코스_3주차_회고/</guid><pubDate>Mon, 04 Nov 2024 12:35:24 GMT</pubDate><content:encoded>&lt;h2&gt;과제 요약&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/apply.techcourse.co.kr_assignment_14_mission_49%202.png&quot; alt=&quot;apply.techcourse.co.kr_assignment_14_mission_49 2.png&quot;&gt;&lt;/p&gt;
&lt;h2&gt;과제 진행 소감&lt;/h2&gt;
&lt;h3&gt;MVC, 디자인 패턴 꼭 적용해야하나?&lt;/h3&gt;
&lt;p&gt;1, 2주차는 시작과 동시에 기능에 따라 코드를 분리하려고 노력했었지만, 이번 3주차에서는 우선적으로 기능 구현에 초점을 두었습니다. 1, 2주차보다는 조금 더 빠르게 구현을 해보고 싶어서 코드의 구조가 조금 망가지더라도 기능구현을 먼저 해두고, 필요에 따라 중간에 분리를 하거나 완성 후에 코드 분리를 진행했습니다.&lt;/p&gt;
&lt;p&gt;MVC 패턴을 이번 프리코스를 하면서 처음 적용해보았는데, 1, 2주차 기간에는 처음부터 이 패턴을 적용하느라 억지로 코드를 작성한 감이 있었습니다. 그렇다보니 이 패턴의 장점이나, 필요성 보다는 틀에 맞추면서 코딩을 하는 듯한 느낌을 받았었는데, 이번에는 반대였습니다.&lt;/p&gt;
&lt;p&gt;오히려 막무가내로 코딩을 하는 과정에서 어느정도 정형화 된 틀의 필요성을 느꼈고, 특히 Controller와 View의 분리의 필요성을 느꼈습니다. 입력값의 유효성을 판단해주는 과정을 처음에는 View에서 해줘야 된다고 생각했었습니다. 사용자의 입력을 받는 역할이 View니까, View가 마찬가지로 재요구하기 위해 Validation까지 해줘야하지 않나? 로 시작해서 코딩을 했었는데, View와 Util의 의존성이 점점 커지는 것 같아서 Controller에서 입력값의 유효성을 판단하도록 코드를 수정했고, View는 본래의 기능에 충실할 수 있었습니다.&lt;/p&gt;
&lt;p&gt;1, 2, 3주차의 프리코스를 경험하면서 디자인 패턴을 공부하기 위해 억지로 그 패턴에 적용해보는 것도 필요하다고 생각이 들었고, 반대로 막무가내로 코딩을 해보는 것도 그 패턴의 중요성을 느낄 수 있는 방법일 거라고 느꼈습니다. 그리고 디자인 패턴이라는 게 억지로 만든 거라기 보다는, 기능에 따라 코드를 분리하면서 자연스럽게 생긴 형식이라는 걸 다시 한 번 느낄 수 있었던 것 같습니다.&lt;/p&gt;
&lt;h3&gt;사소하지만 중요한 것들&lt;/h3&gt;
&lt;p&gt;매 주차별 미션에서 신경을 쓰는 부분이지만 아직 부족한 점들이 있는 것 같습니다. 함수와 변수의 명명, 접근 제한자 같은 부분들을 1주차에서 많이 놓쳐서 피드백을 받았는데, 2, 3주차에 걸쳐 개선해보려고 노력했습니다. 명명 규칙의 경우, 단순하지만 처음 보는 사람이 의미를 바로 파악할 수 있는 이름으로 지으려고 했는데, 만족스럽지 않은 경우도 있어서 리뷰를 받아보면서 개선해나가고 싶었습니다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[폐음연구 - 폐기능검사 지침 요약]]></title><description><![CDATA[2016 폐기능검사 지침 연구 간에 소프트웨어적으로 구현할 사항들 중 기존 지침에서 반영할 수 있는 내용을 알고자 2016년에 대한결핵및 호흡기학회에서 발간된 폐기능검사 지침을 참고하고자 한다. 검사 적합성 Pasted image…]]></description><link>https://minjun.blog/폐기능검사_지침_요약/</link><guid isPermaLink="false">https://minjun.blog/폐기능검사_지침_요약/</guid><pubDate>Wed, 04 Dec 2024 12:35:24 GMT</pubDate><content:encoded>&lt;h2&gt;2016 폐기능검사 지침&lt;/h2&gt;
&lt;p&gt;연구 간에 소프트웨어적으로 구현할 사항들 중 기존 지침에서 반영할 수 있는 내용을 알고자 2016년에 대한결핵및 호흡기학회에서 발간된 폐기능검사 지침을 참고하고자 한다.&lt;/p&gt;
&lt;h2&gt;검사 적합성&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/Pasted%20image%2020241204203703.png&quot; alt=&quot;Pasted image 20241204203703.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;오류가 없는 적합한 검사가 3회 이상 나올 때까지 검사를 반복&lt;/li&gt;
&lt;li&gt;기류-용적과 용적-시간 곡선을 보고 적합성 판정&lt;/li&gt;
&lt;li&gt;가장 높은 FVC와 FEV1을 결정하고 이 두 합이 최대인 결과를 선정&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;1. 검사 시작: 추정용적의 산출&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/Pasted%20image%2020241204204230.png&quot; alt=&quot;Pasted image 20241204204230.png&quot;&gt;
추적용적법을 통해 검사 시작 시간을 추정한다. 용적-시간 곡선에서 가장 기울기가 높은 곳에 접선을 그었을 때, 그 접선의 x절편이 검사 시작시간이 된다. 이때 EV값 (추정용적, back extrapolated volume)은 FVC의 5%와 150ml 중에 큰 수치보다 작아야한다.&lt;/p&gt;
&lt;h3&gt;2. 검사 과정&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/Pasted%20image%2020241204211754.png&quot; alt=&quot;Pasted image 20241204211754.png&quot;&gt;
검사 대상자는 최대 흡기 상태에서 시작해야하고, 부드럽고 지속적인 호기를 해야한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;조급함, 거짓시작, 최고오기기류속도 도달 시간이 120msec을 초과 시 재검&lt;/li&gt;
&lt;li&gt;기침, 성대 폐쇄시 재검&lt;/li&gt;
&lt;li&gt;호기의 조기 중단 또는 종료 없음: 용적-시간 곡선의 정상 부위를 보고 마지막 호기 최소 1초 동안 또는 적합한 호기 시간 후 용적 변화가 없으면 종료 시점으로 간주, 젊은 정산인의 경우 6초 이내에 끝날 수도 있음. 고령이나 폐쇄적 폐질환자는 6초보다 긴 호기가 여러번 나타날 수도 있는데, 이 경우는 검사자가 보고 더 이상 호기 불가능한 시점을 종료로 간주&lt;/li&gt;
&lt;li&gt;기류가 새지 않음: 마우스피스 밖으로 새면 안됨&lt;/li&gt;
&lt;li&gt;검사 도중 흡기가 있으면 안됨&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;3. 검사 종료&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;용적-시간 곡선에서 1초 이상 용적 변화가 없는 상태(25mL 미만 변화)를 유지해야함.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;검사 재현성&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/Pasted%20image%2020241204212429.png&quot; alt=&quot;Pasted image 20241204212429.png&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;가장 높은 2개 FVC 수치들의 차이가 5%이내 또는 150 mL 이내여야 함.&lt;/li&gt;
&lt;li&gt;FVC가 1.0 L 미만인 경우에는, 가장 높은 2개 수치들의 차이가 100 mL 이내여야 함.&lt;/li&gt;
&lt;li&gt;가장 높은 2개 FEV1 수치들의 차이도 150 mL 이내이어야 함.&lt;/li&gt;
&lt;li&gt;가장 높은 FVC와 FEV1 은 각기 다른 검사 결과에서 얻을 수 있음&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3개의 검사들이 재현성 기준에 안맞으면 최대 8번까지 검사를 반복한다. 검사를 하지 않기를 원하거나, 더 좋은 결과를 얻지 못할 것 같으면 가장 나은 검사 3개를 택한다.
반복 검사 중에 FVC와 FEV1이 점점 감소하는 경우가 있는데 최초 검사치보다 20%이상 감소하는 경우 검사를 중단해야한다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[11/22 폐음연구 관련 미팅 내용 정리]]></title><description><![CDATA[11월 22일에 강시혁 교수님, 권병수 교수님과 폐음 연구 관련 미팅이 있었다. 원래 우리팀의 연구는 폐질환자의 재활을 유도할 수 있는 간단한 spirometer…]]></description><link>https://minjun.blog/20241122_미팅내용정리/</link><guid isPermaLink="false">https://minjun.blog/20241122_미팅내용정리/</guid><pubDate>Tue, 26 Nov 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;11월 22일에 &lt;a href=&quot;https://sites.google.com/view/si-hyuck-kang/home?authuser=0&quot;&gt;강시혁 교수님&lt;/a&gt;, &lt;a href=&quot;https://www.snubh.org/medical/drIntroduce.do?DP_TP=&amp;#x26;DP_CD=IMR&amp;#x26;sDpCdDtl=IMR&amp;#x26;sDrSid=1029327&amp;#x26;sDrStfNo=66098&amp;#x26;sDpTp=&quot;&gt;권병수 교수님&lt;/a&gt;과 폐음 연구 관련 미팅이 있었다.&lt;/p&gt;
&lt;p&gt;원래 우리팀의 연구는 &lt;strong&gt;폐질환자의 재활을 유도할 수 있는 간단한 spirometer의 제작&lt;/strong&gt;과 사용자의 노력성 호기를 유도하고 올바른 방법을 안내할 수 있는 앱 구현이 주된 방향성이었다. 기존에 진행되었던 연구들은 대부분 간단한 기기나, 스마트폰만으로도 사용자의 폐기능을 간단하게 측정하는 부분에 초점을 맞추었기에, 폐질환을 지닌 사용자의 폐기능을 주기적으로 트래킹하면서 재활 유도에 집중하려고 했다.&lt;/p&gt;
&lt;p&gt;우선 spirometer의 폐기능 측정 방식은 터빈에 자석을 부착해서 홀센서 방식으로 센싱을 하고 있고 실제 임상에서 사용되는 기기만큼의 정확도를 재현하기 위해 하드웨어를 수정해가고 있다.&lt;/p&gt;
&lt;h3&gt;미팅 내용&lt;/h3&gt;
&lt;p&gt;미팅을 하면서 적은 내용과 Q&amp;#x26;A를 간단히 옮겨 적으면 아래와 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;CHI&apos;20 SpiroPlay&lt;/em&gt; 연구 확인하기
&lt;ul&gt;
&lt;li&gt;미팅 직전에 우리가 하고자하는 주제와 너무 비슷한 논문이 있었음, 바로 읽어볼 예정&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;터빈 + 자석&lt;/code&gt; 과 같은 홀센서로 spirometer를 구현하는게 특허에 걸리는지 확인하기&lt;/li&gt;
&lt;li&gt;폐질환자를 트래킹하는 과정에서 FVC가 해당 기간 내에 10% 이상 감소하면 악화로 판단
&lt;ul&gt;
&lt;li&gt;매 측정마다 오차를 줄이는 게 중요&lt;/li&gt;
&lt;li&gt;실제 임상 기기와의 값 차이를 줄이는 게 중요&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;일관성&lt;/code&gt;이 가장 중요할듯&lt;/li&gt;
&lt;li&gt;기존 제작하던 터빈 형태는 바람이 약하더라도 관성 때문에 힘이 약해져도 계속 돌아가게 되는 데, 이 부분이 오차로 작용할 가능성 있음, 어떻게 해결할지?&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;자가폐기능검사에 대한 수요는 점차 증가하고 있음
&lt;ul&gt;
&lt;li&gt;폐기능 검사실 포화라고 함&lt;/li&gt;
&lt;li&gt;특히 어린이 천식 환자&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;폐기능 지침에 따르면 최소 3번에서 최대 8번까지 검사를 시행하고 이때 Flow Volume Curve를 보고 검사를 잘했는지 판단.&lt;/li&gt;
&lt;li&gt;정확성 높은 기기도 중요하지만, 옆에서 끝까지 바람을 불게 해주는 &lt;code class=&quot;language-text&quot;&gt;독려&lt;/code&gt;가 중요.
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;독려&lt;/code&gt;를 해줄만한 SW가 중요&lt;/li&gt;
&lt;li&gt;실제로는 검사해주는 사람이 엄청 옆에서 독려해준다고함.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;실제 임상에서는 폐활량계의 다양한 파라미터까지 알려고 하지는 않음.
&lt;ul&gt;
&lt;li&gt;기본적인 파라미터를 정확성, 일관성있게 뽑는 게 중요할듯&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Flow Volume Curve 모양도 진단 과정에서 중요하다고 함&lt;/li&gt;
&lt;li&gt;ILD의 경우 FVC, 천식과 COPD의 경우 FEV 중요&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;미팅 결과&lt;/h3&gt;
&lt;p&gt;연구 방향성을 바꿀 필요를 느꼈다. 재활, 게임 형식의 결과물보다 일관성 있고 정확도 있는 측정값을 내는 HW가 우선이 되어야할 것 같고, 폐기능검사 지침을 참고해서 사용자가 집이나 병원이 아닌 곳이더라도 올바른 방식으로 폐기능 검사를 유도할 수 있는 SW 구현에 집중해야할 것 같다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[12/20 분당서울대병원 폐기능 검사실 참관]]></title><description><![CDATA[12월 20일에 직접 분당 서울대병원에 있는 폐기능 검사실을 참관할 수 있는 기회가 주어졌다. 참관 기록 내용 Vmax Vyntus SPIRO 장비를 사용함 (현재 단종) 열센서 + 압력센서 Flow measurement Resolution: 1mL…]]></description><link>https://minjun.blog/20241220_분당서울대병원_참관/</link><guid isPermaLink="false">https://minjun.blog/20241220_분당서울대병원_참관/</guid><pubDate>Fri, 20 Dec 2024 22:00:50 GMT</pubDate><content:encoded>&lt;p&gt;12월 20일에 직접 분당 서울대병원에 있는 폐기능 검사실을 참관할 수 있는 기회가 주어졌다.&lt;/p&gt;
&lt;h3&gt;참관 기록 내용&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Vmax Vyntus SPIRO 장비를 사용함 (현재 단종)
&lt;ul&gt;
&lt;li&gt;열센서 + 압력센서&lt;/li&gt;
&lt;li&gt;Flow measurement
&lt;ul&gt;
&lt;li&gt;Resolution: 1mL&lt;/li&gt;
&lt;li&gt;Accuracy: 0.1 to 14 L/s: ± 5% of reading or 0.2 L/s, whichever is greater&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Volume integration
&lt;ul&gt;
&lt;li&gt;Resolution: 1mL&lt;/li&gt;
&lt;li&gt;Accuracy: 0.5 to 8 L: ± 3% of reading or 0.05 L, whichever is greater&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;환자에 대한 폐기능 검사 독려는 필수사항
&lt;ul&gt;
&lt;li&gt;시작하기 전 충분한 설명이 필요함.&lt;/li&gt;
&lt;li&gt;검사 도중 적합하지 않으면 환자 상태에 따라 빠르게 재시도 또는 제대로 이해 못할 경우 재설명 후 시도&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;원활한 이해를 위해 직접 제작한 영상도 존재&lt;/li&gt;
&lt;li&gt;적합 판단을 위해 Flow-Volume 그래프를 많이 활용하고 있음&lt;/li&gt;
&lt;li&gt;호기량이 약한 후반 부분도 끝까지 측정하고 검사적합 판단 요소로 활용&lt;/li&gt;
&lt;li&gt;검사 시, 고개를 위로 10~15도 정도 향한 자세로 시행 (기도 확보)&lt;/li&gt;
&lt;li&gt;2차 감염 방지 목적으로 특수 필터 사용&lt;/li&gt;
&lt;li&gt;Reference로 최정근식이 아닌, Morris식을 활용 (현재 서울대병원만 그렇다고 함.)&lt;/li&gt;
&lt;li&gt;검사는 많아야 3번, 지침서보다 적게 시행하는 듯함&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;참관 후기&lt;/h3&gt;
&lt;p&gt;랩실에 들어오고 처음 참여하게 된 연구라 타 연구들이 어떻게 진행이 되는지 자세히 알지는 못하지만, 이렇게 우리가 하고자 하는 분야에 대해 여쭤볼 사람들이 있고, 참관할 수 있다는 게 되게 좋은 기회인 것 같다. 연구의 방향성을 잡을 때 실제 현장에서의 수요가 뭔지에 대해 알 수가 없어 힘든 경우가 있는데, 이번 참관을 통해 현장에서의 요구와 우리가 목표로 해야하는 점들을 확실히 할 수 있어서 속이 시원한 기분이었다.&lt;/p&gt;
&lt;h3&gt;연구 진행 사항&lt;/h3&gt;
&lt;p&gt;현재 HW는 다른 분이 주로 담당해서 개발을 하고 있고, 나는 SW 개발에 집중을 하고자 한다. 목표는 우리가 만든 HW에서 측정한 값을 실시간으로 보면서 이에 맞는 피드백을 제공해주는 것인데, 마침 다른 기기로 측정한 dataset을 찾은 상태다. 그래서 나는 먼저 데이터를 시간축에 따라 읽으면서 Flow와 Volume값을 보고 이에 맞는 올바른 피드백을 제공해주는 SW 개발을 할 것 같다.&lt;/p&gt;
&lt;h3&gt;+ 여담&lt;/h3&gt;
&lt;p&gt;직접 폐기능 검사실에 방문한 김에 내 폐기능을 측정해보았다.&lt;img src=&quot;/attachments/%EB%AF%BC%EC%A4%80_%EA%B2%80%EC%82%AC%EC%88%98%EC%B9%98.jpg&quot; alt=&quot;민준_검사수치.jpg&quot;&gt;
Ref값의 80%이상이면 정상인데, 다행히 넘긴 했다. 하다보니 괜히 욕심 생기고 자존심을 건들단까... 100퍼를 넘기고 싶었다.&lt;/p&gt;</content:encoded></item><item><title><![CDATA[논문 요약 - 스마트기기 내장 마이크기반 폐질환 진단기기 개발]]></title><description><![CDATA[mobile spirometry 관련 자료로 돌아가기 과제명 스마트기기 내장 마이크기반 폐질환 진단기기 개발 발행년월 2019-11 연구기관 원광대학교 링크 https://scienceon.kisti.re.kr/srch…]]></description><link>https://minjun.blog/스마트기기 내장 마이크기반 폐질환 진단기기 개발/</link><guid isPermaLink="false">https://minjun.blog/스마트기기 내장 마이크기반 폐질환 진단기기 개발/</guid><pubDate>Mon, 18 Nov 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;/mobile%20spirometry%20%EA%B4%80%EB%A0%A8%20%EC%9E%90%EB%A3%8C&quot; data-wiki-link=&quot;true&quot;&gt;mobile spirometry 관련 자료&lt;/a&gt;로 돌아가기&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;과제명&lt;/th&gt;
&lt;th&gt;스마트기기 내장 마이크기반 폐질환 진단기기 개발&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;발행년월&lt;/td&gt;
&lt;td&gt;2019-11&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;연구기관&lt;/td&gt;
&lt;td&gt;원광대학교&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;링크&lt;/td&gt;
&lt;td&gt;&lt;a href=&quot;https://scienceon.kisti.re.kr/srch/selectPORSrchReport.do?cn=TRKO202000001587#&quot;&gt;https://scienceon.kisti.re.kr/srch/selectPORSrchReport.do?cn=TRKO202000001587#&lt;/a&gt;;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;요약&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;모바일 핸드폰의 내장 마이크를 활용해 사용자의 호기시 음성 데이터를 기반으로 폐기능 평가.&lt;/li&gt;
&lt;li&gt;VFCDM으로 주파수 분석
&lt;ul&gt;
&lt;li&gt;SPWV, STFT, WT, VFCDM 중 VFCDM이 가장 결과가 정확했음&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;측정 파라미터
&lt;ul&gt;
&lt;li&gt;FVC&lt;/li&gt;
&lt;li&gt;FEV1&lt;/li&gt;
&lt;li&gt;FEV1 / FVC&lt;/li&gt;
&lt;li&gt;PEF&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;추가로 앱과 클라우드 서비스 구현&lt;/li&gt;
&lt;li&gt;활용 디바이스: iPhone 5s&lt;/li&gt;
&lt;li&gt;오차율: 2~3%&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;연구 배경 및 필요성&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;만성 호흡 질환의 심각성&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;WHO에 따르면 만성 폐쇄성폐질환(COPD) 환자는 전 세계적으로 6,400만 명, 천식 환자는 2억 3,500만 명에 달함.&lt;/li&gt;
&lt;li&gt;국내에서는 40세 이상 COPD 유병률이 14.6%, 65세 이상은 30.2%로 연령 증가에 따라 높은 비율을 보임.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;자가 진단의 필요성&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;현재 천식 및 COPD 진단은 폐활량계(spirometry test)를 통해 이루어짐. 이는 병원 방문이 필수적이며 지속적인 경과 추적이 어려운 문제가 있음.&lt;/li&gt;
&lt;li&gt;정기적인 spirometry 검사를 통해 조기 진단이 가능하지만, 환자의 시간적·물리적 제약으로 인해 검사율이 낮음.&lt;/li&gt;
&lt;li&gt;“언제 어디서나 간편하게” 진단할 수 있는 스마트기기 기반 솔루션에 대한 수요 증가.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;연구 목표&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;스마트기기 활용&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;스마트폰 및 웨어러블 기기의 내장 마이크를 활용해 폐활량계를 대체할 수 있는 기술 개발.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;진단 알고리즘 및 플랫폼&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;호흡 데이터를 정밀 분석하여 임상적으로 활용 가능한 지표(FVC, FEV1, FEV1/FVC, PEF)를 측정.&lt;/li&gt;
&lt;li&gt;이를 기반으로 천식 및 COPD를 조기 진단하고 관리할 수 있는 애플리케이션 및 클라우드 플랫폼 구현.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;연구 내용&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;특별한 &lt;strong&gt;부가 장치 없이 스마트폰 내장 마이크 기반으로 호기시 신호를 측정&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;VFCDM을&lt;/strong&gt; 활용하여 임상에서 사용되는 PFT parameters(FVC, FEV1, FEV1/FVC, PEF)를 검출
&lt;ul&gt;
&lt;li&gt;마이크를 이용하여 측정된 오디오 신호를 VFCDM을 활용하여 주파수 분석을 통한 noise를 제외한 실제 호기시 신호만을 검출&lt;/li&gt;
&lt;li&gt;SPWV, STFT, WT 등 이전의 시간-주파수 분석 방법보다 VFCDM은 더 높은 해상도가 나타남&lt;/li&gt;
&lt;li&gt;검출된 신호를 활용하여 PFT parameters 평가&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;알고리즘을 기반으로 스마트폰 어플리케이션 및 클라우드 플랫폼 개발
&lt;ul&gt;
&lt;li&gt;실제 임상에서 사용되는 프로토콜을 기반으로 측정 횟수 및 검출 parameters 및 그래프 출력 &lt;img src=&quot;/attachments/Pasted%20image%2020241119221121.png&quot; alt=&quot;Pasted image 20241119221121.png&quot;&gt;&lt;/li&gt;
&lt;li&gt;측정된 PFT 결과 관리 및 모니터링을 위한 클라우드 플랫폼을 개발 &lt;img src=&quot;/attachments/Pasted%20image%2020241119221206.png&quot; alt=&quot;Pasted image 20241119221206.png&quot;&gt;&lt;/li&gt;
&lt;li&gt;임상에서 중요하게 사용되는 parameter인 FEV1/FVC의 정확도 검증을 위하여 13명의 실험자를 대상으로 검증한 결과 absolute error mean 4.12 및 standard deviation 3.45로 높은 정확도가 나타남 &lt;img src=&quot;/attachments/Pasted%20image%2020241119223351.png&quot; alt=&quot;Pasted image 20241119223351.png&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;주요 기술 및 성과&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;VFCDM 및 Resonance Tracking&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;노력성 호기 신호에서 목소리나 환경 소음을 제거해 호흡 데이터를 정확히 분석.&lt;/li&gt;
&lt;li&gt;FVC, FEV1, FEV1/FVC 등의 임상 지표를 정밀하게 계산.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;스마트기기 기반 시스템&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;병원 방문 없이 간단한 호흡만으로 천식 및 COPD를 검사할 수 있는 스마트폰 앱 개발.&lt;/li&gt;
&lt;li&gt;클라우드 플랫폼을 통해 데이터를 저장하고 장기적으로 관리.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;비교 분석 결과&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;임상 검사의 주요 지표(FEV1/FVC 비율 등)와 비교했을 때, 2~3% 내외의 오차율로 실제 활용 가능성을 입증.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;연구 의의 및 기대 효과&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;의료 접근성 개선&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;의료기관 방문 없이 스마트기기만으로 폐질환을 진단하고 관리 가능.&lt;/li&gt;
&lt;li&gt;의료 인프라가 부족한 지역에서도 활용 가능.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;조기 진단 및 관리&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;천식 및 COPD를 조기에 발견하고, 환자의 상태를 지속적으로 추적 관리할 수 있음.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;국민 건강 증진&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;간편한 진단 시스템으로 일반인의 질환 발견률 증가.&lt;/li&gt;
&lt;li&gt;만성 폐질환의 조기 발견 및 치료 기회 확대.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;연구의 한계 및 개선 방향&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;다양한 환경에서 신호 정밀도를 유지하기 위한 알고리즘 개선 필요.&lt;/li&gt;
&lt;li&gt;웨어러블 기기와의 통합 및 사용자 편의성 향상을 위한 추가 연구.&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[CA Overview]]></title><description><![CDATA[contents: 0-1. CA Intro Below your program A simplified view of hardware and software Applications software Written in high-level language…]]></description><link>https://minjun.blog/0-2. CA Overview/</link><guid isPermaLink="false">https://minjun.blog/0-2. CA Overview/</guid><pubDate>Mon, 22 Jul 2024 14:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Below your program&lt;/h3&gt;
&lt;p&gt;A simplified view of hardware and software&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Applications software&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Written in high-level language&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Systems software&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Compilers&lt;/strong&gt;: translate high-level language to machine language&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Operating Systems&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Handle input/output operations&lt;/li&gt;
&lt;li&gt;Manage resources (e.g., storage, memory)&lt;/li&gt;
&lt;li&gt;Schedule tasks (processes)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hardware&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - processors memory, I/O devices
   &lt;/p&gt;
&lt;h2&gt;Execution of programs&lt;/h2&gt;
&lt;h3&gt;Step 1: Translating language&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;From high-level language
&lt;ul&gt;
&lt;li&gt;Designed for specific domain&lt;/li&gt;
&lt;li&gt;Provides for productivity and portability&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;To hardware machine language
&lt;ul&gt;
&lt;li&gt;Binary digits&lt;/li&gt;
&lt;li&gt;Encoded instructions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Step 2: Inputting, outputting, processing, and storing data&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;4 Fundamental HW components&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Processor
&lt;ul&gt;
&lt;li&gt;Datapath + control, our primary focus&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Memory&lt;/li&gt;
&lt;li&gt;Input device
&lt;ul&gt;
&lt;li&gt;Keyboard, mouse, ...&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Output device
&lt;ul&gt;
&lt;li&gt;Screen, speaker&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;8 STEPS&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Loading: programs are stored in memory&lt;/li&gt;
&lt;li&gt;Inputting: input device write data to memory&lt;/li&gt;
&lt;li&gt;Fetching: processor fetches instructions and data from memory&lt;/li&gt;
&lt;li&gt;Decoding: processor (control) decodes the instructions and determine what to do&lt;/li&gt;
&lt;li&gt;Executing : processor (datapath) executes the instructions &amp;#x26; stores the computation result to memory&lt;/li&gt;
&lt;li&gt;Outputting: output device sends the result by reading output data from memory&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Understanding program performance&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Algorithm
&lt;ul&gt;
&lt;li&gt;Determines the number of operations executed&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Programming language, compiler, and instruction set architecture (ISA)
&lt;ul&gt;
&lt;li&gt;Determine the number of machine instructions executed per operation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Processor and memory system
&lt;ul&gt;
&lt;li&gt;Determine how fast instructions can be executed&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I/O system (including OS)
&lt;ul&gt;
&lt;li&gt;Determines how fast I/O operations are executed&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;What is ISA (Instruction Set Architecture)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;An interface between SW snd HW (includes a set of machine instruction)
&lt;ul&gt;
&lt;li&gt;SW is translated into the machine instructions included in the ISA&lt;/li&gt;
&lt;li&gt;HW is designed to support the instructions in ISA&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;8 great ideas for designing better computer architecture&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Design for &lt;strong&gt;Moore&apos;s Law&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Anticipate where the technology will be when the design finishes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Provide &lt;strong&gt;abstraction&lt;/strong&gt; to simplify design
&lt;ul&gt;
&lt;li&gt;Hide low-level details for the ease of SW development&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Make &lt;strong&gt;the common case&lt;/strong&gt; fast
&lt;ul&gt;
&lt;li&gt;Enhance performance of the common case instead of optimizing the rare case.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Perform via &lt;strong&gt;parallelism&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Perform operations in parallel&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Performance via &lt;strong&gt;pipelining&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Use a particular patten of parallelism, called pipelining&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Performance via &lt;strong&gt;prediction&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Start working with prediction, stead of waiting until you know for sure&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hierarchy&lt;/strong&gt; of memories
&lt;ul&gt;
&lt;li&gt;Use the fastest, smallest, and most expensive memory at the top of the hierarchy and the slowest, largest, and cheapest memory at the bottom&lt;/li&gt;
&lt;li&gt;cache &gt; RAM &gt; Large SSD&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Dependability via &lt;strong&gt;redundancy&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;Include redundant components that can take over when failure occurs&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Computer Architecture Intro]]></title><description><![CDATA[Course Description 본 스터디에서는 컴퓨터 시스템이 어떻게 구성되어있고 디자인되어있는지 공부합니다.
특히 CPU, memory를 포함한 하드웨어 시스템에 적용되고 있는 디자인 특성들을 알아봅니다. Prerequisites and Co…]]></description><link>https://minjun.blog/0-1. CA Intro/</link><guid isPermaLink="false">https://minjun.blog/0-1. CA Intro/</guid><pubDate>Mon, 22 Jul 2024 12:35:24 GMT</pubDate><content:encoded>&lt;h2&gt;Course Description&lt;/h2&gt;
&lt;p&gt;본 스터디에서는 컴퓨터 시스템이 어떻게 구성되어있고 디자인되어있는지 공부합니다.
특히 CPU, memory를 포함한 하드웨어 시스템에 적용되고 있는 디자인 특성들을 알아봅니다.&lt;/p&gt;
&lt;h2&gt;Prerequisites and Co-requisites&lt;/h2&gt;
&lt;p&gt;C 프로그래밍, 논리회로, 어셈블리어를 알면 더욱 좋습니다.&lt;/p&gt;
&lt;h2&gt;Textbooks&lt;/h2&gt;
&lt;p&gt;본 페이지에 작성될 내용의 기반은 아래의 책에 있습니다.
&lt;img src=&quot;/attachments/computer-architecture-textbook.jpg&quot; alt=&quot;computer-architecture-textbook.jpg&quot;&gt;Computer Organization and Design 5th Edition (Asian Edition)&lt;/p&gt;
&lt;h2&gt;Course Schedule&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;ol start=&quot;0&quot;&gt;
&lt;li&gt;Intro&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/0-2.%20CA%20Overview&quot; data-wiki-link=&quot;true&quot;&gt;0-2. CA Overview&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol&gt;
&lt;li&gt;Computer Abstractions and Technology&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/1-1.%20Defining%20Performance&quot; data-wiki-link=&quot;true&quot;&gt;1-1. Defining Performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/1-2.%20Measuring%20Performance&quot; data-wiki-link=&quot;true&quot;&gt;1-2. Measuring Performance&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;Instructions: Language of the Computer&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/2-1.%20Designing%20principles%201~3%20of%20MIPS%20ISA&quot; data-wiki-link=&quot;true&quot;&gt;2-1. Designing principles 1~3 of MIPS ISA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2-2.%20Design%20principles%204%20of%20MIPS%20ISA&quot; data-wiki-link=&quot;true&quot;&gt;2-2. Design principles 4 of MIPS ISA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2-3.%20Representing%20Instructions%20in%20computer&quot; data-wiki-link=&quot;true&quot;&gt;2-3. Representing Instructions in computer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2-4.%20Supporting%20procedures%20in%20computer%20hardware&quot; data-wiki-link=&quot;true&quot;&gt;2-4. Supporting procedures in computer hardware&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/2-5.%20MIPS%20memory%20allocation%20&amp;#x26;%20addressing&quot; data-wiki-link=&quot;true&quot;&gt;2-5. MIPS memory allocation &amp;#x26; addressing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;Arithmetic for Computers&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/3-1.%20Addition%20and%20Subtraction&quot; data-wiki-link=&quot;true&quot;&gt;3-1. Addition and Subtraction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/3-2.%20Multiplication&quot; data-wiki-link=&quot;true&quot;&gt;3-2. Multiplication&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/3-3.%20Division&quot; data-wiki-link=&quot;true&quot;&gt;3-3. Division&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;The Processor&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/4-1.%20Processor%20Overview&quot; data-wiki-link=&quot;true&quot;&gt;4-1. Processor Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/4-2.%20Controlling%20a%20datapath&quot; data-wiki-link=&quot;true&quot;&gt;4-2. Controlling a datapath&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/4-3.%20A%20single-cycle%20datapath&quot; data-wiki-link=&quot;true&quot;&gt;4-3. A single-cycle datapath&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/4-4.%20Pipelining%20overview&quot; data-wiki-link=&quot;true&quot;&gt;4-4. Pipelining overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/4-5.%20Handling%20hazards&quot; data-wiki-link=&quot;true&quot;&gt;4-5. Handling hazards&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/4-6.%20Exceptions&quot; data-wiki-link=&quot;true&quot;&gt;4-6. Exceptions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ol start=&quot;5&quot;&gt;
&lt;li&gt;Memory Hierarchy&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/5-1.%20Cache%20overview&quot; data-wiki-link=&quot;true&quot;&gt;5-1. Cache overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/5-2.%20Improving%20cache%20performance&quot; data-wiki-link=&quot;true&quot;&gt;5-2. Improving cache performance&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/5-3.%20Vitual%20memory%20Part%201&quot; data-wiki-link=&quot;true&quot;&gt;5-3. Vitual memory Part 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/5-4.%20Vitual%20memory%20Part%202&quot; data-wiki-link=&quot;true&quot;&gt;5-4. Vitual memory Part 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Defining Performance]]></title><description><![CDATA[contents: 0-1. CA Intro Two metrics for defining computer performances Response time The time between the start and completion of a task…]]></description><link>https://minjun.blog/1-1. Defining Performance/</link><guid isPermaLink="false">https://minjun.blog/1-1. Defining Performance/</guid><pubDate>Mon, 22 Jul 2024 15:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Two metrics for defining computer performances&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Response time
&lt;ul&gt;
&lt;li&gt;The time between the start and completion of a task&lt;/li&gt;
&lt;li&gt;related to single task&lt;/li&gt;
&lt;li&gt;e.g., how long it takes to do a single task&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Throughput
&lt;ul&gt;
&lt;li&gt;A total amount of works done per unit time&lt;/li&gt;
&lt;li&gt;related to multiple tasks&lt;/li&gt;
&lt;li&gt;e.g., tasks per hour&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Q. If we replace the processor in a computer with ad faster version&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Response time &lt;strong&gt;decrease&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Throughput &lt;strong&gt;increase&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Q. If we add more processors to a system&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Response time &lt;strong&gt;maintain or increase&lt;/strong&gt; (more lanes more complex)&lt;/li&gt;
&lt;li&gt;Throughput &lt;strong&gt;increase&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Defining performance&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt; &lt;/mtext&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;Performance = \frac{1}{execution\;time\,(reponse\;time)}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ce&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.3651em;vertical-align:-0.52em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8451em;&quot;&gt;&lt;span style=&quot;top:-2.655em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.1952em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen mtight&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;re&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;se&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mclose mtight&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.394em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.52em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Relative performance: &lt;strong&gt;X is N time faster than Y&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\frac{Performance_x}{Performance_y} = \frac{Execution time_y}{Execution time_x} = N&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.4745em;vertical-align:-0.5423em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.9322em;&quot;&gt;&lt;span style=&quot;top:-2.655em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.13889em;&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.02778em;&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.1645em;&quot;&gt;&lt;span style=&quot;top:-2.357em;margin-left:0em;margin-right:0.0714em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.03588em;&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2819em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.4461em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.13889em;&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.02778em;&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.1645em;&quot;&gt;&lt;span style=&quot;top:-2.357em;margin-left:0em;margin-right:0.0714em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.143em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.5423em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.4308em;vertical-align:-0.4451em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.9857em;&quot;&gt;&lt;span style=&quot;top:-2.655em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.05764em;&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.1645em;&quot;&gt;&lt;span style=&quot;top:-2.357em;margin-left:0em;margin-right:0.0714em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.143em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.5073em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.05764em;&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.1645em;&quot;&gt;&lt;span style=&quot;top:-2.357em;margin-left:0em;margin-right:0.0714em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.03588em;&quot;&gt;y&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2819em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.4451em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;N&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/performance.jpg&quot; alt=&quot;performance.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elapsed time = system performance = &lt;strong&gt;t1 + t2 + t3 + t4&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;total time between the start and completion of a task, &lt;strong&gt;including everything&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;CPU time = CPU performance = &lt;strong&gt;t1 + t4&lt;/strong&gt; &lt;em&gt;(Only this in this class)&lt;/em&gt;
&lt;ul&gt;
&lt;li&gt;The time spent &lt;strong&gt;processing&lt;/strong&gt; a given task &lt;strong&gt;on a processor&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;math math-display&quot;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;Performance = CPU\;performance = \frac{1}{CPU\;time}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ce&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ce&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.0074em;vertical-align:-0.686em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3214em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.686em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;The CPU time can be further divided into&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;User CPU time&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;spent for processing the code of the program (some functions)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;System CPU time&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;spent in the operating system performing tasks for the program (OS)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Measuring Performance]]></title><description><![CDATA[contents: 0-1. CA Intro Measuring CPU performance Clock period: the duration of a clock cycle How long the computer takes to perform a…]]></description><link>https://minjun.blog/1-2. Measuring Performance/</link><guid isPermaLink="false">https://minjun.blog/1-2. Measuring Performance/</guid><pubDate>Mon, 22 Jul 2024 15:40:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Measuring CPU performance&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Clock period: the duration of a clock cycle
&lt;ul&gt;
&lt;li&gt;How long the computer takes to perform a single basic operation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Clock rate (frequency): &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;cycles\;per\;second = \frac{1}{clock\;period}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;cyc&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;es&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;seco&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.3262em;vertical-align:-0.4811em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8451em;&quot;&gt;&lt;span style=&quot;top:-2.655em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;oc&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.394em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.4811em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;
&lt;ul&gt;
&lt;li&gt;How many basic operations can be performed in a second&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;math math-display&quot;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mspace linebreak=&quot;newline&quot;&gt;&lt;/mspace&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;
CPU\;time = Clock\;cycles \times Clock\;period \\ = Clock\;cycles \times \frac{1}{Clock\;rate}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;Cl&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;oc&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;cyc&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;es&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;Cl&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;oc&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace newline&quot;&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.3669em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;Cl&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;oc&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;cyc&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;es&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.0074em;vertical-align:-0.686em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3214em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;Cl&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;oc&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.686em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;What is CPI?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Clock Cycles per instruction&lt;/strong&gt;
: Average number of clock cycles per instruction for a program or program fragment&lt;/p&gt;
&lt;div class=&quot;math math-display&quot;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;mspace linebreak=&quot;newline&quot;&gt;&lt;/mspace&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;
CPU\;time = Clock\;cycles \times \frac{1}{Clock\;rate} \\= Instruction\;count \times CPI \times \frac{1}{Clock\;rate}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;Cl&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;oc&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;cyc&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;es&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.0074em;vertical-align:-0.686em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3214em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;Cl&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;oc&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.686em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace newline&quot;&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.3669em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;co&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.0074em;vertical-align:-0.686em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3214em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;Cl&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;oc&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.686em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;CPI&lt;/strong&gt; can be affected by&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Cost for each instruction type: &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;CPI_i&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8333em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3117em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;The frequency of each type of instructions: &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;F_i = \frac{Instruction\;count_i}{Instruction\;count}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8333em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3117em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.2334em;vertical-align:-0.345em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8884em;&quot;&gt;&lt;span style=&quot;top:-2.655em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;co&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.4101em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;co&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3281em;&quot;&gt;&lt;span style=&quot;top:-2.357em;margin-left:0em;margin-right:0.0714em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.143em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.345em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;math math-display&quot;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mstyle scriptlevel=&quot;0&quot; displaystyle=&quot;true&quot;&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;munderover&gt;&lt;mo&gt;∑&lt;/mo&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/munderover&gt;&lt;mrow&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;msub&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;/mstyle&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;
\displaystyle CPI = \sum_{i=1}^{n}{CPI_i \times F_i}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.9291em;vertical-align:-1.2777em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mop op-limits&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.6514em;&quot;&gt;&lt;span style=&quot;top:-1.8723em;margin-left:0em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.05em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mrel mtight&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.05em;&quot;&gt;&lt;/span&gt;&lt;span&gt;&lt;span class=&quot;mop op-symbol large-op&quot;&gt;∑&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-4.3em;margin-left:0em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.05em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.2777em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.1667em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3117em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;F&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3117em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;h2&gt;More about&lt;/h2&gt;
&lt;h3&gt;Benchmark&lt;/h3&gt;
&lt;p&gt;: &lt;strong&gt;a tool for measuring the performance of computers&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Metric: &lt;strong&gt;Geometric Mean&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;math math-display&quot;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mtext&gt; &lt;/mtext&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mroot&gt;&lt;mrow&gt;&lt;munderover&gt;&lt;mo&gt;∏&lt;/mo&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/munderover&gt;&lt;mrow&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;/mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mroot&gt;&lt;/mfrac&gt;&lt;mspace linebreak=&quot;newline&quot;&gt;&lt;/mspace&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mroot&gt;&lt;mrow&gt;&lt;munderover&gt;&lt;mo&gt;∏&lt;/mo&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/munderover&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mroot&gt;&lt;/mfrac&gt;&lt;mtext&gt; &lt;/mtext&gt;&lt;mspace linebreak=&quot;newline&quot;&gt;&lt;/mspace&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mroot&gt;&lt;mstyle scriptlevel=&quot;0&quot; displaystyle=&quot;false&quot;&gt;&lt;msubsup&gt;&lt;mo&gt;∏&lt;/mo&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msubsup&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;R&lt;/mi&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;F&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;X&lt;/mi&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mstyle&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mroot&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;
 Performance = \frac{1}{\sqrt[n]{\prod_{i=1}^{n}{Execution\;time\;ratio_i}}} \\ = \frac{1}{\sqrt[n]{\prod_{i=1}^{n}{\frac{Execution\;time_{X,i}}{Execution\;time_{REF,i}}}}} 
 \\  = \sqrt[n]{\textstyle \prod_{i=1}^{n}{\frac{Execution\;time_{REF,i}}{Execution\;time_{X,i}}}}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;P&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ce&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.4514em;vertical-align:-1.13em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3214em;&quot;&gt;&lt;span style=&quot;top:-2.1727em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord sqrt&quot;&gt;&lt;span class=&quot;root&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.596em;&quot;&gt;&lt;span style=&quot;top:-2.8807em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size1 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.9373em;&quot;&gt;&lt;span class=&quot;svg-align&quot; style=&quot;top:-3.2em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.2em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot; style=&quot;padding-left:1em;&quot;&gt;&lt;span class=&quot;mop&quot;&gt;&lt;span class=&quot;mop op-symbol small-op&quot; style=&quot;position:relative;top:0em;&quot;&gt;∏&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8043em;&quot;&gt;&lt;span style=&quot;top:-2.4003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mrel mtight&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.2029em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2997em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.1667em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.05764em;&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3117em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-2.8973em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.2em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;hide-tail&quot; style=&quot;min-width:1.02em;height:1.28em;&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;400em&quot; height=&quot;1.28em&quot; viewBox=&quot;0 0 400000 1296&quot; preserveAspectRatio=&quot;xMinYMin slice&quot;&gt;&lt;path d=&quot;M263,681c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l0 -0
c4.7,-7.3,11,-11,19,-11
H40000v40H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M1001 80h400000v40h-400000z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3027em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.13em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace newline&quot;&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.3669em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:3.0514em;vertical-align:-1.73em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3214em;&quot;&gt;&lt;span style=&quot;top:-2.11em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.2067em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord sqrt&quot;&gt;&lt;span class=&quot;root&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.5593em;&quot;&gt;&lt;span style=&quot;top:-2.844em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size1 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.2067em;&quot;&gt;&lt;span class=&quot;svg-align&quot; style=&quot;top:-3.8em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.8em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot; style=&quot;padding-left:1em;&quot;&gt;&lt;span class=&quot;mop&quot;&gt;&lt;span class=&quot;mop op-symbol small-op&quot; style=&quot;position:relative;top:0em;&quot;&gt;∏&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8043em;&quot;&gt;&lt;span style=&quot;top:-2.4003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mrel mtight&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.2029em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2997em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.1667em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.9859em;&quot;&gt;&lt;span style=&quot;top:-2.655em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.05764em;&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3448em;&quot;&gt;&lt;span style=&quot;top:-2.3567em;margin-left:0em;margin-right:0.0714em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.13889em;&quot;&gt;REF&lt;/span&gt;&lt;span class=&quot;mpunct mtight&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2822em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.5075em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.05764em;&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3448em;&quot;&gt;&lt;span style=&quot;top:-2.3567em;margin-left:0em;margin-right:0.0714em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.07847em;&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;mpunct mtight&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2822em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.5425em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.1667em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.8em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;hide-tail&quot; style=&quot;min-width:1.02em;height:1.88em;&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;400em&quot; height=&quot;1.88em&quot; viewBox=&quot;0 0 400000 1944&quot; preserveAspectRatio=&quot;xMinYMin slice&quot;&gt;&lt;path d=&quot;M983 90
l0 -0
c4,-6.7,10,-10,18,-10 H400000v40
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M1001 80h400000v40h-400000z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6333em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.4367em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.2067em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.8837em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.2067em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.73em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt; &lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace newline&quot;&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.3669em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.84em;vertical-align:-0.5845em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord sqrt&quot;&gt;&lt;span class=&quot;root&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6179em;&quot;&gt;&lt;span style=&quot;top:-2.9026em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size1 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.2555em;&quot;&gt;&lt;span class=&quot;svg-align&quot; style=&quot;top:-3.8em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.8em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot; style=&quot;padding-left:1em;&quot;&gt;&lt;span class=&quot;mop&quot;&gt;&lt;span class=&quot;mop op-symbol small-op&quot; style=&quot;position:relative;top:0em;&quot;&gt;∏&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8043em;&quot;&gt;&lt;span style=&quot;top:-2.4003em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mrel mtight&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.2029em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2997em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.1667em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.9859em;&quot;&gt;&lt;span style=&quot;top:-2.655em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.05764em;&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3448em;&quot;&gt;&lt;span style=&quot;top:-2.3567em;margin-left:0em;margin-right:0.0714em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.07847em;&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;mpunct mtight&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2822em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.5075em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.05764em;&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3448em;&quot;&gt;&lt;span style=&quot;top:-2.3567em;margin-left:0em;margin-right:0.0714em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.5em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size3 size1 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.13889em;&quot;&gt;REF&lt;/span&gt;&lt;span class=&quot;mpunct mtight&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2822em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.5425em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.2155em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3.8em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;hide-tail&quot; style=&quot;min-width:1.02em;height:1.88em;&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;400em&quot; height=&quot;1.88em&quot; viewBox=&quot;0 0 400000 1944&quot; preserveAspectRatio=&quot;xMinYMin slice&quot;&gt;&lt;path d=&quot;M983 90
l0 -0
c4,-6.7,10,-10,18,-10 H400000v40
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M1001 80h400000v40h-400000z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.5845em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;h3&gt;Amdahl&apos;s law&lt;/h3&gt;
&lt;p&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;Execution\;time\;after\;improvement&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.05764em;&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ro&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03588em;&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;y&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;v&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;E&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;= \frac{Execution\;time\;affected\;by\;improvement}{Amount\;of\;improvement} + Execution\;time\;unaffected&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.3669em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.4133em;vertical-align:-0.4811em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.9322em;&quot;&gt;&lt;span style=&quot;top:-2.655em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;ro&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.03588em;&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.4461em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.05764em;&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.10764em;&quot;&gt;ff&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.03588em;&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;ro&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.03588em;&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.4811em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.05764em;&quot;&gt;E&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;na&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;ff&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ec&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Design principles 1~3 of MIPS ISA]]></title><description><![CDATA[contents: 0-1. CA Intro MIPS ISA What is MIPS ISA Microprocessor without Interlocked Pipelined Stages A kind of ISA Design principles…]]></description><link>https://minjun.blog/2-1. Designing principles 1~3 of MIPS ISA/</link><guid isPermaLink="false">https://minjun.blog/2-1. Designing principles 1~3 of MIPS ISA/</guid><pubDate>Mon, 22 Jul 2024 16:40:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;MIPS ISA&lt;/h2&gt;
&lt;h3&gt;What is MIPS ISA&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Microprocessor without Interlocked Pipelined Stages&lt;/li&gt;
&lt;li&gt;A kind of ISA&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Design principles&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Simplicity favors regularity&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Smaller is faster&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Make the common case fast&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;Design Principle 1&lt;/h2&gt;
&lt;h3&gt;Simplicity favors regularity&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Regularity&lt;/strong&gt;: all MIPS arithmetic instructions include &lt;strong&gt;a single operation &amp;#x26; three operands&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Regularity makes implementation simpler&lt;/li&gt;
&lt;li&gt;Simplicity enables higher performance at lower cost&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Examples&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;add a, b, c
&lt;ul&gt;
&lt;li&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;a = b + c&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4306em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7778em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4306em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;sub a, a, d
&lt;ul&gt;
&lt;li&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;a = a - d&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4306em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Design Principle 2&lt;/h2&gt;
&lt;h3&gt;Smaller is faster&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Operands of MIPS arithmetic instructions must be chosen in &lt;strong&gt;a small number of registers&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Register&lt;/strong&gt;: Fast locations for data&lt;/li&gt;
&lt;li&gt;32 32-bit registers in MIPS&lt;/li&gt;
&lt;li&gt;32 is &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^5&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;5&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; that can be represented by using 5 bits&lt;img src=&quot;/attachments/registers.jpg&quot; alt=&quot;registers.jpg&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Practice 1&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;C code:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c&quot;&gt;&lt;pre class=&quot;language-c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;f &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;g &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; h&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; j&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Compiled MIPS assembly language code:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;add $t0, $s1, $s2
add $t1, $s3, $s4
sub $s0, $t0, $t1&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Memory instruction&lt;/h2&gt;
&lt;h3&gt;Memory organization&lt;/h3&gt;
&lt;p&gt;keep a small amount data in &lt;strong&gt;registers&lt;/strong&gt; and other remaining, complex data in &lt;strong&gt;memory&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Load&lt;/strong&gt; values from memory into registers&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Store&lt;/strong&gt; results from registers to memory&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Address&lt;/h3&gt;
&lt;p&gt;A memory address is an index to the memory array, starting at 0
MIPS uses byte addressing (Each address identifies an 8-bit byte)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;But&lt;/strong&gt;, most data items are larger than a byte. So, they use &quot;&lt;strong&gt;words&lt;/strong&gt;&quot;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In MIPS, a ward is 32 bits&lt;/li&gt;
&lt;li&gt;Registers also hold 32-bit of data&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Alignment restrictions&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;The start address of each data should be multiple of N, where N is the size of the data&lt;/li&gt;
&lt;li&gt;In MIPS, words must start at a addresses that are multiples of 4&lt;/li&gt;
&lt;li&gt;Some data items use one or two bytes (halfword)&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Byte ordering&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Big endian(&lt;strong&gt;MIPS&lt;/strong&gt;): place the most significant byte first and the least significant byte last&lt;/li&gt;
&lt;li&gt;Little endian: place the least significant byte first and the most significant byte last  &lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Load/Store&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;lw reg1 offset(reg2)&lt;/strong&gt;: Load 32-bit word from the memory address reg2 + offset into reg1&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;sw reg1 offset(reg2)&lt;/strong&gt;: Store 32-bit word in reg1 at the memory address reg2 + offset&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lh/sh&lt;/strong&gt; and &lt;strong&gt;lb/sb&lt;/strong&gt; instructions load/store halfwords and 8-bit of data&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Practice 2&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;C code:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c&quot;&gt;&lt;pre class=&quot;language-c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;g &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; h &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; A&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;A is an array of 4-bytes words&lt;/li&gt;
&lt;li&gt;The value of g and h are in &lt;code class=&quot;language-text&quot;&gt;$s1&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;$s2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The base address of A is in &lt;code class=&quot;language-text&quot;&gt;$s3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Compiled MIPS assembly language code:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;lw $t0, 32($s3)
add $s1, $s2, $t0&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Practice 2&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;C code:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c&quot;&gt;&lt;pre class=&quot;language-c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;A&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; h&lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; A&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;A is an array of 4-bytes words&lt;/li&gt;
&lt;li&gt;The value of h is in &lt;code class=&quot;language-text&quot;&gt;$s2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;The base address of A is in &lt;code class=&quot;language-text&quot;&gt;$s3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Compiled MIPS assembly language code:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;lw $t0, 32($s3)
add $t0, $s2, $t0
sw $t0, 48($s3)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Practice 3&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;C code:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c&quot;&gt;&lt;pre class=&quot;language-c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;f &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;g &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; h&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; j&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;f, g, and h are in &lt;code class=&quot;language-text&quot;&gt;$s0&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;$s1&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;$2&lt;/code&gt; respectively&lt;/li&gt;
&lt;li&gt;Halfwords i and j are sequentially stored in memory&lt;/li&gt;
&lt;li&gt;The start address of i is stored in &lt;code class=&quot;language-text&quot;&gt;$s3&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Compiled MIPS assembly language code:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;add $t0, $s1, $s2
lh $t1, 0($s3)
lh $t2, 2($s3)
add $t3, $t1, $t2
sub $s2, $t0, $t3&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Design Principle 3&lt;/h2&gt;
&lt;h3&gt;Make the common case fast&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Common case :&lt;/strong&gt; a program uses a small constant in an operation many times&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Solution: support&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;16-bit immediate operands&lt;/strong&gt; for handling the constants&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;no need to access memory to load the constants&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;addi $t0, $t0, 4&lt;/code&gt; : addi is an add immediate instruction&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MIPS register 0 (&lt;code class=&quot;language-text&quot;&gt;$zero&lt;/code&gt;)&lt;/strong&gt; contains the constant 0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;add $t0, $t1, $zero&lt;/code&gt; : move values between two registers &lt;code class=&quot;language-text&quot;&gt;$t0&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;t1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Practice 4&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;C code:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;c&quot;&gt;&lt;pre class=&quot;language-c&quot;&gt;&lt;code class=&quot;language-c&quot;&gt;f &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; A&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;A&lt;/code&gt; is an array of bytes and its base address is stored in &lt;code class=&quot;language-text&quot;&gt;$s0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;f&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;i&lt;/code&gt; are stored in &lt;code class=&quot;language-text&quot;&gt;$s1&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;$s2&lt;/code&gt; respectively&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Compiled MIPS assembly language code:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;lb $t0, 10($s0)
sub $t1, $t0, $s2
addi $s1, $t1, 4&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2&gt;Summary: MIPS ISA&lt;/h2&gt;
&lt;h3&gt;Key underlying design principles&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Design principle 1. Simplicity favors regularity
&lt;ul&gt;
&lt;li&gt;All MIPS arithmetic instructions include a single operation &amp;#x26; three operands&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Design principle 2. Smaller is faster
&lt;ul&gt;
&lt;li&gt;Operands of MIPS arithmetic instructions must be chosen in a small number of registers&lt;/li&gt;
&lt;li&gt;MIPS keeps more complex data in memory and supports data transfer between memory and registers&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Design principle 3. Make the common case faster
&lt;ul&gt;
&lt;li&gt;Support 16-bit immediate operands for handling small constants + &lt;code class=&quot;language-text&quot;&gt;$zero&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[MIPS memory allocation & addressing]]></title><description><![CDATA[contents: 0-1. CA Intro MIPS memory allocation To avoid the overlap for managing memory, we use stack, heap, and static space. Stack During…]]></description><link>https://minjun.blog/2-5. MIPS memory allocation &amp; addressing/</link><guid isPermaLink="false">https://minjun.blog/2-5. MIPS memory allocation &amp; addressing/</guid><pubDate>Thu, 08 Aug 2024 12:40:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;MIPS memory allocation&lt;/h2&gt;
&lt;p&gt;To avoid the overlap for managing memory, we use stack, heap, and static space.&lt;/p&gt;
&lt;h3&gt;Stack&lt;/h3&gt;
&lt;p&gt;During the procedure call, both registers and local variables are stored on stack. &lt;/br&gt;&lt;/p&gt;
&lt;p&gt;We call the segment of the stack &lt;strong&gt;activation record&lt;/strong&gt; or &lt;strong&gt;procedure frame&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The frame pointer (&lt;code class=&quot;language-text&quot;&gt;$fp&lt;/code&gt;) points to the first word of the frame&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;During the execution of a procedure, &lt;code class=&quot;language-text&quot;&gt;$fp&lt;/code&gt; is stable. So, it is used to reference variables&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/01.jpg&quot; alt=&quot;01.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Activation record&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - managed in a stack from high address to low address&lt;/p&gt;
&lt;h3&gt;Heap&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dynamically-allocated data&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - managed in a heap from low addresses to high addresses&lt;/p&gt;
&lt;h3&gt;Static space&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Global variables&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - assigned a fixed address&lt;/p&gt;
&lt;p&gt;    - statically allocated&lt;/p&gt;
&lt;p&gt;    - all reference to a global variable point to the same object&lt;/p&gt;
&lt;p&gt;    - it cannot be stored in an activation record&lt;/p&gt;
&lt;h3&gt;Code &amp;#x26; Data in memory&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/02.jpg&quot; alt=&quot;02.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;These addresses are only a software convention, and not part of the MIPS architecture.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The stack pointer (&lt;code class=&quot;language-text&quot;&gt;$sp&lt;/code&gt;) is initialized to &lt;code class=&quot;language-text&quot;&gt;7fff fffc&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4861em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and grows down toward the data segment&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;At the other end, the program code starts at &lt;code class=&quot;language-text&quot;&gt;0040 0000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4861em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - From &lt;code class=&quot;language-text&quot;&gt;0000 0000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4861em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; to &lt;code class=&quot;language-text&quot;&gt;0040 0000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4861em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is just reserved&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The static data starts at &lt;code class=&quot;language-text&quot;&gt;1000 0000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4861em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The global pointer (&lt;code class=&quot;language-text&quot;&gt;$gp&lt;/code&gt;) is set to an address to make it easy to access data, and initialized to to &lt;code class=&quot;language-text&quot;&gt;1000 8000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4861em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; so that it can access fromm &lt;code class=&quot;language-text&quot;&gt;1000 0000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4861em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; to &lt;code class=&quot;language-text&quot;&gt;1000 ffff&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4861em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; using the positive and negative 16-bit offsets from &lt;code class=&quot;language-text&quot;&gt;$gp&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Dynamic data is grows up toward the stack in an area called heap&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Addressing mode&lt;/h2&gt;
&lt;p&gt;After we decode instructions, we will perform corresponding tasks. &lt;/br&gt;&lt;/p&gt;
&lt;p&gt;At this time, we need to &lt;strong&gt;access data or instructions which can be stored in instructions, registers or memory.&lt;/strong&gt;&lt;/p&gt;
&lt;h3&gt;1. Immediate addressing (with immediate operands)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;by decoding instructions, we can get data &lt;strong&gt;directly&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;last 16 bits are used to represent data&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;the operand is 16 bits of the instructions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;don&apos;t need to access other place&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/03.jpg&quot; alt=&quot;03.jpg&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Supporting 32-bit constants&lt;/h4&gt;
&lt;p&gt;Sometimes, we need to use a 32-bit constants&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;lui&lt;/code&gt; instruction&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - transfers the 16 bit immediate constant field value into the leftmost 16 bits of the register&lt;/p&gt;
&lt;p&gt;    - fills the lower 16 bits with &lt;code class=&quot;language-text&quot;&gt;0&lt;/code&gt;s&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;ori&lt;/code&gt; instruction&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - fills the lower 16 bits with given data&lt;/p&gt;
&lt;/br&gt;
&lt;h3&gt;2. Register addressing (with register operands)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;use 5 bits to represent register number from 0 to 31&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - because there are 32 registers&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;work like a pointer&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/04.jpg&quot; alt=&quot;04.jpg&quot;&gt;&lt;/p&gt;
&lt;/br&gt;
&lt;h3&gt;3. Base addressing (with data transfer instructions)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;rs&lt;/code&gt; points base address, and last 16 bits represent offset&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;16 bits can represent from &lt;code class=&quot;language-text&quot;&gt;-2&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mn&gt;15&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;^{15}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;15&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; to &lt;code class=&quot;language-text&quot;&gt;2&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mn&gt;15&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;^{15}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;15&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;language-text&quot;&gt;-1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;2&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mn&gt;15&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;^{15}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;15&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = &lt;code class=&quot;language-text&quot;&gt;8000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4861em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;$gp&lt;/code&gt; always points &lt;code class=&quot;language-text&quot;&gt;1000 8000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4861em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; which means that, with offset it can access every statically-allocated space&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/05.jpg&quot; alt=&quot;05.jpg&quot;&gt;&lt;/p&gt;
&lt;/br&gt;
&lt;h3&gt;4. PC-relative addressing (with branch instructions)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;there is no base address like data transfer instructions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Assumption: most branch targets are near from the current instruction&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In HW implementation, &lt;code class=&quot;language-text&quot;&gt;PC&lt;/code&gt; is already incremented by 4 before computing the current instruction&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;PC&lt;/code&gt; points next instructions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;all instructions are stored in an address that is a multiple of 4.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - by alignment restrictions, it ends with last 2 bits &lt;code class=&quot;language-text&quot;&gt;00&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;    - it increments by 4 which is &lt;code class=&quot;language-text&quot;&gt;00&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;    - it always ends with &lt;code class=&quot;language-text&quot;&gt;00&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to save space, MIPS does not store last 2 bits&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - to calculate offset, we have to multiply by 4&lt;/p&gt;
&lt;p&gt;    - actually it can represent up to 18 bits&lt;/p&gt;
&lt;p&gt;    - 18 bits can represent from &lt;code class=&quot;language-text&quot;&gt;PC-2&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mn&gt;17&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;^{17}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;17&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; to &lt;code class=&quot;language-text&quot;&gt;PC+2&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mn&gt;17&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;^{17}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;17&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;code class=&quot;language-text&quot;&gt;-4&lt;/code&gt;
&lt;img src=&quot;/attachments/06.jpg&quot; alt=&quot;06.jpg&quot;&gt;&lt;/p&gt;
&lt;/br&gt;
&lt;h3&gt;5. Pseudo-direct addressing (with branch instructions)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;if branch targets are far from the current instruction (over 16 bits)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;last 26 bits are used to represent the address of label&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;skip last 2 bits like PC-relative addressing&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - actually it can represent up to 28 bits&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;code is stored from &lt;code class=&quot;language-text&quot;&gt;0040 0000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4861em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; to &lt;code class=&quot;language-text&quot;&gt;1000 0000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4861em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;1000 0000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4861em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; = &lt;code class=&quot;language-text&quot;&gt;0001 0000 0000 0000 0000 0000 0000 0000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4511em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3011em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;    - which means that we have to access up to &lt;code class=&quot;language-text&quot;&gt;0000 1111 1111 1111 1111 1111 1111 1100&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4511em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3011em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;        - always start with &lt;code class=&quot;language-text&quot;&gt;0000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4511em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3011em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; and end with &lt;code class=&quot;language-text&quot;&gt;00&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4511em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3011em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;        - other 26 bits is important&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;So, with 26 bits we can represent up to 28 bits and concatenate &lt;code class=&quot;language-text&quot;&gt;0000&lt;/code&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4511em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3011em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; to the front&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/07.jpg&quot; alt=&quot;07.jpg&quot;&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Representing Instructions in computer]]></title><description><![CDATA[contents: 0-1. CA Intro Common HW design for MIPS ISA HW design.jpg CPU, register, and memory Control unit (CU) directs the operation of the…]]></description><link>https://minjun.blog/2-3. Representing Instructions in computer/</link><guid isPermaLink="false">https://minjun.blog/2-3. Representing Instructions in computer/</guid><pubDate>Wed, 31 Jul 2024 15:43:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Common HW design for MIPS ISA&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/HW%20design.jpg&quot; alt=&quot;HW design.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CPU, register, and memory&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Control unit (CU) directs the operation of the processor&lt;/li&gt;
&lt;li&gt;Arithmetic &amp;#x26; logic unit (ALU) does the operation&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;$0, ..., $31&lt;/code&gt; hold the value that will be used in the operation (called general purpose register)&lt;/li&gt;
&lt;li&gt;Program counter (PC) contains the memory address of the instruction will be executed&lt;/li&gt;
&lt;li&gt;Instruction register (IR) contains the current instruction&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Execution of the instruction&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Step 1 (fetch): CU says &quot;load the instruction from the memory address in PC to IR&quot;&lt;/li&gt;
&lt;li&gt;Step 2 (decode): CU says &quot;the instruction stored in IR means &lt;code class=&quot;language-text&quot;&gt;ADD $s0, $s1, $s2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Step 2 (execute): ALU does the add operation with the values in &lt;code class=&quot;language-text&quot;&gt;$s1&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;$s2&lt;/code&gt; and stores the computation result in &lt;code class=&quot;language-text&quot;&gt;$s0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Operation&lt;/h2&gt;
&lt;h3&gt;Arithmetic operations&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Instructions for arithmetic&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operation&lt;/th&gt;
&lt;th&gt;C    &lt;/th&gt;
&lt;th&gt;Java&lt;/th&gt;
&lt;th&gt;MIPS assembly language&lt;/th&gt;
&lt;th&gt;Example          &lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Add      &lt;/td&gt;
&lt;td&gt;+    &lt;/td&gt;
&lt;td&gt;+    &lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;add&lt;/code&gt; (R), &lt;code class=&quot;language-text&quot;&gt;addi&lt;/code&gt; (I)  &lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;add $t0, $t1, $t2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Subtract  &lt;/td&gt;
&lt;td&gt;-    &lt;/td&gt;
&lt;td&gt;-    &lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;sub&lt;/code&gt; (R)              &lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;sub $t0, $t1, $t2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Logical operations&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Instructions for bitwise manipulation&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operation&lt;/th&gt;
&lt;th&gt;C&lt;/th&gt;
&lt;th&gt;Java&lt;/th&gt;
&lt;th&gt;MIPS assembly language&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Bitwise AND&lt;/td&gt;
&lt;td&gt;&amp;#x26;&lt;/td&gt;
&lt;td&gt;&amp;#x26;&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;and&lt;/code&gt;(R), &lt;code class=&quot;language-text&quot;&gt;andi&lt;/code&gt;(I)&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;and $t0, $t1, $t2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bitwise OR&lt;/td&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;td&gt;|&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;or&lt;/code&gt; (R), &lt;code class=&quot;language-text&quot;&gt;ori&lt;/code&gt;(I)&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;or $t0, $t1, $t2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bitwise NOR&lt;/td&gt;
&lt;td&gt;~&lt;/td&gt;
&lt;td&gt;~&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;nor&lt;/code&gt;(R)&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;nor $t0, $t1, $t2&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;MIPS has no NOT instruction
Instead, it has &lt;strong&gt;NOR R-type&lt;/strong&gt; instruction&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a NOR b == NOT (a OR b)&lt;/li&gt;
&lt;li&gt;But, we can do the NOT operation with NOR: &lt;code class=&quot;language-text&quot;&gt;nor $t0, $t1, $zero!&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/nor.jpg&quot; alt=&quot;nor.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Shift operations&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;Operation&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;C    &lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Java&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;MIPS assembly language&lt;/th&gt;
&lt;th align=&quot;left&quot;&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Shift left  &lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&amp;#x3C;&amp;#x3C;  &lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&amp;#x3C;&amp;#x3C;&amp;#x3C;  &lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;sll&lt;/code&gt; (R)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;sll $s1, $s2, 10 ($s1 = $s2 &amp;lt;&amp;lt; 10)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;left&quot;&gt;Shift right&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&gt;&gt;  &lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&gt;&gt;&gt;  &lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;srl&lt;/code&gt; (R)&lt;/td&gt;
&lt;td align=&quot;left&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;srl $s1, $s2, 10 ($s1 = $s2 &gt;&gt; 10)&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/shift%20operation.jpg&quot; alt=&quot;shift operation.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;shamt: how many positions to shift&lt;/li&gt;
&lt;li&gt;Shift left/right logical (sll / srl)
&lt;ul&gt;
&lt;li&gt;Shift left/right and fill with 0 bits&lt;/li&gt;
&lt;li&gt;(unsigned only) sll with i bits = multiply by &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^i&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8247em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8247em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;(unsigned only) srl with i bits = divide by &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^i&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8247em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8247em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Conditional operations&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Operation&lt;/th&gt;
&lt;th&gt;MIPS assembly language&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Conditional branch&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;beq&lt;/code&gt;(I)&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;beq $t0, $t1, LABEL&lt;/code&gt; (if &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;t0 == &lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;==&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;t1, goto LABEL)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;bne&lt;/code&gt;(I)&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;bne $t0, $t1, LABEL&lt;/code&gt; (if &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mo stretchy=&quot;false&quot;&gt;!&lt;/mo&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;t0 != &lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;t1, goto LABEL)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unconditional branch&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;j&lt;/code&gt;(I)&lt;/td&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;j LABEL&lt;/code&gt; (goto LABEL)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/bne.jpg&quot; alt=&quot;bne.jpg&quot;&gt;
&lt;img src=&quot;/attachments/j-format.jpg&quot; alt=&quot;j-format.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Instructions for making decisions&lt;/strong&gt;
Usually combined with goto statements and labels
there are no branch instructions like blt (less than) and bge (greater than or equal to)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Why?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Handling &amp;#x3C;, &gt;, &amp;#x3C;=, &gt;=, ... is slower and more complicate than =, !=&lt;/li&gt;
&lt;li&gt;It will cause increase of instruction count and clock period or CPI&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Instead, MIPS provides others&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;operation&lt;/th&gt;
&lt;th&gt;MIPS assembly language&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Set on less than&lt;/td&gt;
&lt;td&gt;slt(R), slti(I)&lt;/td&gt;
&lt;td&gt;slt &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;t0, &lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8389em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;t1, &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;t2 (if &lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;t1 &amp;#x3C; &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo separator=&quot;true&quot;&gt;,&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;t2, &lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8389em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mpunct&quot;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;t0 = 1; else $t0 = 0)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;slt is used in combination with beq and bne&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;slt $t0, $t1, $t2
bne $t0, $zero, LABEL
beq $t0, $zero, LABEL&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content:encoded></item><item><title><![CDATA[Multiplication]]></title><description><![CDATA[contents: 0-1. CA Intro Multiplication If a multiplicand and a multiplier have m and n digits, the product has at most m + n digits MIPS…]]></description><link>https://minjun.blog/3-2. Multiplication/</link><guid isPermaLink="false">https://minjun.blog/3-2. Multiplication/</guid><pubDate>Wed, 14 Aug 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Multiplication&lt;/h2&gt;
&lt;p&gt;If a multiplicand and a multiplier have &lt;strong&gt;m&lt;/strong&gt; and &lt;strong&gt;n&lt;/strong&gt; digits, the product has at most &lt;strong&gt;m + n&lt;/strong&gt; digits&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MIPS-based computers use &lt;strong&gt;32-bit&lt;/strong&gt; word for the arithmetic operations&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The product in MIPS-based computers has at most &lt;strong&gt;64 digits&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/br&gt;
&lt;h3&gt;Optimized version of the multiplication HW&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;32-bit multiplicand register / ALU&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;64-bit product register (multiplier shares a register with product)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;HI&lt;/code&gt;: most significant 32 bits&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;LO&lt;/code&gt;: least significant 32 bits&lt;/p&gt;
&lt;p&gt;    - Actually, there is one more bit in the left of the product register to hold the carry out of the adder&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/01%202.jpg&quot; alt=&quot;01 2.jpg&quot;&gt;&lt;/p&gt;
&lt;/br&gt;
&lt;h3&gt;Settings&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;0 is stored in the left half of the product register&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The multiplier value is loaded into the right half of the product register&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The multiplicand value is loaded into the multiplicand register&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/br&gt;
&lt;h3&gt;Multiplication Algorithm&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/02%202.jpg&quot; alt=&quot;02 2.jpg&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Example&lt;/h4&gt;
&lt;p&gt;When N = 4 (4-bit ALU / multiplicand, 8-bit product), &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2 \times 3&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7278em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;should be &lt;strong&gt;repeated as many bits as it is&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/03%201.jpg&quot; alt=&quot;03 1.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Signed multiplication&lt;/h3&gt;
&lt;p&gt;Do multiplication after converting both multiplicand &amp;#x26; multiplier to positives&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For 31 iterations (except a sign bit)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After the multiplication, negate the result (if it is required)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Better solution: Booth&apos;s Algorithm&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Supports multiplication of two&apos;s complement signed numbers in a more efficient way&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Requires almost same hardware with the multiplication of unsigned numbers&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/br&gt;
&lt;h3&gt;Instructions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;mult rs, rt / multu rs, rt&lt;/code&gt; (rs: multiplicand, rt: multiplier)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - The result (product) is stored in &lt;code class=&quot;language-text&quot;&gt;HI&lt;/code&gt; / &lt;code class=&quot;language-text&quot;&gt;LO&lt;/code&gt;
&lt;img src=&quot;/attachments/04%201.jpg&quot; alt=&quot;04 1.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;mfhi rd / mflo rd&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Move from &lt;code class=&quot;language-text&quot;&gt;HI&lt;/code&gt; / &lt;code class=&quot;language-text&quot;&gt;LO&lt;/code&gt; to rd
&lt;img src=&quot;/attachments/05%201.jpg&quot; alt=&quot;05 1.jpg&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Example: &lt;code class=&quot;language-text&quot;&gt;mult $t0, $ t1&lt;/code&gt;&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;$t0&lt;/code&gt; (multiplicand) is used as the Multiplicand register&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Initially, the value in &lt;code class=&quot;language-text&quot;&gt;$t1&lt;/code&gt; (multiplier) is loaded into &lt;code class=&quot;language-text&quot;&gt;LO&lt;/code&gt; register&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then, do the multiplication and store the 64-bit product to &lt;code class=&quot;language-text&quot;&gt;HI&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;LO&lt;/code&gt; registers&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Supporting procedures in computer HW]]></title><description><![CDATA[contents: 0-1. CA Intro Procedures Functions in a program Procedures do calling / returning with other procedures A procedure (caller) calls…]]></description><link>https://minjun.blog/2-4. Supporting procedures in computer HW/</link><guid isPermaLink="false">https://minjun.blog/2-4. Supporting procedures in computer HW/</guid><pubDate>Wed, 07 Aug 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Procedures&lt;/h2&gt;
&lt;h3&gt;Functions in a program&lt;/h3&gt;
&lt;p&gt;Procedures do calling / returning with other procedures&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A procedure (caller) calls another procedure (callee)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The callee returns values to caller&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Calling / returning process&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The caller passes input arguments and the return address to the callee&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The caller transfers control to the callee&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The callee performs its operations with the given input arguments&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The callee passes the return values to the caller&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The callee transfers control to the caller (Return to the given return address)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The caller restores the saved things&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;The way to pass values&lt;/h3&gt;
&lt;p&gt;Use registers for passing arguments, return address, and return values
&lt;img src=&quot;/attachments/register%20role.jpg&quot; alt=&quot;register role.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;But, what if different procedures share the same registers?
&lt;strong&gt;Use stacks to store all the information for operating each procedure&lt;/strong&gt;
Stacks are kept in memory&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The register &lt;code class=&quot;language-text&quot;&gt;$sp&lt;/code&gt; points the top-of-stack in memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;By convention, stack grows towards lower addresses&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Register saving&lt;/h3&gt;
&lt;p&gt;The values of some registers must be preserved on call
It must be possible to recover the values on those registers after calling / returning is completed
&lt;img src=&quot;/attachments/register%20role%202.jpg&quot; alt=&quot;register role 2.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;If a callee uses preserved registers, the callee must&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Save the values of the registers on its stack &lt;strong&gt;after calling&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Restore the saved values &lt;strong&gt;before returning&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If a caller needs to keep the values in non-preserved registers, the caller must&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Save the values on its stack &lt;strong&gt;before calling&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Restore the saved values &lt;strong&gt;after returning&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Instructions for procedure calls&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;jal PROCEDURE_LABEL&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jump And Link&lt;/li&gt;
&lt;li&gt;The return address of a caller (the address of following instruction) put in &lt;code class=&quot;language-text&quot;&gt;$ra&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Jump to the target address (&lt;code class=&quot;language-text&quot;&gt;PROCEDURE_LABEL&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;jr $ra&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jump Register&lt;/li&gt;
&lt;li&gt;Jump to the address stored in &lt;code class=&quot;language-text&quot;&gt;$ra&lt;/code&gt; (other registers can also be used as an operand)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Push&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;no-line-numbers language-bash&quot;&gt;

&lt;code class=&quot;prose-code:text-yellow-400

            prose-code:text-sm

            prose-code:font-normal&quot;&gt;addi $sp, $sp, -4

sw $t0, 0($sp)

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Push the data stored in &lt;code class=&quot;language-text&quot;&gt;$t0&lt;/code&gt; into the top-of-stack&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Pop&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&quot;no-line-numbers language-bash&quot;&gt;

&lt;code class=&quot;prose-code:text-yellow-400

            prose-code:text-sm

            prose-code:font-normal&quot;&gt;lw $t0, 0($sp)

addi $sp, $sp, 4

&lt;/code&gt;&lt;/pre&gt;
&lt;ul&gt;
&lt;li&gt;Pop the data stored in top-of-stack and store it to &lt;code class=&quot;language-text&quot;&gt;$t0&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Processor Overview]]></title><description><![CDATA[contents: 0-1. CA Intro Case I will focus on handling a subset of core MIPS instructions (MIPS subset) The arithmetic-logical instructions…]]></description><link>https://minjun.blog/4-1. Processor Overview/</link><guid isPermaLink="false">https://minjun.blog/4-1. Processor Overview/</guid><pubDate>Thu, 15 Aug 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Case&lt;/h2&gt;
&lt;p&gt;I will focus on handling a subset of core MIPS instructions (MIPS subset)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The arithmetic-logical instructions: &lt;code class=&quot;language-text&quot;&gt;add&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;sub&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;and&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;or&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;slt&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The memory-reference instructions: &lt;code class=&quot;language-text&quot;&gt;lw&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;sw&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The conditional instructions: &lt;code class=&quot;language-text&quot;&gt;beq&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;jump&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Logic design basics&lt;/h2&gt;
&lt;p&gt;In the MIPS implementation, the datapath elements consist of&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Combinational&lt;/strong&gt; elements&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Operate on data values&lt;/p&gt;
&lt;p&gt;    - Given inputs, a combinational element produces outputs&lt;/p&gt;
&lt;p&gt;    - e.g., ALU(Arithmetic Logic Unit), Adder, Multiplexer, AND-gate&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;State (sequential)&lt;/strong&gt; elements&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Contain state&lt;/p&gt;
&lt;p&gt;    - They have some internal storage&lt;/p&gt;
&lt;p&gt;    - e.g., instruction and data memory, registers&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;Combinational elements work with state elements&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Getting inputs from state elements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Giving outputs to state elements&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Clocking methodology&lt;/h2&gt;
&lt;p&gt;When data can be read and written is determined relative to the clock &lt;/br&gt;&lt;/p&gt;
&lt;p&gt;In this book, we assume &lt;strong&gt;&quot;Positive edge-triggered clocking methodology&quot;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Combinational elements works with state elements &lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In a single clock cycle = between clock edges = between rising edges&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;At one rising edge, combinational elements read inputs from state elements&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Before the next rising edge, combinational elements complete operations and produce outputs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;At the next rising edge, state elements are updated with the outputs&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;The longest delay determines clock period&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/01%204.jpg&quot; alt=&quot;01 4.jpg&quot;&gt;&lt;/p&gt;
&lt;/br&gt;
&lt;h3&gt;State elements with two inputs&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;State elements (e.g., registers) take two inputs: update data and a clock signal&lt;/strong&gt; &lt;/br&gt;&lt;/p&gt;
&lt;p&gt;Based on the clock signal, it is determined when to update the data&lt;/p&gt;
&lt;p&gt;In positive edge-triggered clocking methodology, &lt;/br&gt;&lt;/p&gt;
&lt;p&gt;Update the data at rising edges (when the clock signal changes from 0 to 1)
&lt;img src=&quot;/attachments/02%204.jpg&quot; alt=&quot;02 4.jpg&quot;&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;h3&gt;State elements with three inputs&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;State elements take three inputs: update data and a clock signal with write control&lt;/strong&gt; &lt;/br&gt;&lt;/p&gt;
&lt;p&gt;Based on the clock signal and the write control, it is determined when to update the data&lt;/p&gt;
&lt;p&gt;In positive edge-triggered clocking methodology, &lt;/br&gt;&lt;/p&gt;
&lt;p&gt;Update the data at rising edges + &lt;strong&gt;when the write control input is 1&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/03%203.jpg&quot; alt=&quot;03 3.jpg&quot;&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Division]]></title><description><![CDATA[contents: 0-1. CA Intro Division If the length of Dividend and Divisor is M and N,  the length of Quotient  M - N + 1 & the length of…]]></description><link>https://minjun.blog/3-3. Division/</link><guid isPermaLink="false">https://minjun.blog/3-3. Division/</guid><pubDate>Wed, 14 Aug 2024 14:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Division&lt;/h2&gt;
&lt;p&gt;If the length of Dividend and Divisor is &lt;strong&gt;M&lt;/strong&gt; and &lt;strong&gt;N&lt;/strong&gt;, &lt;/br&gt;&lt;/p&gt;
&lt;p&gt;the length of Quotient &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;≦&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\leqq&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.0117em;vertical-align:-0.2558em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel amsrm&quot;&gt;≦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; M - N + 1 &amp;#x26; the length of Remainder &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;≦&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt; \leqq&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.0117em;vertical-align:-0.2558em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel amsrm&quot;&gt;≦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; N&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In MIPS-based computers, 32 bits are used to represent both Dividend and Divisor. &lt;/br&gt;Therefore, the length of both Quotient and Remainder &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;≦&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\leqq&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.0117em;vertical-align:-0.2558em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel amsrm&quot;&gt;≦&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 32&lt;/li&gt;
&lt;/ul&gt;
&lt;/br&gt;
&lt;h3&gt;Optimized version of the division HW&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;32-bit divisor register / ALU&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;64-bit remainder register (dividend and quotient shares a register with remainder)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;HI&lt;/code&gt;: Remainder&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;LO&lt;/code&gt;: Quotient
&lt;img src=&quot;/attachments/01%203.jpg&quot; alt=&quot;01 3.jpg&quot;&gt;&lt;/p&gt;
&lt;/br&gt;
&lt;h3&gt;Settings&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;0 is stored in the left half of the Remainder register&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The value of dividend is loaded into the right half of the Remainder register&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The value of divisor is loaded into the Divisor register&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/br&gt;
&lt;h3&gt;Division Algorithm&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/02%203.jpg&quot; alt=&quot;02 3.jpg&quot;&gt;&lt;/p&gt;
&lt;/br&gt;
&lt;h4&gt;Example&lt;/h4&gt;
&lt;p&gt;When N = 4 (4-bit ALU / divisor, 8-bit product), &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;7&lt;/mn&gt;&lt;mo&gt;÷&lt;/mo&gt;&lt;mn&gt;3&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;7 \div 3&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7278em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;÷&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;should be &lt;strong&gt;repeated as many bits + 1 as it is&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/03%202.jpg&quot; alt=&quot;03 2.jpg&quot;&gt;&lt;/p&gt;
&lt;/br&gt;
&lt;h3&gt;Signed division&lt;/h3&gt;
&lt;p&gt;Do division after converting both divisor &amp;#x26; dividend to positives &lt;/br&gt;&lt;/p&gt;
&lt;p&gt;After the division&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Negate the quotient only if the signs of the divisor and dividend are different&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Remainder&apos;s sign follows Dividend&apos;s sign&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/br&gt;
&lt;h3&gt;Instructions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;div rs, rt / divu rs, rt&lt;/code&gt; : do &lt;code class=&quot;language-text&quot;&gt;$rs&lt;/code&gt; / &lt;code class=&quot;language-text&quot;&gt;$st&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - The result (remainder and quotient) is stored in &lt;code class=&quot;language-text&quot;&gt;HI&lt;/code&gt; / &lt;code class=&quot;language-text&quot;&gt;LO&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;    - No overflow or divide-by-0 checking
&lt;img src=&quot;/attachments/04%202.jpg&quot; alt=&quot;04 2.jpg&quot;&gt;&lt;/p&gt;
&lt;/br&gt;
&lt;h4&gt;Example:&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Initially, the value in &lt;code class=&quot;language-text&quot;&gt;$t0&lt;/code&gt; (dividend) is loaded into the &lt;code class=&quot;language-text&quot;&gt;LO&lt;/code&gt; register&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Initially, &lt;code class=&quot;language-text&quot;&gt;$t&lt;/code&gt; (divisor) is used as the divisor register&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Then, do the division and store the remainder and quotient to &lt;code class=&quot;language-text&quot;&gt;HI&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;LO&lt;/code&gt; registers&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Summary: Design for arithmetic operations&lt;/h2&gt;
&lt;h3&gt;Addition &amp;#x26; Subtraction&lt;/h3&gt;
&lt;p&gt;Use the same HW for addition and subtraction&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;32-bit parallel adder&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Additional XOR operators + subtract bit&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/05%202.jpg&quot; alt=&quot;05 2.jpg&quot;&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;h3&gt;Multiplication &amp;#x26; Division&lt;/h3&gt;
&lt;p&gt;Use the same optimized HW for Multiplication and Division&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A single 32-bit register for multiplicand and divisor&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;A single 32-bit &lt;code class=&quot;language-text&quot;&gt;ALU&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;HI&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;LO&lt;/code&gt; registers for the results of multiplication and division&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/06%201.jpg&quot; alt=&quot;06 1.jpg&quot;&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Controlling a datapath]]></title><description><![CDATA[contents: 0-1. CA Intro Controlling a datapath main control Control signals are derived from given instructions
01 5.jpg  is always being…]]></description><link>https://minjun.blog/4-2. Controlling a datapath/</link><guid isPermaLink="false">https://minjun.blog/4-2. Controlling a datapath/</guid><pubDate>Fri, 16 Aug 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Controlling a datapath&lt;/h2&gt;
&lt;h3&gt;main control&lt;/h3&gt;
&lt;p&gt;Control signals are derived from given instructions
&lt;img src=&quot;/attachments/01%205.jpg&quot; alt=&quot;01 5.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;rs&lt;/code&gt; is always being read&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;rt&lt;/code&gt; is being read except when the instruction is &lt;code class=&quot;language-text&quot;&gt;lw&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - It is for loading&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/02%205.jpg&quot; alt=&quot;02 5.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;ALU control&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Load / store instructions: add&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Branch instructions: subtract&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;R-format instructions: depends on a function field in the instructions&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/03%204.jpg&quot; alt=&quot;03 4.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Main Control Unit determines the &lt;code class=&quot;language-text&quot;&gt;ALUOp&lt;/code&gt; value&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Whatever the &lt;code class=&quot;language-text&quot;&gt;funct&lt;/code&gt; codes are, if the opcode is &lt;code class=&quot;language-text&quot;&gt;lw&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;sw&lt;/code&gt;, or &lt;code class=&quot;language-text&quot;&gt;beq&lt;/code&gt;, ALU fuction is determined automatically&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[A single-cycle datapath]]></title><description><![CDATA[contents: 0-1. CA Intro Single-cyle datapath 01 6.jpg
 02 6.jpg A single-cycle datapath executes instructions in one clock cycle with a…]]></description><link>https://minjun.blog/4-3. A single-cycle datapath/</link><guid isPermaLink="false">https://minjun.blog/4-3. A single-cycle datapath/</guid><pubDate>Sat, 17 Aug 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Single-cyle datapath&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/01%206.jpg&quot; alt=&quot;01 6.jpg&quot;&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/02%206.jpg&quot; alt=&quot;02 6.jpg&quot;&gt;&lt;/p&gt;
&lt;/br&gt;
&lt;p&gt;A single-cycle datapath executes instructions in one clock cycle with a clocking methodology. &lt;/br&gt;&lt;/p&gt;
&lt;p&gt;We will study how this works according to instructions&lt;/p&gt;
&lt;h3&gt;R-format&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/02%207.jpg&quot; alt=&quot;02 7.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;don&apos;t need to access memory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;MemRead&lt;/code&gt; = 0&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;MemtoReg&lt;/code&gt; = 0&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;MemWrite&lt;/code&gt; = 0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;have to update value of &lt;code class=&quot;language-text&quot;&gt;rd&lt;/code&gt; register&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;RegDst&lt;/code&gt; = 1&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;RegWrite&lt;/code&gt; = 1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PC just have to be updated +4&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;branch&lt;/code&gt; = 0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ALU control determines the arithmetic type according to &lt;code class=&quot;language-text&quot;&gt;ALUOp&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;func code&lt;/code&gt; of instruction&lt;/li&gt;
&lt;/ul&gt;
&lt;/br&gt;
&lt;h3&gt;Load&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/03%205.jpg&quot; alt=&quot;03 5.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;need to access memory and read data&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;MemRead&lt;/code&gt; = 1&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;MemtoReg&lt;/code&gt; = 1&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;MemWrite&lt;/code&gt; = 0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;have to get value from memory to &lt;code class=&quot;language-text&quot;&gt;rs&lt;/code&gt; field (destination)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;RegDst&lt;/code&gt; = 0 (&lt;code class=&quot;language-text&quot;&gt;rs&lt;/code&gt; to destination)&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;RegWrite&lt;/code&gt; = 1&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PC just have to be updated +4&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;branch&lt;/code&gt; = 0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;ALU control determines the arithmetic type according to &lt;code class=&quot;language-text&quot;&gt;ALUOp&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;offset is extended from 16-bit to 32-bit by Sign-extend unit and added with Read data 1 (base addr)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/br&gt;
&lt;h3&gt;Branch-on-equal&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/04%203.jpg&quot; alt=&quot;04 3.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;don&apos;t need to access memory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;MemRead&lt;/code&gt; = 0&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;MemtoReg&lt;/code&gt; = 0&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;MemWrite&lt;/code&gt; = 0&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Calculate target address&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - extend the offset to 32 bit and shift left twice (multiply 4)&lt;/p&gt;
&lt;p&gt;    - add with &lt;code class=&quot;language-text&quot;&gt;PC + 4&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;RegDst&lt;/code&gt; doesn&apos;t matter&lt;/li&gt;
&lt;/ul&gt;
&lt;/br&gt;
&lt;h3&gt;More about: jump&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/05%203.jpg&quot; alt=&quot;05 3.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Calculate target address&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - offset is extended to 28-bit&lt;/p&gt;
&lt;p&gt;    - concatenate with &lt;code class=&quot;language-text&quot;&gt;0000&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Jump signal = 1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Pipelining overview]]></title><description><![CDATA[contents: 0-1. CA Intro Because the longest delay determines clock period, a single-cycle implementation is not used today  It violates…]]></description><link>https://minjun.blog/4-4. Pipelining overview/</link><guid isPermaLink="false">https://minjun.blog/4-4. Pipelining overview/</guid><pubDate>Sun, 18 Aug 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Because the longest delay determines clock period, a single-cycle implementation is not used today &lt;br&gt;&lt;/p&gt;
&lt;p&gt;It violates &lt;strong&gt;&quot;make the common case fast&quot;&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Pipelining overview&lt;/h2&gt;
&lt;p&gt;With the pipelined approach, the speed up can be equal to the number of stages in an ideal case&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A single task is divided into N stages&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each stage takes teh same amount of time T&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;There are M tasks, where M is large enough&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To complete all the tasks&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In non-pipelined approach, we need &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;N \times M \times T&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; times&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;In pipelined approach, we need &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mo&gt;≈&lt;/mo&gt;&lt;mi&gt;M&lt;/mi&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;(N + M - 1) \times T \approx M \times T&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;≈&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;M&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;T&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; time&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&quot;math math-display&quot;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;N&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;
Time\;between\;tasks_{pipelined} = \frac{Time\;between\;tasks_{non-pipelined}}{Number\;of\;pipeline\;stages}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.9805em;vertical-align:-0.2861em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02691em;&quot;&gt;tw&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ee&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2861em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.2519em;vertical-align:-0.8804em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3714em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;N&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;mb&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03588em;&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;es&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02691em;&quot;&gt;tw&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ee&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2861em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8804em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h3&gt;Stage in pipeline&lt;/h3&gt;
&lt;p&gt;For different stages, different resources are used.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Stage 1: IF (Fetching an instruction from memory)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stage 2: ID (Decoding the instruction and read registers)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stage 3: EX (Executing operation or calculating address)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stage 4: MEM (Accessing data in data memory)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stage 5: wB (Writing the result back into a register)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h3&gt;Compared to the single-cycle processor&lt;/h3&gt;
&lt;p&gt;Compared to the single cycle processor, &lt;strong&gt;clock period in pipelined processor is determined by the longest stage time.&lt;/strong&gt;
&lt;img src=&quot;/attachments/01%207.jpg&quot; alt=&quot;01 7.jpg&quot;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;div class=&quot;math math-display&quot;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;
Time\;between\;instructions_{pipelined}= the\;longest\;stage\;time \times (the\;number\;of\;instructions + the\;number\;of\;stages - 1)
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.9805em;vertical-align:-0.2861em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02691em;&quot;&gt;tw&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ee&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2861em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03588em;&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;es&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03588em;&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;mb&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8889em;vertical-align:-0.1944em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;mb&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03588em;&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;es&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;If there are a lot of instructions to be executed,&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;math math-display&quot;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;T&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;b&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;w&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;msub&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;g&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;
Time\;between\;instructions_{pipelined} = \frac{Time\;between\;instructions_{non-pipelined}}{\frac{the\;longest\;instruction\;time}{the\;longest\;stage\;time}}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.9805em;vertical-align:-0.2861em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02691em;&quot;&gt;tw&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ee&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2861em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.6748em;vertical-align:-1.3033em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3714em;&quot;&gt;&lt;span style=&quot;top:-2.1778em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.9322em;&quot;&gt;&lt;span style=&quot;top:-2.655em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.03588em;&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;es&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.03588em;&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.4461em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.03588em;&quot;&gt;g&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;es&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace mtight&quot; style=&quot;margin-right:0.3253em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.4811em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;T&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02691em;&quot;&gt;tw&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ee&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2861em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3033em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;br&gt;
&lt;h2&gt;Hazards in Pipelining&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Structural hazards&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - When a required resources is busy&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Data hazards&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - When we need to wait for previous instruction to complete its data read/write operation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Control hazards&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - When we need to make a control decision differently depending on the previous instruction&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Structural hazards&lt;/h3&gt;
&lt;p&gt;When a required resource is already used for executing an other instruction&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;IF and MEM stages can request to use the same resource at the same time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;it is required to separate instruction / data memories&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - IF and MEM stages use different part of memory (instruction memory, data memory)
&lt;img src=&quot;/attachments/02%208.jpg&quot; alt=&quot;02 8.jpg&quot;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Data hazards&lt;/h3&gt;
&lt;p&gt;When an instruction depends on the completion of data access by a previous instruction
&lt;img src=&quot;/attachments/03%206.jpg&quot; alt=&quot;03 6.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Solution: &lt;strong&gt;Forwarding&lt;/strong&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;Instead of waiting for the target date to be stored in a register,&lt;br&gt;&lt;/p&gt;
&lt;p&gt;forward the data as soon as possible with extra connections
&lt;img src=&quot;/attachments/04%204.jpg&quot; alt=&quot;04 4.jpg&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Load-use data hazards&lt;/h4&gt;
&lt;p&gt;But, sometimes, we cannot avoid stalls by forwarding
&lt;img src=&quot;/attachments/05%204.jpg&quot; alt=&quot;05 4.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Solution: &lt;strong&gt;code scheduling&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Reorder code to avoid the load-use data hazards (done by compiler)
&lt;img src=&quot;/attachments/06%202.jpg&quot; alt=&quot;06 2.jpg&quot;&gt;
before
&lt;br&gt;&lt;img src=&quot;/attachments/07%201.jpg&quot; alt=&quot;07 1.jpg&quot;&gt;
after&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Control hazards&lt;/h3&gt;
&lt;p&gt;Hazards with branch instructions &lt;br&gt;&lt;/p&gt;
&lt;p&gt;We should wait until branch outcome is determined before fetching the next instruction
&lt;img src=&quot;/attachments/08.jpg&quot; alt=&quot;08.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Solution: &lt;strong&gt;Compare registers and compute target early in the pipeline&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Especially, by adding hardware to do it in &lt;strong&gt;ID stage&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;But, still there is &lt;strong&gt;one&lt;/strong&gt; pipeline bubble&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/09.jpg&quot; alt=&quot;09.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;Solution: &lt;strong&gt;branch prediction&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;With additional HW for early comparison and computation in ID stage&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;just fetch instruction with no bubble&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - if prediction correct: keep going&lt;/p&gt;
&lt;p&gt;    - if prediction incorrect: cancel the process &amp;#x26; add bubble&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Pipelining improves performance by increasing instruction throughput&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Executes multiple instructions in parallel&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The execution time of each instruction is not affected&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Pipeline hazards&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Structural hazards&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Solution: separate data / instruction memories&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(Load-use) Data hazards&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Solution: forwarding + code scheduling&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Control hazards&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Solution: early comparison &amp;#x26; computation + branch prediction&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Exceptions]]></title><description><![CDATA[contents: 0-1. CA Intro Code scheduling There are three types of critical dependencies Read after write Write after read Write after write…]]></description><link>https://minjun.blog/4-6. Exceptions/</link><guid isPermaLink="false">https://minjun.blog/4-6. Exceptions/</guid><pubDate>Tue, 20 Aug 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Code scheduling&lt;/h2&gt;
&lt;p&gt;There are three types of critical dependencies&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Read after write&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Write after read&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Write after write&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If two instructions have one of the above dependencies,&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;the execution order these two instructions must be maintained&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Exceptions&lt;/h2&gt;
&lt;h3&gt;Exceptions VS Interrupts in MIPS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Exception: arises within the CPU (internally)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Interrupt: from an external I/O controller (externally)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type of event&lt;/th&gt;
&lt;th&gt;From where&lt;/th&gt;
&lt;th&gt;MIPS terminology&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;I/O device reques&lt;/td&gt;
&lt;td&gt;External&lt;/td&gt;
&lt;td&gt;Interrupt&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Invoke OS from a user program&lt;/td&gt;
&lt;td&gt;Internal&lt;/td&gt;
&lt;td&gt;Exception&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Arithmetic overflow&lt;/td&gt;
&lt;td&gt;Exception&lt;/td&gt;
&lt;td&gt;Exception&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Using an undefined instruction&lt;/td&gt;
&lt;td&gt;Internal&lt;/td&gt;
&lt;td&gt;Exception&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HW malfunctions&lt;/td&gt;
&lt;td&gt;Either&lt;/td&gt;
&lt;td&gt;Exception or interrupt&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h3&gt;How to handle&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Step 1: Save the address of the offending instruction in the EPC (Exception Program Counter)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - EPC is a 32-bit register&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Step 2: Save the reason for the exception in the Cause register&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Cause is a 32-bit register (some bits are unused)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Step 3: Jump to the exception handler corresponds to the cause&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - The handler address for undefined opcode: &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;8000&lt;/mn&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mn&gt;000&lt;/mn&gt;&lt;msub&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;8000\;0000_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7944em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;8000&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;000&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;    - Overflow: &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;8000&lt;/mn&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mn&gt;018&lt;/mn&gt;&lt;msub&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;h&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;x&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;8000\;0180_{hex}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7944em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;8000&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;018&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3361em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-left:0em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;h&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;x&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;    - But sometimes without saving the reason for the exception, it jumps to the exception handler&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Step 4: Do actions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Read the cause and determine the action required&lt;/p&gt;
&lt;p&gt;    - If recoverable, take a corrective action and use EPC to return to a program&lt;/p&gt;
&lt;p&gt;    - Otherwise, terminate the program and report error using EPC, cause, ...
&lt;img src=&quot;/attachments/01%209.jpg&quot; alt=&quot;01 9.jpg&quot;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Exceptions according to the stage&lt;/h3&gt;
&lt;p&gt;Exceptions can occur in any stage (except WB)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IF: Invalid memory access (memory fault)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - e.g., when PC holds an invalid memory address value&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ID: Undefined instruction&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - e.g., &lt;code class=&quot;language-text&quot;&gt;abc $t0, $t1, $t2&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;EX: Overflow&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - e.g., when we use add, addi, and sub instructions&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MEM: Invalid memory access (memory fault)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - e.g., when a computed target memory address is abnormal&lt;/p&gt;
&lt;p&gt;Regardless of the stage, the cause of exceptions is stored in the Cause register&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Then, guess which instruction caused the exception based on the cause&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Multiple exceptions&lt;/h3&gt;
&lt;p&gt;Multiple instructions are executed in different stages at the same time, which means multiple exceptions can occur in the same clock cycle.&lt;/p&gt;
&lt;h4&gt;How to prioritize multiple exceptions?&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;In MIPS, earliest instruction first&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Flush subsequent instructions&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Handling hazards]]></title><description><![CDATA[contents: 0-1. CA Intro Pipelined datapath We need registers between stages to hold information produced in previous stage and make…]]></description><link>https://minjun.blog/4-5. Handling hazards/</link><guid isPermaLink="false">https://minjun.blog/4-5. Handling hazards/</guid><pubDate>Mon, 19 Aug 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Pipelined datapath&lt;/h2&gt;
&lt;p&gt;We need registers between stages &lt;strong&gt;to hold information produced in previous stage and make isolation&lt;/strong&gt;
&lt;img src=&quot;/attachments/01%208.jpg&quot; alt=&quot;01 8.jpg&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Data hazards&lt;/h2&gt;
&lt;p&gt;When an instruction depends on the completion of data access by a previous instruction, it causes data hazards.
&lt;img src=&quot;/attachments/07%202.jpg&quot; alt=&quot;07 2.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;How to detect &amp;#x26; when to forward&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Step 1: Pass register numbers along pipeline&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - if I-format or branch instruction, Rd is invalid value&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Step 2: Check the following data hazard conditions&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;EX/MEM.RegisterRd == ID/EX.RegisterRs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;EX/MEM.RegisterRd == ID/EX.RegisterRt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;MEM/WB.RegisterRd == ID/EX.RegisterRs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;MEM/WB.RegisterRd == ID/EX.RegisterRt&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Step 3: If there is a data hazard, then do forwarding&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - But only if the forwarding instruction writes to a register&lt;/p&gt;
&lt;p&gt;        - Check the RegWrite signal in &lt;code class=&quot;language-text&quot;&gt;EX/MEM.RegWrite&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;MEM/WB.RegWrite&lt;/code&gt; is &lt;code class=&quot;language-text&quot;&gt;1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;    - And only if Rd for the forwarding instruction is not &lt;code class=&quot;language-text&quot;&gt;$zero&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;        - &lt;code class=&quot;language-text&quot;&gt;$zero&lt;/code&gt; cannot be overwritten&lt;/p&gt;
&lt;p&gt;        - &lt;code class=&quot;language-text&quot;&gt;EX/MEM.RegisterRd != 0&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;        - &lt;code class=&quot;language-text&quot;&gt;MEM/WB.RegisterRd != 0&lt;/code&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;How to process&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/02%209.jpg&quot; alt=&quot;02 9.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;EX hazards&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - If (&lt;code class=&quot;language-text&quot;&gt;EX/MEM.RegWrite == 1 &amp;amp;&amp;amp; EX/MEM.RegisterRd != 0 &amp;amp;&amp;amp; EX/MEM.RegisterRd == ID/EX.RegisterRs&lt;/code&gt;) &lt;Br&gt;&lt;strong&gt;ForwardA = 10&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;    - If (&lt;code class=&quot;language-text&quot;&gt;EX/MEM.RegWrite == 1 &amp;amp;&amp;amp; EX/MEM.RegisterRd != 0 &amp;amp;&amp;amp; EX/MEM.RegisterRd == ID/EX.RegisterRt&lt;/code&gt;) &lt;Br&gt;&lt;strong&gt;ForwardB = 10&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;MEM hazard&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - If (&lt;code class=&quot;language-text&quot;&gt;EX/MEM.RegWrite == 1 &amp;amp;&amp;amp; EX/MEM.RegisterRd != 0 &amp;amp;&amp;amp; MEM/WB.RegisterRd == ID/EX.RegisterRs&lt;/code&gt;) &lt;Br&gt;&lt;strong&gt;ForwardA = 01&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;    - If (&lt;code class=&quot;language-text&quot;&gt;EX/MEM.RegWrite == 1 &amp;amp;&amp;amp; EX/MEM.RegisterRd != 0 &amp;amp;&amp;amp; MEM/WB.RegisterRd == ID/EX.RegisterRt&lt;/code&gt;) &lt;Br&gt;&lt;strong&gt;ForwardB = 01&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Both EX &amp;#x26; MEM hazards&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Use the most recent result &lt;strong&gt;(the result in EX/MEM)&lt;/strong&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Practice&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/03%207.jpg&quot; alt=&quot;03 7.jpg&quot;&gt;
&lt;img src=&quot;/attachments/04%205.jpg&quot; alt=&quot;04 5.jpg&quot;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Load-use data hazards&lt;/h2&gt;
&lt;p&gt;But, sometimes, we cannot avoid stalls by forwarding&lt;br&gt;&lt;/p&gt;
&lt;p&gt;We need to stall for one cycle when we have to forward the data from MEM/WB registers to ALU stage
&lt;img src=&quot;/attachments/08%201.jpg&quot; alt=&quot;08 1.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;How to detect &amp;#x26; when to forward&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Step 1: Check the following condition&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;ID/EX.MemRead == 1 &amp;amp;&amp;amp;&lt;/code&gt; &lt;br&gt;&lt;code class=&quot;language-text&quot;&gt;(ID/EX.RegisterRt == IF/ID.RegisterRs || ID/EX.RegisterRt == IF/ID.RegisterRt)&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Step 2: If detect, stall&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Prevent PC and IF/ID from changing&lt;br&gt;the same instruction is executed in IF &amp;#x26; ID stages&lt;/p&gt;
&lt;p&gt;    - Insert &lt;code class=&quot;language-text&quot;&gt;nop&lt;/code&gt; in the EX stage by setting the control signals in ID/EX register to 0&lt;/p&gt;
&lt;p&gt;    - &lt;code class=&quot;language-text&quot;&gt;PCWrite = 0&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;IF/IDWrite = 0&lt;/code&gt; (if no load-use data hazards, they are 1)&lt;/p&gt;
&lt;h3&gt;Practice&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/05%205.jpg&quot; alt=&quot;05 5.jpg&quot;&gt;
&lt;img src=&quot;/attachments/06%203.jpg&quot; alt=&quot;06 3.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Code scheduling&lt;/h3&gt;
&lt;p&gt;Reorder code to avoid the load-use data hazards (done by compiler)&lt;/p&gt;
&lt;h4&gt;Algorithm&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Check the existence of load hazards&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - A load hazard occurs when the destination register of a load instruction is used as a source register of its next instruction&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If exists, check whether there is a code that can ve executed after the load instruction&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - This reordering must not change the result of the program, while solving hazard&lt;/p&gt;
&lt;p&gt;    - We must consider the instruction dependencies&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Control hazards&lt;/h2&gt;
&lt;p&gt;If branch outcome is determined in a MEM stage, there will be three pipeline bubbles
&lt;img src=&quot;/attachments/09%202.jpg&quot; alt=&quot;09 2.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;How to process&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Simple solution: static branch prediction&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Predict that the branch will not be taken (just the next instruction will be executed)&lt;/p&gt;
&lt;p&gt;    - If the prediction is correct, there will be no pipeline stall&lt;/p&gt;
&lt;p&gt;    - If the prediction is incorrect, flush 3 instructions and insert 3 pipeline bubbles&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Improving by early comparison in ID stage&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Use same prediction&lt;/p&gt;
&lt;p&gt;    - If the prediction is correct, there will be no pipeline stall&lt;/p&gt;
&lt;p&gt;    - If the prediction is incorrect, flush 1 instruction and insert 1 pipeline bubble&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dynamic branch prediction&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - History-based prediction with BPT(branch prediction table), store a recent branch decision (taken / not taken)&lt;/p&gt;
&lt;p&gt;    - Indexed by branch instruction addresses&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Dynamic branch prediction&lt;/h3&gt;
&lt;p&gt;Make a better branch prediction in a way to reduce the number of misprediction&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Step 1: access a branch prediction table by using the instruction address&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Step 2: Check the prediction value in the table and fetch the next (not taken) or target branch instruction (taken)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Step 3: If the prediction is wrong, flush pipeline and flip prediction&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;2-bit predictor&lt;/h4&gt;
&lt;p&gt;Only change prediction on two successive mispredictions
&lt;img src=&quot;/attachments/10.jpg&quot; alt=&quot;10.jpg&quot;&gt;&lt;/p&gt;
&lt;h4&gt;Branch target buffer&lt;/h4&gt;
&lt;p&gt;Still, we should experience 1 pipeline stall to compute the target address for a taken branch&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cache of target address&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Indexed by the address of branch instructions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When a branch instruction is fetched and its prediction is &quot;taken&quot;, &lt;br&gt;then check the branch target buffer&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - If there is a target address, fetch the target immediately&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Cache overview]]></title><description><![CDATA[contents: 0-1. CA Intro Memory hierarchy Locality Temporal locality     - Items accessed recently are likely to be accessed again soon…]]></description><link>https://minjun.blog/5-1. Cache overview/</link><guid isPermaLink="false">https://minjun.blog/5-1. Cache overview/</guid><pubDate>Wed, 21 Aug 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Memory hierarchy&lt;/h2&gt;
&lt;h3&gt;Locality&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Temporal locality&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Items accessed recently are likely to be accessed again soon&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Spatial locality&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Items near those accessed recently are likely to be accessed soon&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Memory structure&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;SRAM&lt;/strong&gt; (cache memory attached to CPU)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Fastest (o.5ns ~ 2.5ns)&lt;/p&gt;
&lt;p&gt;    - most expensive&lt;/p&gt;
&lt;p&gt;    - smallest&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;DRAM&lt;/strong&gt; (main memory)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Faster (50ns ~ 70ns)&lt;/p&gt;
&lt;p&gt;    - more expensive&lt;/p&gt;
&lt;p&gt;    - smaller&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Disk&lt;/strong&gt; (HDD, SSD)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Slowest (5ms ~ 20ms)&lt;/p&gt;
&lt;p&gt;    - cheapest&lt;/p&gt;
&lt;p&gt;    - largest&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Use hierarchy&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Copy recently accessed (and nearby) items from disk to smaller DRAM memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Copy more recently accessed (and nearby) items from DRAM to smaller SRAM memory&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h3&gt;Term&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Block&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - The minimum unit of information&lt;/p&gt;
&lt;p&gt;    - It can be either present or not present in a cache&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Hit&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Accessed data is present&lt;/p&gt;
&lt;p&gt;    - Hit ratio: # of hits / # of accesses&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Miss&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Accessed data is absent&lt;/p&gt;
&lt;p&gt;    - Block is copied from lower level (Additional time taken)&lt;/p&gt;
&lt;p&gt;    - Miss ratio: # of misses / # of access (= 1 - hit ratio)&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Direct mapped cache&lt;/h2&gt;
&lt;p&gt;Each memory location can be mapped directly to exactly one location in the cache
&lt;img src=&quot;/attachments/01%2010.jpg&quot; alt=&quot;01 10.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Cache address = (Block address) modulo (# of blocks in cache)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Num of blocks in cache is power of 2 (e.g., 2, 4, 8, 16, 32, ...)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The cache address is determined by the low-order bits of block address&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tags contain the address information of the data (the high-order bits of the address)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To avoid using meaningless information, add a valid bit for each cache block&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Valid bit = 1 (the cache block contains valid information)&lt;/p&gt;
&lt;p&gt;    - Valid bit = 0 (the cache block contains invalid information)&lt;/p&gt;
&lt;p&gt;    - Initially, the valid bits of all cache blocks are set to 0&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Cache address&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;32-bit addresses&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;num of cache blocks: &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^n&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; blocks (the lowest n bits of the block address are used for the index)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Block size: &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^m&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; words (&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{m+2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; bytes)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - m bits are used for the word within the block, 2 bits are used for the byte within the word&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/02%2010.jpg&quot; alt=&quot;02 10.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Cache size&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/03%208.jpg&quot; alt=&quot;03 8.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cache size&lt;/strong&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= Cache table size &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= Num of cache block &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; (valid bit length + tag length + block size(data length))&lt;/p&gt;
&lt;h3&gt;Practice 1&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;32-bit addresses&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Num of cache blocks: &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{10}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; blocks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Block size: &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^0&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; words (&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; bytes)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Cache size&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;= &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;32&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;32&lt;/mn&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{10} \times (1 + (32 - (10 + 0 + 2)) + 32)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8974em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7278em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mn&gt;53&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{10} \times 53&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8974em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;53&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; bits&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;Practice 2&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;32-bit addresses&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Num of cache blocks: 64 blocks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Block size: 4 words&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Cache size&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;= &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;6&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;32&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;6&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;128&lt;/mn&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{6} \times (1 + (32 - (6 + 2 + 2)) + 128)&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8974em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7278em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;6&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mn&gt;151&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{6} \times 151&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8974em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;151&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; bits&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;More about&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;If we increase the size of blocks, this may help reduce miss rate due to spatial locality&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;But, Larger blocks -&gt; a smaller number of cache blocks -&gt; more competition -&gt; increased miss rate&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Increased miss penalty (the time for copying from lower level)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;Handling cache misses&lt;/h2&gt;
&lt;p&gt;On cache hit, CPU proceeds normally. (requiring 1 clock cycle&lt;br&gt;&lt;/p&gt;
&lt;p&gt;But, on cache miss, the control unit of the CPU&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Step 1: stalls the CPU pipeline&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Step 2: copies a block from the next level of hierarchy (e.g., memory)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Step 3: does the stalled task&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Restarts instruction fetch (IF stage) &lt;br&gt; if the cache miss happened when fetching an instruction from the instruction memory&lt;/p&gt;
&lt;p&gt;    - Completes data access (MEM stage) &lt;br&gt; if the cache miss happened when loading data from the data memory&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Handling writes&lt;/h3&gt;
&lt;p&gt;When will the newly-updated data in the cache be written to the lower-level memory (e.g., main memory)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Write-through&lt;/strong&gt;: Update both cache and lower-level memory at the same time&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Write-back&lt;/strong&gt;: Just update cache&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Keep track of which block is dirty (used)&lt;/p&gt;
&lt;p&gt;    - When a dirty block is replaced, write it back to the lower-level memory&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Pros&lt;/th&gt;
&lt;th&gt;Cons&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Write-through&lt;/td&gt;
&lt;td&gt;- Consistency between cache and memory is guaranteed&lt;br&gt;- Easy to implement&lt;/td&gt;
&lt;td&gt;- Slow write speed&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Write-back&lt;/td&gt;
&lt;td&gt;- Fast write speed&lt;br&gt;(if there is no replacement)&lt;/td&gt;
&lt;td&gt;- Consistency between cache and memory is not guaranteed&lt;br&gt;- Complex to implement&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;br&gt;
&lt;h4&gt;Write-through with write buffer&lt;/h4&gt;
&lt;p&gt;To reduce the delay of write operations on the write-through method, &lt;br&gt;we can use a write-buffer (much faster to access than memory)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A write buffer folds data waiting to be written to lower-level memory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - &lt;strong&gt;Step 1: Update both cache and write buffer&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;    - &lt;strong&gt;Step 2: The processor continues the program execution without waiting&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;        - The memory takes the updated data from the write buffer&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the buffer is full, the processor must stall until there is an empty position &lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The write buffer can be also used to improve the performance of write-back&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If all the blocks in cache are dirty&lt;/li&gt;
&lt;/ul&gt;
&lt;Br&gt;
&lt;h3&gt;Handling write misses&lt;/h3&gt;
&lt;p&gt;If there is no requested block in the cache, it causes write misses&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Write-allocate&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - First, fetch the block to cache&lt;/p&gt;
&lt;p&gt;    - And then, handle the write operation&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Write around&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Just update the portion of the block in lower-level memory, but not put it in cache&lt;/p&gt;
&lt;p&gt;    - It is good when we need to initialize memory space&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Real-world example&lt;/h2&gt;
&lt;p&gt;Embedded MIPS processor with 12-stage pipeline&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Split cache: &lt;strong&gt;I-cache&lt;/strong&gt; (for instructions) and &lt;strong&gt;D-cache&lt;/strong&gt; (for data)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Each 16KB: 256 blocks &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 16 words per block&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/04%206.jpg&quot; alt=&quot;04 6.jpg&quot;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Cache performance&lt;/h2&gt;
&lt;p&gt;CPU time = clock cycle &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; clock period &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= (CPU execution clock cycles + memory-stall clock cycles) &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; clock period&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CPU execution clock cycles&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - The clock cycles that CPU spends executing the program&lt;/p&gt;
&lt;p&gt;    - Cache hit time is included&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Memory-stall clock cycles&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - The clock cycles that CPU spends waiting for the memory access&lt;/p&gt;
&lt;p&gt;    - Mainly from cache misses&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Memory-stall clock cycles&lt;/h3&gt;
&lt;p&gt;Simplifying assumption: the read and write miss penalties are the same &lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Num of memory accesses &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Miss rate &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Miss penalty&lt;/strong&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= Num of misses &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Miss penalty&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;In MIPS, we have two different cache (instruction (I-cache) and data (D-cache))&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;Num of memory accesses &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Miss rate &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Miss penalty&lt;br&gt;&lt;/p&gt;
&lt;p&gt;= Num of &lt;strong&gt;instruction memory&lt;/strong&gt; access &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;strong&gt;I-cache&lt;/strong&gt; miss rate &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;strong&gt;I-cache&lt;/strong&gt; miss penalty&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;+&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;+&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Num of &lt;strong&gt;data memory&lt;/strong&gt; access &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;strong&gt;D-cache&lt;/strong&gt; miss rate &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;strong&gt;D-cache&lt;/strong&gt; miss penalty&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Practice 1&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Base CPI (on cache hit) = 2&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Instruction-cache miss rate = 2%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data-cache miss rate = 4%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Miss penalty = 100 cycles&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Load &amp;#x26; stores are 36% of instructions&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;Miss-stall clock cycles (when there are I instructions)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;For instructions: I &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 0.02 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 100 = 2 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; I&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;For data: I &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 0.36 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 0.04 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 100 = 1.44 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; I&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;CPU time&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Actual CPU time: (2 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; I + 2 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; I + 1.44 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; I) &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; clock period = 5.44 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; I &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; clock period&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Ideal CPU time: (no cache misses = perfect cache): 2 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; I &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; clock period&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;div class=&quot;math math-display&quot;&gt;&lt;span class=&quot;katex-display&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot; display=&quot;block&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;f&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;U&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;k&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;r&lt;/mi&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;mspace linebreak=&quot;newline&quot;&gt;&lt;/mspace&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mrow&gt;&lt;mi&gt;A&lt;/mi&gt;&lt;mi&gt;c&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;mi&gt;d&lt;/mi&gt;&lt;mi&gt;e&lt;/mi&gt;&lt;mi&gt;a&lt;/mi&gt;&lt;mi&gt;l&lt;/mi&gt;&lt;mtext&gt;  &lt;/mtext&gt;&lt;mi&gt;C&lt;/mi&gt;&lt;mi&gt;P&lt;/mi&gt;&lt;mi&gt;I&lt;/mi&gt;&lt;/mrow&gt;&lt;/mfrac&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mfrac&gt;&lt;mn&gt;5.44&lt;/mn&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mfrac&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;
\frac{Ideal\;performance}{Actual\;performance} = \frac{Actual\;CPU\;time}{Ideal\;CPU\;time} = \frac{I \times actual\;CPI \times clock\;period}{I \times ideal\;CPI \times clock\;period} \\ = \frac{Actual\;CPI}{Ideal\;CPI} = \frac{5.44}{2}
&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.2519em;vertical-align:-0.8804em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3714em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ce&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10764em;&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;or&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;man&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;ce&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8804em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.0574em;vertical-align:-0.686em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3714em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.10903em;&quot;&gt;U&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;im&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.686em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.2519em;vertical-align:-0.8804em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3714em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;oc&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;oc&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.03148em;&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.02778em;&quot;&gt;er&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;d&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8804em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace newline&quot;&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.3669em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.0574em;vertical-align:-0.686em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3714em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;t&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.01968em;&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.13889em;&quot;&gt;CP&lt;/span&gt;&lt;span class=&quot;mord mathnormal&quot; style=&quot;margin-right:0.07847em;&quot;&gt;I&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.686em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:2.0074em;vertical-align:-0.686em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mopen nulldelimiter&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mfrac&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:1.3214em;&quot;&gt;&lt;span style=&quot;top:-2.314em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.23em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;frac-line&quot; style=&quot;border-bottom-width:0.04em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&quot;top:-3.677em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:3em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;5.44&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.686em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose nulldelimiter&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;
&lt;center&gt;
&lt;strong&gt;
&lt;p&gt;    &quot;The performance with the perfect cache is better by 2.72&quot;&lt;/p&gt;
&lt;/strong&gt;
&lt;/center&gt;
&lt;br&gt;
&lt;h3&gt;Practice 2&lt;/h3&gt;
&lt;p&gt;Suppose the processor is made faster, but the memory system is not&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Base CPI (on cache hit) = &lt;strong&gt;2 -&gt; 1&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Instruction-cache miss rate = 2%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Data-cache miss rate = 4%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Miss penalty = 100 cycles&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Load &amp;#x26; stores are 36% of instructions&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Memory-stall clock cycle&lt;/th&gt;
&lt;th&gt;Memory-stall CPI&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;For I-cache&lt;/td&gt;
&lt;td&gt;2 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; I&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;For D-cache&lt;/td&gt;
&lt;td&gt;1.44 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; I&lt;/td&gt;
&lt;td&gt;1.44&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;CPU time&lt;/td&gt;
&lt;td&gt;CPI&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Actual&lt;/td&gt;
&lt;td&gt;4.44 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; I &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; CP&lt;/td&gt;
&lt;td&gt;4.44&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Ideal&lt;/td&gt;
&lt;td&gt;1 &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; I &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; CP&lt;/td&gt;
&lt;td&gt;1  &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;center&gt;
&lt;strong&gt;
&lt;p&gt;    &quot;The performance with the perfect cache is better by 4.44&quot;&lt;/p&gt;
&lt;/strong&gt;
&lt;/center&gt;
&lt;center&gt;
&lt;strong&gt;
&lt;p&gt;    But the gap between actual and ideal case is same as 3.44&lt;/p&gt;
&lt;/strong&gt;
&lt;/center&gt;</content:encoded></item><item><title><![CDATA[Virtual memory Part 1]]></title><description><![CDATA[contents: 0-1. CA Intro Main challenge in using main memory In multi-process environments, multiple processes share main memory at the same…]]></description><link>https://minjun.blog/5-3. Virtual memory Part 1/</link><guid isPermaLink="false">https://minjun.blog/5-3. Virtual memory Part 1/</guid><pubDate>Fri, 23 Aug 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Main challenge in using main memory&lt;/h2&gt;
&lt;p&gt;In multi-process environments, multiple processes share main memory at the same time.&lt;/p&gt;
&lt;p&gt;So depending on which processes run concurrently, the following thing are dynamically changed.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The total amount of memory that each process can use&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The memory address of data used in processes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The physical location of data (main memory or disk)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Virtual Memory (VM)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Provides each process an illusion of the exclusively-use of large memory&lt;/strong&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;Processes think that they use their own memory that can store everything related to them&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU and OS manage the mapping between the virtual memory, physical memory and disk&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/01%2012.jpg&quot; alt=&quot;01 12.jpg&quot;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Advantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Processes do not need to think about the effect of other processes in using memory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - The memory space used by processes is fixed virtually&lt;/p&gt;
&lt;p&gt;    - Simple development of programs&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Virtual addresses of different processes are mapped to different physical addresses&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Only OS can manage this mapping information&lt;/p&gt;
&lt;p&gt;    - One process cannot access another&apos;s data&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Term&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Page&lt;/strong&gt;: the minimum unit of information in virtual memory containing multiple blocks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Page fault&lt;/strong&gt;: when an requested page is not present in main memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Virtual address&lt;/strong&gt;: an address that corresponds to a data location in virtual memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Physical address&lt;/strong&gt;: an address that corresponds to a data location in physical memory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Disk address&lt;/strong&gt;: an address that corresponds to a data location in disk&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h3&gt;Address translation (address mapping)&lt;/h3&gt;
&lt;p&gt;In virtual memory, pages are mapped from virtual address to physical or disk addresses&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;At this time, &lt;strong&gt;fully associative placement&lt;/strong&gt; is used&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/02%2012.jpg&quot; alt=&quot;02 12.jpg&quot;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;VM address translation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;32-bit virtual memory address&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Virtual memory size: &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;32&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{32}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Bytes = 4GB&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Page size: 4KB = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;10&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{2+10}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Bytes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Physical memory size: 1GB = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;30&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{30}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;30&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Bytes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Num of physical pages = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;18&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{18}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;18&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Total page table size&lt;/h4&gt;
&lt;p&gt;Num of PTEs &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; PTE size = num of virtual pages &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 4Bytes&lt;br&gt;&lt;/p&gt;
&lt;p&gt;= Virtual memory size / page size &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;\times&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6667em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;×&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; 4Bytes&lt;br&gt;&lt;/p&gt;
&lt;p&gt;= &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;32&lt;/mn&gt;&lt;/msup&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;12&lt;/mn&gt;&lt;/msup&gt;&lt;mo&gt;×&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{32} / 2^{12} \times 2^2&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.0641em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;×&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Bytes = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow&gt;&lt;mn&gt;32&lt;/mn&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;12&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{32 - 12 + 2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Bytes = 4MB&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;TLB (translation Lookaside Buffer)&lt;/h2&gt;
&lt;p&gt;Since the page tables are stored in main memory, every memory access by a program can take at least twice as long&lt;br&gt;: one memory access to obtain the physical address and a second access to get the data&lt;br&gt;&lt;/p&gt;
&lt;br&gt;
&lt;p&gt;&lt;strong&gt;TLB&lt;/strong&gt; is a cache that keeps tract of recently used address mappings to try to avoid an access to the page table.&lt;br&gt;&lt;/p&gt;
&lt;p&gt;: cache of page table
&lt;img src=&quot;/attachments/03%2010.jpg&quot; alt=&quot;03 10.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Typical TLB structure&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;TLB size: 16 ~ 512 page entries&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Fully associative TLBs (used in systems that use small TLBs) &lt;br&gt;or Small associative TLBs (used in systems that use large TLBs)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Replacement policy: random (for fast handling)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hit time: 0.5 ~ 1 clock cycle&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Miss penalty: 10 ~ 100 clock cycles&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Miss rate: 0.01% ~ 1%&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h3&gt;Integrating TLB, Cache, memory&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Fully-associative TLB&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Physical memory size = 4GB (=&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;32&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{32}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;32&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Page size = 4KB = (=&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;12&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{12}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;12&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Direct mapped cache&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Num of cache blocks = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;8&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^8&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;8&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Cache block size = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mn&gt;4&lt;/mn&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^4&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; word&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/04%207.jpg&quot; alt=&quot;04 7.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Workflow&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Access TLB first&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Access cache using physical addresses: &quot;physically addressed cache&quot;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h3&gt;Physically addressed cache&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Physically indexed &amp;#x26; physically tagged &lt;br&gt;Both the cache index and tag are physical addresses&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/05%206.jpg&quot; alt=&quot;05 6.jpg&quot;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;32-bit virtual address&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Page size = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^p&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Bytes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Physical memory size =  &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^t&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7936em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.7936em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Bytes (t-bit physical address)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Block size = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^m&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; words&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Num of sets in a cache = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^s&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; sets&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/06%204.jpg&quot; alt=&quot;06 4.jpg&quot;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Scenario&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;TLB -&gt; hit, Cache -&gt; hit, VM -&gt; hit&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - Best case&lt;/p&gt;
&lt;p&gt;    - TLB가 hit이므로 Page table 볼 필요가 없음&lt;/p&gt;
&lt;p&gt;    - 즉 main memory 접근 필요 없음&lt;/p&gt;
&lt;p&gt;    - 또 Cache가 hit이므로 TLB에 의해 가상주소 -&gt; 실제주소, 이 실제주소로 Cache 접근&lt;/p&gt;
&lt;ol start=&quot;2&quot;&gt;
&lt;li&gt;TLB -&gt; miss, Cache -&gt; hit, VM -&gt; hit&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - TLB가 miss이므로 Page table에 접근해서 가상주소 -&gt; 실제주소 변환 필요 (메모리 접근 1회 필요)&lt;/p&gt;
&lt;p&gt;    - Cache는 hit이므로 더 이상 메모리 접근 없음&lt;/p&gt;
&lt;ol start=&quot;3&quot;&gt;
&lt;li&gt;TLB -&gt; miss, Cache -&gt; miss, VM -&gt; miss&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - Worst case&lt;/p&gt;
&lt;p&gt;    - 최악의 경우로 memory에서 miss 발생 -&gt; page fault&lt;/p&gt;
&lt;p&gt;    - 즉 valid bit가 0이므로 OS가 제어를 넘겨받음&lt;/p&gt;
&lt;ol start=&quot;4&quot;&gt;
&lt;li&gt;VM -&gt; miss면, Cache와 TLB가 무조건 miss&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;    - 계층구조를 이루고 있기 때문에 hit가 생길 수 없음&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Virtually addressed cache&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Virtually indexed &amp;#x26; virtually tagged &lt;br&gt;Both the cache index and tag are virtually address&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/07%203.jpg&quot; alt=&quot;07 3.jpg&quot;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;32-bit virtual address&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Page size = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^p&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Bytes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Physical memory size =  &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^t&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7936em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.7936em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Bytes (t-bit physical address)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Block size = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^m&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; words&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Num of sets in a cache = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^s&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; sets&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/08%202.jpg&quot; alt=&quot;08 2.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Physically-addressed cache VS virtually-addressed cache&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/09%203.jpg&quot; alt=&quot;09 3.jpg&quot;&gt;&lt;/p&gt;
&lt;br&gt;</content:encoded></item><item><title><![CDATA[Improving cache performance]]></title><description><![CDATA[contents: 0-1. CA Intro Associative caches Support more flexible placement of blocks
01 11.jpg Fully associative cache A cache structure in…]]></description><link>https://minjun.blog/5-2. Improving cache performance/</link><guid isPermaLink="false">https://minjun.blog/5-2. Improving cache performance/</guid><pubDate>Thu, 22 Aug 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Associative caches&lt;/h2&gt;
&lt;p&gt;Support more flexible placement of blocks
&lt;img src=&quot;/attachments/01%2011.jpg&quot; alt=&quot;01 11.jpg&quot;&gt;&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Fully associative cache&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A cache structure in which a block can be placed in any location in the cache&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Requires all entries to be searched&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h3&gt;N-way set associative cache&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;A cache that has N locations where each block can be placed&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Requires N entries to be searched&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The set containing a memory block &lt;br&gt; (Block address) modulo (num of sets in the cache)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Direct-mapped cache = 1-way set associative cache&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Full-associative cache = M-way set associative cache &lt;br&gt;(where M is num of cache blocks in the cache)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h3&gt;Associative cache address&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;32-addresses&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;num of cache blocks: &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^n&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; blocks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;num of sets in the cache: &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^s&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; sets (each set contains &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{n-s}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7713em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.7713em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; blocks: &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{n-s}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7713em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.7713em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;-way set associative cache)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Block size: &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^m&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; words (&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{m+2}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; bytes)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;img src=&quot;/attachments/02%2011.jpg&quot; alt=&quot;02 11.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Implementation of 4-way set associative cache&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/03%209.jpg&quot; alt=&quot;03 9.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;How much associativity&lt;/h3&gt;
&lt;p&gt;Increasing associativity makes &lt;strong&gt;flexibility &amp;#x26; complexity increase&lt;/strong&gt;. &lt;br&gt;&lt;/p&gt;
&lt;p&gt;We have to find moderate amount of set size.&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Block replacement policy&lt;/h3&gt;
&lt;p&gt;In set associative cache, if we have to make room for another block, one of blocks in a cache set must be removed&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Find non-valid entries and replace one of them&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If there are no non-valid entries, then choose one of valid entries in the set based on&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Least-recently used (LRU)&lt;/p&gt;
&lt;p&gt;    - Random&lt;/p&gt;
&lt;br&gt;
&lt;h2&gt;Multi-level caches&lt;/h2&gt;
&lt;p&gt;Use primary (level-1, L-1) and secondary (level-2, L-2) caches&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L-1 cache: placed close to (attached to) CPU&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Small, but very fast&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L-2 cache: placed a little bit far from CPU&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - Accessed on L-1 cache misses&lt;/p&gt;
&lt;p&gt;    - Larger and slower than L-1 cache, but still faster than main memory&lt;/p&gt;
&lt;p&gt;    - Main memory is accessed on L-2 cache misses&lt;/p&gt;
&lt;br&gt;
&lt;h3&gt;Practice 1&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CPU base CPI = 1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;L-1 miss rate = 2%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Main memory access time = 100ns&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clock period = 0.25ns&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;CPI of a single-level cache system = CPU base CPI + memory stall CPI&lt;/strong&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= CPU base CPI + L-1 miss rate * main memory access clock cycles &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= CPU base CPI + L-1 miss rate * main memory access time / clock period &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;0.02&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;100&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;msup&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;9&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;0.25&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;msup&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;9&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;1 + 0.02 * (100 * 10^{-9}) / (0.25 * 10^{-9})&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7278em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0.02&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;∗&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;∗&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.0641em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0.25&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;∗&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.0641em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;8&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;9&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;1 + 8 = 9&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7278em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;Practice 2&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;CPU base CPI = 1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;L-1 miss rate = 2%&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Global miss rate = 0.5% (Both L-1 &amp;#x26; L-2 are missed)&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;L-2 access time = 5ns&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Main memory access time = 100ns&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Clock period = 0.25ns&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;CPI of a 2-level cache system = CPU base CPI + memory stall CPI&lt;/strong&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= CPU base CPI + L-1 miss rate * L-1 miss penalty + global miss rate * L-2 miss penalty &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= CPU base CPI + L-1 miss rate * L-2 access time / clock period + global miss rate * main memory access time / clock period &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;0.02&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;5&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;msup&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;9&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;0.25&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;msup&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;9&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;0.005&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;100&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;msup&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;9&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;mi mathvariant=&quot;normal&quot;&gt;/&lt;/mi&gt;&lt;mo stretchy=&quot;false&quot;&gt;(&lt;/mo&gt;&lt;mn&gt;0.25&lt;/mn&gt;&lt;mo&gt;∗&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;msup&gt;&lt;mn&gt;0&lt;/mn&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;9&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo stretchy=&quot;false&quot;&gt;)&lt;/mo&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;1 + 0.02 * (5 * 10^{-9}) / (0.25 * 10^{-9}) + 0.005 * (100 * 10^{-9}) / (0.25 * 10^{-9})&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7278em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0.02&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;∗&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;∗&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.0641em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0.25&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;∗&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.0641em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0.005&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;∗&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;∗&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.0641em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mopen&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0.25&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;∗&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:1.0641em;vertical-align:-0.25em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;9&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mclose&quot;&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;= &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;0.4&lt;/mn&gt;&lt;mo&gt;+&lt;/mo&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mo&gt;=&lt;/mo&gt;&lt;mn&gt;3.4&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;1 + 0.4 + 2 = 3.4&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7278em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7278em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;0.4&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mrel&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2778em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;3.4&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3&gt;Considerations&lt;/h3&gt;
&lt;h4&gt;Designing L-1 cache&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Focus on minimizing hit time -&gt; to yield a short clock period &lt;br&gt;(the MEM stage time &amp;#x26; IF stage time are determined based on the L-1 cache hit time)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Designing L-2 cache&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Focus on minimizing miss rate -&gt; to avoid main memory&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Therefore, in multilevel caches,&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;L-1 cache and its blocks size is smaller than a single-level cache&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - to reduce hit time and miss penalty&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;L-2 cache is larger than a single-level cache&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - to reduce miss rate&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Virtual memory Part 2]]></title><description><![CDATA[contents: 0-1. CA Intro Integrating TLB, Cache, Memory Aliasing in virtually addressed cache The same virtual address of different processes…]]></description><link>https://minjun.blog/5-4. Virtual memory Part 2/</link><guid isPermaLink="false">https://minjun.blog/5-4. Virtual memory Part 2/</guid><pubDate>Sat, 24 Aug 2024 12:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Integrating TLB, Cache, Memory&lt;/h2&gt;
&lt;h3&gt;Aliasing in virtually addressed cache&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The same virtual address of different processes can be mapped to different physical address&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Wrong cache hit can occur&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Different virtual addresses of different process can be mapped to the same physical address &lt;br&gt;(when some memory space is shared by multiple processes)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The physical memory can be cached in two different locations&lt;/li&gt;
&lt;li&gt;Coherency problem can happen &lt;br&gt;One program writes the data without the other program being aware that the data had changed&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h4&gt;Simple solution&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Flush cache at context switching -&gt; too high miss rate
&lt;ul&gt;
&lt;li&gt;Context switch: In multi-process environments, multiple processes share a single CPU&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
&lt;h2&gt;Hybrid cache: virtually-indexed  &amp;#x26; physically-tagged cache&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;No aliasing problem&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TLB &amp;#x26; cache are accessed in a parallel manner (fast)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/01%2013.jpg&quot; alt=&quot;01 13.jpg&quot;&gt;
&lt;br&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;32-bit virtual address&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Page size = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;p&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^p&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;p&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Bytes&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Physical memory size =  &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^t&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7936em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.7936em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; Bytes (t-bit physical address)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Block size = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;m&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^m&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;m&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; words&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Num of sets in a cache = &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;s&lt;/mi&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^s&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;s&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; sets&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/02%2013.jpg&quot; alt=&quot;02 13.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Typical multi-level cache setup with TLB&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Typical L-1: hybrid cache (virtually-addressed, physically tagged)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To reduce hit time and miss rate&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Typical L-2: physically-addressed cache&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For simple implementation&lt;/li&gt;
&lt;li&gt;In addition, usually L-2 si large&lt;br&gt;So, because p &amp;#x3C; s + m + 2, we cannot use hybrid cache&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Design principles 4 of MIPS ISA]]></title><description><![CDATA[contents: 0-1. CA Intro The assembly language that has been studied so far is not a form that the processor can understand. Therefore, we…]]></description><link>https://minjun.blog/2-2. Design principles 4 of MIPS ISA/</link><guid isPermaLink="false">https://minjun.blog/2-2. Design principles 4 of MIPS ISA/</guid><pubDate>Wed, 31 Jul 2024 15:35:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The assembly language that has been studied so far is not a form that the processor can understand.&lt;/p&gt;
&lt;p&gt;Therefore, we need to &lt;strong&gt;encode instructions and data in well-formed binary.&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Data representation&lt;/h2&gt;
&lt;h3&gt;numbers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Numbers are kept in computer hardware as a series of 1 and 0&lt;/li&gt;
&lt;li&gt;They are considered base 2 numbers (binary numbers)&lt;/li&gt;
&lt;li&gt;Binary numbers are stored in words&lt;/li&gt;
&lt;li&gt;In MIPS, the words are 34 bits (4 bytes) long + MIPS is big endian&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;unsigned numbers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;By using n bits, we can represent unsigned numbers from 0 to &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/msup&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^n-1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.7477em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.6644em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;signed numbers&lt;/h3&gt;
&lt;h4&gt;Signed Magnitude&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;first bit determines mathematical symbols
&lt;ul&gt;
&lt;li&gt;0 is plus (+)&lt;/li&gt;
&lt;li&gt;1 is minus (-)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;others are bit size&lt;/li&gt;
&lt;li&gt;but, 000 = 100 = 0&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;One&apos;s complement&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;first bit determines mathematical symbols
&lt;ul&gt;
&lt;li&gt;0 is plus (+)&lt;/li&gt;
&lt;li&gt;1 is minus (-)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if first bit is 0
&lt;ul&gt;
&lt;li&gt;read it as it is&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if first bit is 1
&lt;ul&gt;
&lt;li&gt;flip 1 to 0, 0 to 1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ex) 100 = -3&lt;/li&gt;
&lt;li&gt;but, 000 = 111 = 0&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Two&apos;s complement&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;first bit determines mathematical symbols
&lt;ul&gt;
&lt;li&gt;0 is plus (+)&lt;/li&gt;
&lt;li&gt;1 is minus (-)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if first bit is 0
&lt;ul&gt;
&lt;li&gt;read it as it is&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;if first bit is 1
&lt;ul&gt;
&lt;li&gt;flip 1 to 0, 0 to 1&lt;/li&gt;
&lt;li&gt;plus 1&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ex) 100 = -4&lt;/li&gt;
&lt;li&gt;the number of zero is 1&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Answer&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;two&apos;s complement&lt;/strong&gt;  &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;we can get the computation result by just doing given arithmetic operations&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - 000 - 001 = 111 ( 0 - 1 = -1)
    - 010 + 111 = 001 (2 + (-1) = 1)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the number of zero is only 1.&lt;/li&gt;
&lt;li&gt;by using n bits, we can represent signed numbers from &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;-2^{n-1}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8974em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; to &lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msup&gt;&lt;mn&gt;2&lt;/mn&gt;&lt;mrow&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;/msup&gt;&lt;mo&gt;−&lt;/mo&gt;&lt;mn&gt;1&lt;/mn&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;2^{n-1}-1&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.8974em;vertical-align:-0.0833em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span class=&quot;mord&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.8141em;&quot;&gt;&lt;span style=&quot;top:-3.063em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;mbin mtight&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mord mtight&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mbin&quot;&gt;−&lt;/span&gt;&lt;span class=&quot;mspace&quot; style=&quot;margin-right:0.2222em;&quot;&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.6444em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4&gt;Signed extension&lt;/h4&gt;
&lt;p&gt;Sometimes, we need to represent n-bit numbers by using more than n bits&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;16-bit immediate should be converted to 32 bits for arithmetic&lt;/li&gt;
&lt;li&gt;Instructions &lt;code class=&quot;language-text&quot;&gt;lb/lh&lt;/code&gt; loads byte/halfword from memory space and store it into 32-bit registers&lt;/li&gt;
&lt;li&gt;Replicate the sign bit to the left
&lt;img src=&quot;/attachments/signed%20extension.jpg&quot; alt=&quot;signed extension.jpg&quot;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Instruction representation&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Like data, instructions are also encoded/represented in binary&lt;/strong&gt;
We call the encoded instructions as &lt;strong&gt;machine instructions&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For representing instructions, ISA defines instruction format
Issue: to represent all kinds of instructions, we might need many instrucion formants&lt;/p&gt;
&lt;h2&gt;Design principle 4&lt;/h2&gt;
&lt;h3&gt;Good design demands good compromise&lt;/h3&gt;
&lt;p&gt;Based on this, MIPS keeps formats as similar as possible (regularity)&lt;/p&gt;
&lt;h3&gt;R-format&lt;/h3&gt;
&lt;p&gt;For the instructions that use only Register operands
&lt;img src=&quot;/attachments/r-format.jpg&quot; alt=&quot;r-format.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;op&lt;/code&gt; (opcode): basic operation of the instruction (what the instruction does)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;rs&lt;/code&gt;: the first source register operand&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;rt&lt;/code&gt;: the second source register operand&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;rd&lt;/code&gt;: the destination register operand&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;shamt&lt;/code&gt;: shift amount (used for shift operations)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;funct&lt;/code&gt;: function code (the specific variant of the operation)&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;Q. why are the rs, rt, rd 5 bits?&lt;/p&gt;
&lt;p&gt;A. registers are 32, which means 5 bits are enough to express each register&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;I-format&lt;/h3&gt;
&lt;p&gt;For the instructions that use Immediate operands
&lt;img src=&quot;/attachments/i-format.jpg&quot; alt=&quot;i-format.jpg&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;op&lt;/code&gt; (opcode): basic operation of the instruction (what the instruction does)&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;rs&lt;/code&gt;: the first source register operand&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;rt&lt;/code&gt;: the second source register operand&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;Constant or address&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Summary&lt;/h2&gt;
&lt;p&gt;Key underlying design principles&lt;/p&gt;
&lt;h3&gt;Design Principle 1&lt;/h3&gt;
&lt;h4&gt;Simplicity favors regularity&lt;/h4&gt;
&lt;p&gt;All MIPS arithmetic instructions include a single operation &amp;#x26; three operands&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lower clock period or CPI&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Design Principle 2&lt;/h2&gt;
&lt;h4&gt;Smaller is faster&lt;/h4&gt;
&lt;p&gt;Operands of MIPS arithmetic instructions must be chosen in a small number of registers.
MIPS keeps more complex data in memory and supports data transfer between memory and registers.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lower clock period or CPI&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Design Principle 3&lt;/h3&gt;
&lt;h4&gt;Make the common case fast&lt;/h4&gt;
&lt;p&gt;Support 16-bit immediate operands for handling small constants + &lt;code class=&quot;language-text&quot;&gt;$zero&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lower Instruction count&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Design Principle 4&lt;/h3&gt;
&lt;h4&gt;Good design demands goog compromise&lt;/h4&gt;
&lt;p&gt;Keep all instructions the same length + keep instruction formats similar as possible.
Data (numbers) are also represented in binary based on two&apos;s complement rules.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Lower clock period or CPI&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[Addition and Subtraction]]></title><description><![CDATA[contents: 0-1. CA Intro Addition & Subtraction Addition: just do the binary addition with given numbers  Subtraction: do the binary addition…]]></description><link>https://minjun.blog/3-1. Addition and Subtraction/</link><guid isPermaLink="false">https://minjun.blog/3-1. Addition and Subtraction/</guid><pubDate>Tue, 13 Aug 2024 12:41:24 GMT</pubDate><content:encoded>&lt;p&gt;contents: &lt;a href=&quot;/0-1.%20CA%20Intro&quot; data-wiki-link=&quot;true&quot;&gt;0-1. CA Intro&lt;/a&gt;&lt;/p&gt;
&lt;h2&gt;Addition &amp;#x26; Subtraction&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Addition&lt;/strong&gt;: just do the binary addition with given numbers &lt;/br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Subtraction&lt;/strong&gt;: do the binary addition with the negation of the second operand&lt;/p&gt;
&lt;h3&gt;Half adder&lt;/h3&gt;
&lt;p&gt;1-bit adder without carry-input&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Input: two one bit-data A, B&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Output: sum(S), carry(C)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;Full adder&lt;/h3&gt;
&lt;p&gt;1-bit adder with carry-input&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Input: two one bit-data A, B, carry(C&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;mi&gt;n&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{in}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4617em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3117em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Output: sum(S), carry(C&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mrow&gt;&lt;mi&gt;o&lt;/mi&gt;&lt;mi&gt;u&lt;/mi&gt;&lt;mi&gt;t&lt;/mi&gt;&lt;/mrow&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_{out}&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4306em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.2806em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;u&lt;/span&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;t&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Circuit design for addition and subtraction&lt;/h2&gt;
&lt;h3&gt;N-bit parallel binary adder&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Initial carry input is 0&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The i-th adder waits for the carry until it is generated by the (i-1)-th adder&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/01%201.jpg&quot; alt=&quot;01 1.jpg&quot;&gt;&lt;/p&gt;
&lt;h3&gt;Adder with subtraction (in two&apos;s complement)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Subtract = 0 or 1 (if subtract == 1, B&lt;span class=&quot;math math-inline&quot;&gt;&lt;span class=&quot;katex&quot;&gt;&lt;span class=&quot;katex-mathml&quot;&gt;&lt;math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;&gt;&lt;semantics&gt;&lt;mrow&gt;&lt;msub&gt;&lt;mrow&gt;&lt;/mrow&gt;&lt;mi&gt;i&lt;/mi&gt;&lt;/msub&gt;&lt;/mrow&gt;&lt;annotation encoding=&quot;application/x-tex&quot;&gt;_i&lt;/annotation&gt;&lt;/semantics&gt;&lt;/math&gt;&lt;/span&gt;&lt;span class=&quot;katex-html&quot; aria-hidden=&quot;true&quot;&gt;&lt;span class=&quot;base&quot;&gt;&lt;span class=&quot;strut&quot; style=&quot;height:0.4617em;vertical-align:-0.15em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;mord&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;msupsub&quot;&gt;&lt;span class=&quot;vlist-t vlist-t2&quot;&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.3117em;&quot;&gt;&lt;span style=&quot;top:-2.55em;margin-right:0.05em;&quot;&gt;&lt;span class=&quot;pstrut&quot; style=&quot;height:2.7em;&quot;&gt;&lt;/span&gt;&lt;span class=&quot;sizing reset-size6 size3 mtight&quot;&gt;&lt;span class=&quot;mord mathnormal mtight&quot;&gt;i&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-s&quot;&gt;​&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;vlist-r&quot;&gt;&lt;span class=&quot;vlist&quot; style=&quot;height:0.15em;&quot;&gt;&lt;span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt; is inverted)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Subtract is also added as the initial carry (if subtract ==1, 1 is added)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;/attachments/02%201.jpg&quot; alt=&quot;02 1.jpg&quot;&gt;&lt;/p&gt;
&lt;h2&gt;Overflow&lt;/h2&gt;
&lt;p&gt;Overflow occurs when computation results are too large (out of range)&lt;/p&gt;
&lt;h3&gt;When does it occur?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Add two positives or negatives + the sign of result is different with sources&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Subtract a negative from a positive + the sign of result is 1&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Subtract a positive from a negative + the sign of result is 0&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;How to detect Overflow?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code class=&quot;language-text&quot;&gt;add, addi, sub&lt;/code&gt; instructions&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;They cause exceptions on overflow&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;    - A program jumps to predefined exception handler address&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;e.g., Fortran does not allow overflows. So MIPS Fortran compilers always use &lt;code class=&quot;language-text&quot;&gt;add, addi, sub&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;How to ignore Overflow?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Use &lt;code class=&quot;language-text&quot;&gt;addu, addui, subu&lt;/code&gt; instructions (u means unsigned)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;They do not cause exceptions on overflow&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;e.g., C ignores overflows. So MIPS C compilers always use &lt;code class=&quot;language-text&quot;&gt;addu, addui, subu&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item></channel></rss>