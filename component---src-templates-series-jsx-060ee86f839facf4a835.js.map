{"version":3,"file":"component---src-templates-series-jsx-060ee86f839facf4a835.js","mappings":"kNAYA,MAAMA,EAASC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,iBAAAC,YAAA,eAAVJ,CAAU,iDAMnBK,EAAQL,EAAAA,QAAOM,GAAEJ,WAAA,CAAAC,YAAA,gBAAAC,YAAA,eAATJ,CAAS,0GAKZO,GAASA,EAAMC,MAAMC,OAAOC,OAIjCC,EAAWX,EAAAA,QAAOY,GAAEV,WAAA,CAAAC,YAAA,mBAAAC,YAAA,eAATJ,CAAS,gKAOJO,GAASA,EAAMC,MAAMC,OAAOC,OACvCH,GAASA,EAAMC,MAAMC,OAAOI,iBAIjCC,EAAed,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAVJ,CAAU,sFAIpBO,GAASA,EAAMC,MAAMC,OAAOC,OAOjCK,EAAOf,EAAAA,QAAOgB,KAAId,WAAA,CAAAC,YAAA,eAAAC,YAAA,eAAXJ,CAAW,oCACbO,GAASA,EAAMC,MAAMC,OAAOQ,eAoCvC,UAhCeC,IAA4B,IAA3B,YAAEC,EAAW,KAAEC,GAAMF,EACnC,MAAMG,EAAaF,EAAYG,OACzBC,EAAQH,EAAKG,MAAMC,MAEzB,OACEC,EAAAA,cAACC,EAAAA,EAAM,KACLD,EAAAA,cAACE,EAAAA,EAAG,CACFC,MAAK,WAAaP,EAClBQ,YAAaA,EAAAA,YACbC,IAAKC,EAAAA,UAGPN,EAAAA,cAAC1B,EAAM,KACL0B,EAAAA,cAACd,EAAQ,KAAC,YACVc,EAAAA,cAACpB,EAAK,KAAC,IAAEgB,EAAW,KAEpBI,EAAAA,cAACX,EAAY,KACXW,EAAAA,cAAA,YAAOF,EAAMS,OAAO,UACpBP,EAAAA,cAAA,YAAM,KACNA,EAAAA,cAACV,EAAI,KAAC,mBACaQ,EAAMA,EAAMS,OAAS,GAAGC,YAAYC,OAIzDT,EAAAA,cAACU,EAAAA,EAAO,OAGVV,EAAAA,cAACW,EAAAA,EAAQ,CAACC,SAAUd,IACb,C","sources":["webpack://gatsby-starter-hoodie/./src/templates/Series.jsx"],"sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport styled from \"styled-components\"\n\nimport Layout from \"components/Layout\"\nimport SEO from \"components/SEO\"\nimport PostList from \"components/PostList\"\nimport Divider from \"components/Divider\"\n\nimport { description, siteUrl } from \"../../blog-config\"\n\nconst Header = styled.div`\n  @media (max-width: 768px) {\n    padding: 0px 15px;\n  }\n`\n\nconst Title = styled.h1`\n  margin-bottom: 15px;\n  line-height: 1.2;\n  font-size: 44.8px;\n  font-weight: bold;\n  color: ${props => props.theme.colors.text};\n  word-break: break-all;\n`\n\nconst Subtitle = styled.h3`\n  display: inline-block;\n  padding: 2px 3px;\n  margin-top: 32px;\n  margin-bottom: 8px;\n  font-size: 20px;\n  font-weight: bold;\n  background-color: ${props => props.theme.colors.text};\n  color: ${props => props.theme.colors.bodyBackground};\n  letter-spacing: -1px;\n`\n\nconst SeriesInform = styled.div`\n  display: flex;\n  align-items: center;\n  font-size: 16px;\n  color: ${props => props.theme.colors.text};\n\n  & > span {\n    margin: 0 3px;\n  }\n`\n\nconst Date = styled.span`\n  color: ${props => props.theme.colors.tertiaryText};\n  font-weight: lighter;\n`\n\nconst Series = ({ pageContext, data }) => {\n  const seriesName = pageContext.series\n  const posts = data.posts.nodes\n\n  return (\n    <Layout>\n      <SEO\n        title={`SERIES: ${seriesName}`}\n        description={description}\n        url={siteUrl}\n      />\n\n      <Header>\n        <Subtitle> SERIES </Subtitle>\n        <Title> {seriesName} </Title>\n\n        <SeriesInform>\n          <span>{posts.length} Posts</span>\n          <span>·</span>\n          <Date>\n            Last updated on {posts[posts.length - 1].frontmatter.date}\n          </Date>\n        </SeriesInform>\n\n        <Divider />\n      </Header>\n\n      <PostList postList={posts} />\n    </Layout>\n  )\n}\n\nexport default Series\n\nexport const pageQuery = graphql`\n  query BlogSeriesBySeriesName($series: String) {\n    posts: allMarkdownRemark(\n      sort: { order: ASC, fields: [frontmatter___date] }\n      filter: { frontmatter: { series: { eq: $series } } }\n    ) {\n      nodes {\n        excerpt(pruneLength: 200, truncate: true)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"YYYY년 MM월 DD일 HH:MM\")\n          updated(formatString: \"YYYY년 MM월 DD일 HH:MM\")\n          title\n          tags\n        }\n      }\n    }\n  }\n`\n"],"names":["Header","styled","div","withConfig","displayName","componentId","Title","h1","props","theme","colors","text","Subtitle","h3","bodyBackground","SeriesInform","Date","span","tertiaryText","_ref","pageContext","data","seriesName","series","posts","nodes","React","Layout","SEO","title","description","url","siteUrl","length","frontmatter","date","Divider","PostList","postList"],"sourceRoot":""}