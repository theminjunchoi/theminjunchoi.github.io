{"componentChunkName":"component---src-templates-post-jsx","path":"/2-3. Representing Instructions in computer/","result":{"data":{"site":{"siteMetadata":{"title":"minjun.blog"}},"markdownRemark":{"id":"a5f532e7-7d9b-5055-b14a-aaed0a9db9d2","excerpt":"contents: 0-1. CA Intro Common HW design for MIPS ISA HW design.jpg CPU, register, and memory Control unit (CU) directs the operation of the processor Arithmetic & logic unit (ALU) does the operation…","html":"<p>contents: <a href=\"/0-1.%20CA%20Intro\" data-wiki-link=\"true\">0-1. CA Intro</a></p>\n<h2>Common HW design for MIPS ISA</h2>\n<p><img src=\"/attachments/HW%20design.jpg\" alt=\"HW design.jpg\"></p>\n<p><strong>CPU, register, and memory</strong></p>\n<ul>\n<li>Control unit (CU) directs the operation of the processor</li>\n<li>Arithmetic &#x26; logic unit (ALU) does the operation</li>\n<li><code class=\"language-text\">$0, ..., $31</code> hold the value that will be used in the operation (called general purpose register)</li>\n<li>Program counter (PC) contains the memory address of the instruction will be executed</li>\n<li>Instruction register (IR) contains the current instruction</li>\n</ul>\n<p><strong>Execution of the instruction</strong></p>\n<ul>\n<li>Step 1 (fetch): CU says \"load the instruction from the memory address in PC to IR\"</li>\n<li>Step 2 (decode): CU says \"the instruction stored in IR means <code class=\"language-text\">ADD $s0, $s1, $s2</code></li>\n<li>Step 2 (execute): ALU does the add operation with the values in <code class=\"language-text\">$s1</code> and <code class=\"language-text\">$s2</code> and stores the computation result in <code class=\"language-text\">$s0</code></li>\n</ul>\n<h2>Operation</h2>\n<h3>Arithmetic operations</h3>\n<p><strong>Instructions for arithmetic</strong></p>\n<table>\n<thead>\n<tr>\n<th>Operation</th>\n<th>C    </th>\n<th>Java</th>\n<th>MIPS assembly language</th>\n<th>Example          </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Add      </td>\n<td>+    </td>\n<td>+    </td>\n<td><code class=\"language-text\">add</code> (R), <code class=\"language-text\">addi</code> (I)  </td>\n<td><code class=\"language-text\">add $t0, $t1, $t2</code></td>\n</tr>\n<tr>\n<td>Subtract  </td>\n<td>-    </td>\n<td>-    </td>\n<td><code class=\"language-text\">sub</code> (R)              </td>\n<td><code class=\"language-text\">sub $t0, $t1, $t2</code></td>\n</tr>\n</tbody>\n</table>\n<h3>Logical operations</h3>\n<p><strong>Instructions for bitwise manipulation</strong></p>\n<table>\n<thead>\n<tr>\n<th>Operation</th>\n<th>C</th>\n<th>Java</th>\n<th>MIPS assembly language</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Bitwise AND</td>\n<td>&#x26;</td>\n<td>&#x26;</td>\n<td><code class=\"language-text\">and</code>(R), <code class=\"language-text\">andi</code>(I)</td>\n<td><code class=\"language-text\">and $t0, $t1, $t2</code></td>\n</tr>\n<tr>\n<td>Bitwise OR</td>\n<td>|</td>\n<td>|</td>\n<td><code class=\"language-text\">or</code> (R), <code class=\"language-text\">ori</code>(I)</td>\n<td><code class=\"language-text\">or $t0, $t1, $t2</code></td>\n</tr>\n<tr>\n<td>Bitwise NOR</td>\n<td>~</td>\n<td>~</td>\n<td><code class=\"language-text\">nor</code>(R)</td>\n<td><code class=\"language-text\">nor $t0, $t1, $t2</code></td>\n</tr>\n</tbody>\n</table>\n<p>MIPS has no NOT instruction\nInstead, it has <strong>NOR R-type</strong> instruction</p>\n<ul>\n<li>a NOR b == NOT (a OR b)</li>\n<li>But, we can do the NOT operation with NOR: <code class=\"language-text\">nor $t0, $t1, $zero!</code></li>\n</ul>\n<p><img src=\"/attachments/nor.jpg\" alt=\"nor.jpg\"></p>\n<h3>Shift operations</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Operation</th>\n<th align=\"left\">C    </th>\n<th align=\"left\">Java</th>\n<th align=\"left\">MIPS assembly language</th>\n<th align=\"left\">Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Shift left  </td>\n<td align=\"left\">&#x3C;&#x3C;  </td>\n<td align=\"left\">&#x3C;&#x3C;&#x3C;  </td>\n<td align=\"left\"><code class=\"language-text\">sll</code> (R)</td>\n<td align=\"left\"><code class=\"language-text\">sll $s1, $s2, 10 ($s1 = $s2 &lt;&lt; 10)</code></td>\n</tr>\n<tr>\n<td align=\"left\">Shift right</td>\n<td align=\"left\">>>  </td>\n<td align=\"left\">>>>  </td>\n<td align=\"left\"><code class=\"language-text\">srl</code> (R)</td>\n<td align=\"left\"><code class=\"language-text\">srl $s1, $s2, 10 ($s1 = $s2 >> 10)</code></td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"/attachments/shift%20operation.jpg\" alt=\"shift operation.jpg\"></p>\n<ul>\n<li>shamt: how many positions to shift</li>\n<li>Shift left/right logical (sll / srl)\n<ul>\n<li>Shift left/right and fill with 0 bits</li>\n<li>(unsigned only) sll with i bits = multiply by <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span></span></li>\n<li>(unsigned only) srl with i bits = divide by <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><msup><mn>2</mn><mi>i</mi></msup></mrow><annotation encoding=\"application/x-tex\">2^i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8247em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8247em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">i</span></span></span></span></span></span></span></span></span></span></span></span></li>\n</ul>\n</li>\n</ul>\n<h3>Conditional operations</h3>\n<table>\n<thead>\n<tr>\n<th>Operation</th>\n<th>MIPS assembly language</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Conditional branch</td>\n<td><code class=\"language-text\">beq</code>(I)</td>\n<td><code class=\"language-text\">beq $t0, $t1, LABEL</code> (if <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mn>0</mn><mo>=</mo><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">t0 == </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">0</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">==</span></span></span></span></span>t1, goto LABEL)</td>\n</tr>\n<tr>\n<td></td>\n<td><code class=\"language-text\">bne</code>(I)</td>\n<td><code class=\"language-text\">bne $t0, $t1, LABEL</code> (if <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mn>0</mn><mo stretchy=\"false\">!</mo><mo>=</mo></mrow><annotation encoding=\"application/x-tex\">t0 != </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.6944em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">0</span><span class=\"mclose\">!</span><span class=\"mspace\" style=\"margin-right:0.2778em;\"></span><span class=\"mrel\">=</span></span></span></span></span>t1, goto LABEL)</td>\n</tr>\n<tr>\n<td>Unconditional branch</td>\n<td><code class=\"language-text\">j</code>(I)</td>\n<td><code class=\"language-text\">j LABEL</code> (goto LABEL)</td>\n</tr>\n</tbody>\n</table>\n<p><img src=\"/attachments/bne.jpg\" alt=\"bne.jpg\">\n<img src=\"/attachments/j-format.jpg\" alt=\"j-format.jpg\"></p>\n<p><strong>Instructions for making decisions</strong>\nUsually combined with goto statements and labels\nthere are no branch instructions like blt (less than) and bge (greater than or equal to)</p>\n<p><strong>Why?</strong></p>\n<ul>\n<li>Handling &#x3C;, >, &#x3C;=, >=, ... is slower and more complicate than =, !=</li>\n<li>It will cause increase of instruction count and clock period or CPI</li>\n</ul>\n<p><strong>Instead, MIPS provides others</strong></p>\n<table>\n<thead>\n<tr>\n<th>operation</th>\n<th>MIPS assembly language</th>\n<th>Example</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Set on less than</td>\n<td>slt(R), slti(I)</td>\n<td>slt <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mn>0</mn><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">t0, </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">0</span><span class=\"mpunct\">,</span></span></span></span></span>t1, <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mn>2</mn><mo stretchy=\"false\">(</mo><mi>i</mi><mi>f</mi></mrow><annotation encoding=\"application/x-tex\">t2 (if </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\" style=\"margin-right:0.10764em;\">f</span></span></span></span></span>t1 &#x3C; <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>t</mi><mn>2</mn><mo separator=\"true\">,</mo></mrow><annotation encoding=\"application/x-tex\">t2, </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.8389em;vertical-align:-0.1944em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord\">2</span><span class=\"mpunct\">,</span></span></span></span></span>t0 = 1; else $t0 = 0)</td>\n</tr>\n</tbody>\n</table>\n<p><strong>slt is used in combination with beq and bne</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">slt $t0, $t1, $t2\nbne $t0, $zero, LABEL\nbeq $t0, $zero, LABEL</code></pre></div>","frontmatter":{"title":"Representing Instructions in computer","date":"2024년 07월 31일 15:07","updated":"2025년 07월 10일 15:07","tags":["study","컴퓨터구조"],"series":null},"fields":{"slug":"/2-3. Representing Instructions in computer/","readingTime":{"minutes":3.215}}},"seriesList":{"edges":[{"node":{"id":"42bf5959-adba-55bb-a6ed-6347a22b7298","fields":{"slug":"/nuxt-katex/"},"frontmatter":{"title":"Nuxt content에 Mathtype 사용하기"}}},{"node":{"id":"7fc729dc-de56-5f85-a363-123afedc0e55","fields":{"slug":"/ZeroPage_지금그때_2022/"},"frontmatter":{"title":"2022 ZeroPage 지금그때"}}},{"node":{"id":"f8f7470f-000c-592f-9791-14400e103d5a","fields":{"slug":"/readme/"},"frontmatter":{"title":"README"}}},{"node":{"id":"d5272324-e922-5bdd-a8c3-90c1acb79b2f","fields":{"slug":"/why-obsidian/"},"frontmatter":{"title":"기존 블로그 대신 Obsidian을 택한 이유"}}},{"node":{"id":"4104488d-e257-5e42-896e-87f41761a795","fields":{"slug":"/0-1. CA Intro/"},"frontmatter":{"title":"Computer Architecture Intro"}}},{"node":{"id":"30fcde9e-20bd-5555-9560-ca0136d7d30f","fields":{"slug":"/0-2. CA Overview/"},"frontmatter":{"title":"CA Overview"}}},{"node":{"id":"6ce32435-2247-5f01-b7ae-30c6a72bdb9e","fields":{"slug":"/1-1. Defining Performance/"},"frontmatter":{"title":"Defining Performance"}}},{"node":{"id":"a9a2aee1-bbfd-5d10-984d-8ccc1473c416","fields":{"slug":"/1-2. Measuring Performance/"},"frontmatter":{"title":"Measuring Performance"}}},{"node":{"id":"62397c00-742b-5787-91b0-ac2bf4f89c1b","fields":{"slug":"/2-1. Designing principles 1~3 of MIPS ISA/"},"frontmatter":{"title":"Design principles 1~3 of MIPS ISA"}}},{"node":{"id":"4af0bcf6-9fee-5cf3-b1c9-b7b5835d8770","fields":{"slug":"/2-2. Design principles 4 of MIPS ISA/"},"frontmatter":{"title":"Design principles 4 of MIPS ISA"}}},{"node":{"id":"a5f532e7-7d9b-5055-b14a-aaed0a9db9d2","fields":{"slug":"/2-3. Representing Instructions in computer/"},"frontmatter":{"title":"Representing Instructions in computer"}}},{"node":{"id":"d9e769a8-0177-562e-a139-894ce27dcce6","fields":{"slug":"/2-4. Supporting procedures in computer HW/"},"frontmatter":{"title":"Supporting procedures in computer HW"}}},{"node":{"id":"739cb579-ef60-52a7-a84f-443e55d9fbd1","fields":{"slug":"/2-5. MIPS memory allocation & addressing/"},"frontmatter":{"title":"MIPS memory allocation & addressing"}}},{"node":{"id":"d87f2a2c-3c02-5edc-a6b6-e3433578add0","fields":{"slug":"/3-1. Addition and Subtraction/"},"frontmatter":{"title":"Addition and Subtraction"}}},{"node":{"id":"ebbf8c5b-a2bd-5064-a19f-6bdc33c974a4","fields":{"slug":"/3-2. Multiplication/"},"frontmatter":{"title":"Multiplication"}}},{"node":{"id":"b56fb71a-95a2-517d-9081-511b86a2f657","fields":{"slug":"/3-3. Division/"},"frontmatter":{"title":"Division"}}},{"node":{"id":"b937d69d-1c63-5872-b7ac-2b1fb0042cc4","fields":{"slug":"/4-1. Processor Overview/"},"frontmatter":{"title":"Processor Overview"}}},{"node":{"id":"ed6e43e5-a2df-59f6-be3d-c464f14c0530","fields":{"slug":"/4-2. Controlling a datapath/"},"frontmatter":{"title":"Controlling a datapath"}}},{"node":{"id":"e534d64c-5713-536b-8872-8333d169670a","fields":{"slug":"/4-3. A single-cycle datapath/"},"frontmatter":{"title":"A single-cycle datapath"}}},{"node":{"id":"a6701aa1-cb00-5e8e-b3d6-c536fab41e8b","fields":{"slug":"/4-4. Pipelining overview/"},"frontmatter":{"title":"Pipelining overview"}}},{"node":{"id":"1fcf23d9-0d39-57a9-aad6-d5354378e3e2","fields":{"slug":"/4-5. Handling hazards/"},"frontmatter":{"title":"Handling hazards"}}},{"node":{"id":"b3fc2b84-3be0-5b73-a339-cd42ef995cfc","fields":{"slug":"/4-6. Exceptions/"},"frontmatter":{"title":"Exceptions"}}},{"node":{"id":"579ead23-f5d4-5b7b-9a0f-125b86fd6678","fields":{"slug":"/5-1. Cache overview/"},"frontmatter":{"title":"Cache overview"}}},{"node":{"id":"54b7e29f-b59a-5f90-a9f7-a097eb9d71da","fields":{"slug":"/5-2. Improving cache performance/"},"frontmatter":{"title":"Improving cache performance"}}},{"node":{"id":"449ab907-aecb-5a4a-a143-ba9fe16f212b","fields":{"slug":"/5-3. Virtual memory Part 1/"},"frontmatter":{"title":"Virtual memory Part 1"}}},{"node":{"id":"f757510a-442a-55e1-a52e-52bea333756d","fields":{"slug":"/5-4. Virtual memory Part 2/"},"frontmatter":{"title":"Virtual memory Part 2"}}},{"node":{"id":"b67fe3d6-c0bd-51a6-a205-771b3f728a7d","fields":{"slug":"/interesting topic among sigchi 2024/"},"frontmatter":{"title":"sigchi 2024 관심 주제"}}},{"node":{"id":"56ad90a2-6eb5-5ba6-9785-36a854dc09c1","fields":{"slug":"/Respiratory Sound Database 유효성 분석/"},"frontmatter":{"title":"Respiratory Sound Database 유효성 분석"}}},{"node":{"id":"92c89d1b-e219-5dd0-af89-a3e7b13b5697","fields":{"slug":"/우아한테크코스_7기_BE_프리코스_1주차_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 프리코스 1주차 회고"}}},{"node":{"id":"c9026e49-4fc7-552d-9335-15b0e60c5753","fields":{"slug":"/우아한테크코스_7기_BE_프리코스_2주차_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 프리코스 2주차 회고"}}},{"node":{"id":"9f4f37ab-c5ad-5670-9f13-227e12f0ec1e","fields":{"slug":"/우아한테크코스_7기_BE_프리코스_3주차_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 프리코스 3주차 회고"}}},{"node":{"id":"455b72bd-1d68-5108-bc7a-c929a02cea02","fields":{"slug":"/우아한테크코스_7기_BE_프리코스_4주차_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 프리코스 4주차 회고"}}},{"node":{"id":"a20dad6a-f970-5208-83a9-7d6df1d9a35a","fields":{"slug":"/mobile spirometry 관련 자료/"},"frontmatter":{"title":"mobile spirometry 관련 논문"}}},{"node":{"id":"d49afac2-bf1e-5cc6-87f3-d722d867bcd4","fields":{"slug":"/스마트기기 내장 마이크기반 폐질환 진단기기 개발/"},"frontmatter":{"title":"논문 요약 - 스마트기기 내장 마이크기반 폐질환 진단기기 개발"}}},{"node":{"id":"f9ec4dcc-5e06-5216-a094-b4504c8d8028","fields":{"slug":"/spirosmart/"},"frontmatter":{"title":"논문 요약 - SpiroSmart: Using a Microphone to Measure\rLung Function on a Mobile Phone"}}},{"node":{"id":"05a766d5-0438-59c4-b291-59f60607988b","fields":{"slug":"/20241122_미팅내용정리/"},"frontmatter":{"title":"11/22 폐음연구 관련 미팅 내용 정리"}}},{"node":{"id":"a3f641d2-fd6a-5e57-bc47-29eaf0b499e3","fields":{"slug":"/ZeroPage_지금그때_2024/"},"frontmatter":{"title":"2024 ZeroPage 지금그때"}}},{"node":{"id":"0c07dd55-12a1-5d8c-9e6c-c8f4d40453b3","fields":{"slug":"/폐기능검사_지침_요약/"},"frontmatter":{"title":"폐음연구 - 폐기능검사 지침 요약"}}},{"node":{"id":"398c98b1-0496-536e-aeb5-088f063ab920","fields":{"slug":"/20241220_분당서울대병원_참관/"},"frontmatter":{"title":"12/20 분당서울대병원 폐기능 검사실 참관"}}},{"node":{"id":"ae45b7bc-f495-577f-a7e1-071a99f82620","fields":{"slug":"/우테코 git/"},"frontmatter":{"title":"우아한테크코스 GitHub"}}},{"node":{"id":"85dc5324-9611-5ff8-a0f1-bf6a22eb4335","fields":{"slug":"/daily_easy_english_expression_summary/"},"frontmatter":{"title":"Daily Easy English Expression"}}},{"node":{"id":"3eb58153-afe0-5d52-a81f-2cb59b028f11","fields":{"slug":"/우아한테크코스 레벨1 고민거리와 자료들/"},"frontmatter":{"title":"우아한테크코스 레벨1 고민거리와 자료들"}}},{"node":{"id":"ea3c6223-2692-5c98-bb92-e2dc93e551c1","fields":{"slug":"/우아한테크코스_7기_BE_레벨1_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 레벨1 회고"}}},{"node":{"id":"5122772d-9cec-51cd-966a-66a9d1bb4c2d","fields":{"slug":"/spring-mvc-dispatcherservlet/"},"frontmatter":{"title":"Understanding DispatcherServlet in Spring MVC"}}},{"node":{"id":"0eaf5ac6-8b17-54cf-8c8a-b5e9cd31368b","fields":{"slug":"/how-spring-injects-httpsession/"},"frontmatter":{"title":"How Spring Injects HttpSession"}}},{"node":{"id":"e971a6f2-daaa-5ed1-a9aa-f99c52972162","fields":{"slug":"/우아한테크코스_7기_BE_레벨2_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 레벨2 회고"}}},{"node":{"id":"0822585b-79bf-5ce3-b125-90763fa797cf","fields":{"slug":"/how-spring-handle-websocket/"},"frontmatter":{"title":"How Spring Handle WebSocket"}}}]},"previous":{"fields":{"slug":"/2-2. Design principles 4 of MIPS ISA/"},"frontmatter":{"title":"Design principles 4 of MIPS ISA"}},"next":{"fields":{"slug":"/2-4. Supporting procedures in computer HW/"},"frontmatter":{"title":"Supporting procedures in computer HW"}}},"pageContext":{"id":"a5f532e7-7d9b-5055-b14a-aaed0a9db9d2","series":null,"previousPostId":"4af0bcf6-9fee-5cf3-b1c9-b7b5835d8770","nextPostId":"d9e769a8-0177-562e-a139-894ce27dcce6"}},"staticQueryHashes":[],"slicesMap":{}}