{"componentChunkName":"component---src-pages-series-jsx","path":"/series/","result":{"data":{"site":{"siteMetadata":{"title":"minjun.blog"}},"allMarkdownRemark":{"group":[{"fieldValue":"Katex","totalCount":1},{"fieldValue":"Nuxt","totalCount":1},{"fieldValue":"club","totalCount":2},{"fieldValue":"obsidian","totalCount":1},{"fieldValue":"research","totalCount":2},{"fieldValue":"study","totalCount":22},{"fieldValue":"컴퓨터구조","totalCount":22},{"fieldValue":"폐음연구","totalCount":1},{"fieldValue":"회고","totalCount":4}],"nodes":[{"excerpt":"기존 HCSLAB 폐음 연구팀에서 사용하던 데이터의 질이 좋지 않아 다른 폐음 데이터셋을 찾던 와중 ICBHI Respiratory Sound Database (The Respiratory Sound database - ICBHI 2017 Challenge)을 발견했…","fields":{"slug":"/Respiratory Sound Database 유효성 분석/"},"frontmatter":{"date":"2024년 10월 13일 12:10","updated":"2024년 10월 17일 10:10","title":"Respiratory Sound Database 유효성 분석","tags":["research","폐음연구"],"series":null}},{"excerpt":"SIGCHI 2024 1. Touching the Moon: Leveraging Passive Haptics, Embodiment and Presence for Operational Assessments in Virtual Reality Intro 요약 다시금 달에 …","fields":{"slug":"/interesting topic among sigchi 2024/"},"frontmatter":{"date":"2024년 09월 07일 12:09","updated":"2024년 10월 13일 22:10","title":"sigchi 2024 관심 주제","tags":["research"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Integrating TLB, Cache, Memory Aliasing in virtually addressed cache The same virtual address of different processes can be m…","fields":{"slug":"/5-4. Virtual memory Part 2/"},"frontmatter":{"date":"2024년 08월 24일 12:08","updated":"2024년 10월 12일 22:10","title":"Virtual memory Part 2","tags":["컴퓨터구조","study"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Main challenge in using main memory In multi-process environments, multiple processes share main memory at the same time. So …","fields":{"slug":"/5-3. Virtual memory Part 1/"},"frontmatter":{"date":"2024년 08월 23일 12:08","updated":"2024년 10월 12일 22:10","title":"Virtual memory Part 1","tags":["컴퓨터구조","study"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Associative caches Support more flexible placement of blocks\n Fully associative cache A cache structure in which a block can …","fields":{"slug":"/5-2. Improving cache performance/"},"frontmatter":{"date":"2024년 08월 22일 12:08","updated":"2024년 10월 12일 21:10","title":"Improving cache performance","tags":["컴퓨터구조","study"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Memory hierarchy Locality Temporal locality     - Items accessed recently are likely to be accessed again soon Spatial locali…","fields":{"slug":"/5-1. Cache overview/"},"frontmatter":{"date":"2024년 08월 21일 12:08","updated":"2024년 10월 12일 21:10","title":"Cache overview","tags":["컴퓨터구조","study"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Code scheduling There are three types of critical dependencies Read after write Write after read Write after write If two ins…","fields":{"slug":"/4-6. Exceptions/"},"frontmatter":{"date":"2024년 08월 20일 12:08","updated":"2024년 10월 12일 21:10","title":"Exceptions","tags":["컴퓨터구조","study"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Pipelined datapath We need registers between stages to hold information produced in previous stage and make isolation\n Data h…","fields":{"slug":"/4-5. Handling hazards/"},"frontmatter":{"date":"2024년 08월 19일 12:08","updated":"2024년 10월 12일 21:10","title":"Handling hazards","tags":["컴퓨터구조","study"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Because the longest delay determines clock period, a single-cycle implementation is not used today  It violates \"make the com…","fields":{"slug":"/4-4. Pipelining overview/"},"frontmatter":{"date":"2024년 08월 18일 12:08","updated":"2024년 10월 12일 21:10","title":"Pipelining overview","tags":["컴퓨터구조","study"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Single-cyle datapath \n  A single-cycle datapath executes instructions in one clock cycle with a clocking methodology.  We wil…","fields":{"slug":"/4-3. A single-cycle datapath/"},"frontmatter":{"date":"2024년 08월 17일 12:08","updated":"2024년 10월 12일 21:10","title":"A single-cycle datapath","tags":["컴퓨터구조","study"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Controlling a datapath main control Control signals are derived from given instructions\n  is always being read  is being read…","fields":{"slug":"/4-2. Controlling a datapath/"},"frontmatter":{"date":"2024년 08월 16일 12:08","updated":"2024년 10월 12일 21:10","title":"Controlling a datapath","tags":["컴퓨터구조","study"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Case I will focus on handling a subset of core MIPS instructions (MIPS subset) The arithmetic-logical instructions: , , , ,  …","fields":{"slug":"/4-1. Processor Overview/"},"frontmatter":{"date":"2024년 08월 15일 12:08","updated":"2024년 10월 12일 21:10","title":"Processor Overview","tags":["컴퓨터구조","study"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Division If the length of Dividend and Divisor is M and N,  the length of Quotient  M - N + 1 & the length of Remainder  N In…","fields":{"slug":"/3-3. Division/"},"frontmatter":{"date":"2024년 08월 14일 14:08","updated":"2024년 10월 12일 21:10","title":"Division","tags":["study","컴퓨터구조"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Multiplication If a multiplicand and a multiplier have m and n digits, the product has at most m + n digits MIPS-based comput…","fields":{"slug":"/3-2. Multiplication/"},"frontmatter":{"date":"2024년 08월 14일 12:08","updated":"2024년 10월 12일 21:10","title":"Multiplication","tags":["컴퓨터구조","study"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Addition & Subtraction Addition: just do the binary addition with given numbers  Subtraction: do the binary addition with the…","fields":{"slug":"/3-1. Addition and Subtraction/"},"frontmatter":{"date":"2024년 08월 13일 12:08","updated":"2024년 10월 12일 20:10","title":"Addition and Subtraction","tags":["study","컴퓨터구조"],"series":null}},{"excerpt":"contents: 0-1. CA Intro MIPS memory allocation To avoid the overlap for managing memory, we use stack, heap, and static space. Stack During the proce…","fields":{"slug":"/2-5. MIPS memory allocation & addressing/"},"frontmatter":{"date":"2024년 08월 08일 12:08","updated":"2024년 10월 12일 20:10","title":"MIPS memory allocation & addressing","tags":["컴퓨터구조","study"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Procedures Functions in a program Procedures do calling / returning with other procedures A procedure (caller) calls another …","fields":{"slug":"/2-4. Supporting procedures in computer HW/"},"frontmatter":{"date":"2024년 08월 07일 12:08","updated":"2024년 10월 12일 20:10","title":"Supporting procedures in computer HW","tags":["컴퓨터구조","study"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Common HW design for MIPS ISA  CPU, register, and memory Control unit (CU) directs the operation of the processor Arithmetic …","fields":{"slug":"/2-3. Representing Instructions in computer/"},"frontmatter":{"date":"2024년 07월 31일 15:07","updated":"2024년 10월 12일 20:10","title":"Representing Instructions in computer","tags":["study","컴퓨터구조"],"series":null}},{"excerpt":"contents: 0-1. CA Intro The assembly language that has been studied so far is not a form that the processor can understand. Therefore, we need to enc…","fields":{"slug":"/2-2. Design principles 4 of MIPS ISA/"},"frontmatter":{"date":"2024년 07월 31일 15:07","updated":"2024년 07월 31일 15:07","title":"Design principles 4 of MIPS ISA","tags":["study","컴퓨터구조"],"series":null}},{"excerpt":"contents: 0-1. CA Intro MIPS ISA What is MIPS ISA Microprocessor without Interlocked Pipelined Stages A kind of ISA Design principles Simplicity favo…","fields":{"slug":"/2-1. Designing principles 1~3 of MIPS ISA/"},"frontmatter":{"date":"2024년 07월 22일 16:07","updated":"2024년 07월 31일 15:07","title":"Design principles 1~3 of MIPS ISA","tags":["study","컴퓨터구조"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Measuring CPU performance Clock period: the duration of a clock cycle How long the computer takes to perform a single basic o…","fields":{"slug":"/1-2. Measuring Performance/"},"frontmatter":{"date":"2024년 07월 22일 15:07","updated":"2024년 08월 02일 15:08","title":"Measuring Performance","tags":["study","컴퓨터구조"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Two metrics for defining computer performances Response time The time between the start and completion of a task related to s…","fields":{"slug":"/1-1. Defining Performance/"},"frontmatter":{"date":"2024년 07월 22일 15:07","updated":"2024년 07월 31일 15:07","title":"Defining Performance","tags":["study","컴퓨터구조"],"series":null}},{"excerpt":"contents: 0-1. CA Intro Below your program A simplified view of hardware and software Applications software Written in high-level language Systems so…","fields":{"slug":"/0-2. CA Overview/"},"frontmatter":{"date":"2024년 07월 22일 14:07","updated":"2024년 07월 31일 15:07","title":"CA Overview","tags":["study","컴퓨터구조"],"series":null}},{"excerpt":"Course Description 본 스터디에서는 컴퓨터 시스템이 어떻게 구성되어있고 디자인되어있는지 공부합니다.\n특히 CPU, memory를 포함한 하드웨어 시스템에 적용되고 있는 디자인 특성들을 알아봅니다. Prerequisites and Co-requisites…","fields":{"slug":"/0-1. CA Intro/"},"frontmatter":{"date":"2024년 07월 22일 12:07","updated":"2024년 07월 22일 15:07","title":"Computer Architecture Intro","tags":["study","컴퓨터구조"],"series":null}},{"excerpt":"지난 회고: retrospect-2023 어느덧 24년 상반기가 지나갔다. 2주 전에 전역도 하고 한창 바쁘게 살고 있는 요즘이다. 물론 공부를 그렇게 한다는 건 아니고 자취 준비도 하고 못 만났던 사람들도 열심히 만나고 있다. 학교는 아직 4차 학기밖에 안 끝낸 상…","fields":{"slug":"/retrospect-2024-1/"},"frontmatter":{"date":"2024년 07월 20일 20:07","updated":"2024년 07월 22일 14:07","title":"2024년 상반기 회고","tags":["회고"],"series":"기록과 방향성에 대한 회고"}},{"excerpt":"항상 기록의 중요성을 느끼고 있었다. 내가 어떤 걸 배우고 해냈다라는 걸 뽑내기 보다는 내 생각들과 학습한 내용들을 구조화해서 나중에 다시 쉽게 찾아볼 수 있도록, 그리고 그게 또 하나의 내 자산이 되기를 원했다. 그래서 제작년부터 이런 저런 툴을 사용해보며 블로깅을…","fields":{"slug":"/why-obsidian/"},"frontmatter":{"date":"2024년 01월 10일 13:01","updated":"2024년 01월 11일 23:01","title":"기존 블로그 대신 Obsidian을 택한 이유","tags":["obsidian"],"series":null}},{"excerpt":"지난 회고: retrospect-2022-2 이제 막 옵시디언으로 넘어왔는데 이 글이 옵시디언으로 기록하는 첫 번째 글이 되지 않을까싶다. 원래 2023년은 군대로 모든 시간을 보내서 회고를 안쓰려고 했는데 오늘이 입대한 지 딱 1년이 됐고, 그 1년동안 내가 무슨 …","fields":{"slug":"/retrospect-2023/"},"frontmatter":{"date":"2024년 01월 08일 12:01","updated":"2024년 07월 20일 20:07","title":"2023년 회고","tags":["회고"],"series":"기록과 방향성에 대한 회고"}},{"excerpt":"😄 Introduction Hi! I'm Minjun Choi, I constantly reflect on whether the services I create are solving problems effectively and making a positive impa…","fields":{"slug":"/readme/"},"frontmatter":{"date":"2024년 01월 01일 22:01","updated":"2024년 08월 27일 11:08","title":"README","tags":null,"series":null}},{"excerpt":"기존 블로그에서 이전해온 글입니다. 지난 회고: retrospect-2022-1 들어가기 전에 어느덧 연말이 다가왔다. 상반기 회고를 쓴 게 엊그제 같은데 다시금 회고를 써야한다는 것을 깨닫고 나서야 연말이 다가왔음을 느꼈다.\n2022년 하반기 회고를 작성하기 전에,…","fields":{"slug":"/retrospect-2022-2/"},"frontmatter":{"date":"2022년 12월 23일 12:12","updated":"2024년 07월 20일 20:07","title":"2022년 하반기 회고","tags":["회고"],"series":"기록과 방향성에 대한 회고"}},{"excerpt":"기존 블로그에서 이전해온 글입니다. What is 지금그때? ZeroPage.svg 현재 내가 32대 회장단으로 있는 중앙대학교 소프트웨어학부 학술동아리 ZeroPage에는 매년 주기적으로 열리는 행사가 크게 4개가 있다. 오늘은 마지막 행사인 '지금그때'를 진행했다…","fields":{"slug":"/after-jigeumgeuddae/"},"frontmatter":{"date":"2022년 11월 26일 20:11","updated":"2024년 06월 24일 22:06","title":"2022 ZeroPage 지금그때","tags":["club"],"series":null}},{"excerpt":"기존 블로그에서 이전해온 글입니다.  삽질 배경 내 개인페이지는 올해 초에 처음 개발되기 시작했었다. 그때도 markdown에 수식을 적용하기 위해 이것저것 시도해보다가 포기했었는데 며칠 전부터 스터디 페이지를 개발하면서 markdown에 수식을 적어야 할 일이 또 …","fields":{"slug":"/nuxt-katex/"},"frontmatter":{"date":"2022년 09월 13일 22:09","updated":"2024년 10월 12일 20:10","title":"Nuxt content에 Mathtype 사용하기","tags":["Nuxt","Katex"],"series":null}},{"excerpt":"기존 블로그에서 이전해온 글입니다. 들어가기전에 이 글을 작성하는 오늘은 9월 5일, 하반기에 접어들고 벌써 2학년 2학기를 이제 막 시작하는 날이다.\n사실 회고를 작성해야겠다고 생각한 건 꽤 오래되었다. 내가 그동안 어떤 생각을 했고 어떻게 그것들을 달성해나갔는지 …","fields":{"slug":"/retrospect-2022-1/"},"frontmatter":{"date":"2022년 09월 05일 12:09","updated":"2024년 07월 20일 20:07","title":"2022년 상반기 회고","tags":["회고","club"],"series":"기록과 방향성에 대한 회고"}}]}},"pageContext":{}},"staticQueryHashes":[],"slicesMap":{}}