{"componentChunkName":"component---src-templates-post-jsx","path":"/3-3. Division/","result":{"data":{"site":{"siteMetadata":{"title":"minjun.blog"}},"markdownRemark":{"id":"b56fb71a-95a2-517d-9081-511b86a2f657","excerpt":"contents: 0-1. CA Intro Division If the length of Dividend and Divisor is M and N,  the length of Quotient  M - N + 1 & the length of Remainder  N In MIPS-based computers, 32 bits are used to represe…","html":"<p>contents: <a href=\"/0-1.%20CA%20Intro\" data-wiki-link=\"true\">0-1. CA Intro</a></p>\n<h2>Division</h2>\n<p>If the length of Dividend and Divisor is <strong>M</strong> and <strong>N</strong>, </br></p>\n<p>the length of Quotient <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≦</mo></mrow><annotation encoding=\"application/x-tex\">\\leqq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0117em;vertical-align:-0.2558em;\"></span><span class=\"mrel amsrm\">≦</span></span></span></span></span> M - N + 1 &#x26; the length of Remainder <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≦</mo></mrow><annotation encoding=\"application/x-tex\"> \\leqq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0117em;vertical-align:-0.2558em;\"></span><span class=\"mrel amsrm\">≦</span></span></span></span></span> N</p>\n<ul>\n<li>In MIPS-based computers, 32 bits are used to represent both Dividend and Divisor. </br>Therefore, the length of both Quotient and Remainder <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>≦</mo></mrow><annotation encoding=\"application/x-tex\">\\leqq</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.0117em;vertical-align:-0.2558em;\"></span><span class=\"mrel amsrm\">≦</span></span></span></span></span> 32</li>\n</ul>\n</br>\n<h3>Optimized version of the division HW</h3>\n<ul>\n<li>\n<p>32-bit divisor register / ALU</p>\n</li>\n<li>\n<p>64-bit remainder register (dividend and quotient shares a register with remainder)</p>\n</li>\n</ul>\n<p>    - <code class=\"language-text\">HI</code>: Remainder</p>\n<p>    - <code class=\"language-text\">LO</code>: Quotient\n<img src=\"/attachments/01%203.jpg\" alt=\"01 3.jpg\"></p>\n</br>\n<h3>Settings</h3>\n<ul>\n<li>\n<p>0 is stored in the left half of the Remainder register</p>\n</li>\n<li>\n<p>The value of dividend is loaded into the right half of the Remainder register</p>\n</li>\n<li>\n<p>The value of divisor is loaded into the Divisor register</p>\n</li>\n</ul>\n</br>\n<h3>Division Algorithm</h3>\n<p><img src=\"/attachments/02%203.jpg\" alt=\"02 3.jpg\"></p>\n</br>\n<h4>Example</h4>\n<p>When N = 4 (4-bit ALU / divisor, 8-bit product), <span class=\"math math-inline\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mn>7</mn><mo>÷</mo><mn>3</mn></mrow><annotation encoding=\"application/x-tex\">7 \\div 3</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.7278em;vertical-align:-0.0833em;\"></span><span class=\"mord\">7</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">÷</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.6444em;\"></span><span class=\"mord\">3</span></span></span></span></span></p>\n<ul>\n<li>should be <strong>repeated as many bits + 1 as it is</strong></li>\n</ul>\n<p><img src=\"/attachments/03%202.jpg\" alt=\"03 2.jpg\"></p>\n</br>\n<h3>Signed division</h3>\n<p>Do division after converting both divisor &#x26; dividend to positives </br></p>\n<p>After the division</p>\n<ul>\n<li>\n<p>Negate the quotient only if the signs of the divisor and dividend are different</p>\n</li>\n<li>\n<p>Remainder's sign follows Dividend's sign</p>\n</li>\n</ul>\n</br>\n<h3>Instructions</h3>\n<ul>\n<li><code class=\"language-text\">div rs, rt / divu rs, rt</code> : do <code class=\"language-text\">$rs</code> / <code class=\"language-text\">$st</code></li>\n</ul>\n<p>    - The result (remainder and quotient) is stored in <code class=\"language-text\">HI</code> / <code class=\"language-text\">LO</code></p>\n<p>    - No overflow or divide-by-0 checking\n<img src=\"/attachments/04%202.jpg\" alt=\"04 2.jpg\"></p>\n</br>\n<h4>Example:</h4>\n<ul>\n<li>\n<p>Initially, the value in <code class=\"language-text\">$t0</code> (dividend) is loaded into the <code class=\"language-text\">LO</code> register</p>\n</li>\n<li>\n<p>Initially, <code class=\"language-text\">$t</code> (divisor) is used as the divisor register</p>\n</li>\n<li>\n<p>Then, do the division and store the remainder and quotient to <code class=\"language-text\">HI</code> and <code class=\"language-text\">LO</code> registers</p>\n</li>\n</ul>\n<h2>Summary: Design for arithmetic operations</h2>\n<h3>Addition &#x26; Subtraction</h3>\n<p>Use the same HW for addition and subtraction</p>\n<ul>\n<li>\n<p>32-bit parallel adder</p>\n</li>\n<li>\n<p>Additional XOR operators + subtract bit</p>\n</li>\n</ul>\n<p><img src=\"/attachments/05%202.jpg\" alt=\"05 2.jpg\">\n</br></p>\n<h3>Multiplication &#x26; Division</h3>\n<p>Use the same optimized HW for Multiplication and Division</p>\n<ul>\n<li>\n<p>A single 32-bit register for multiplicand and divisor</p>\n</li>\n<li>\n<p>A single 32-bit <code class=\"language-text\">ALU</code></p>\n</li>\n<li>\n<p><code class=\"language-text\">HI</code> and <code class=\"language-text\">LO</code> registers for the results of multiplication and division</p>\n</li>\n</ul>\n<p><img src=\"/attachments/06%201.jpg\" alt=\"06 1.jpg\"></p>","frontmatter":{"title":"Division","date":"2024년 08월 14일 14:08","updated":"2025년 07월 10일 15:07","tags":["study","컴퓨터구조"],"series":null},"fields":{"slug":"/3-3. Division/","readingTime":{"minutes":1.845}}},"seriesList":{"edges":[{"node":{"id":"42bf5959-adba-55bb-a6ed-6347a22b7298","fields":{"slug":"/nuxt-katex/"},"frontmatter":{"title":"Nuxt content에 Mathtype 사용하기"}}},{"node":{"id":"7fc729dc-de56-5f85-a363-123afedc0e55","fields":{"slug":"/ZeroPage_지금그때_2022/"},"frontmatter":{"title":"2022 ZeroPage 지금그때"}}},{"node":{"id":"f8f7470f-000c-592f-9791-14400e103d5a","fields":{"slug":"/readme/"},"frontmatter":{"title":"README"}}},{"node":{"id":"d5272324-e922-5bdd-a8c3-90c1acb79b2f","fields":{"slug":"/why-obsidian/"},"frontmatter":{"title":"기존 블로그 대신 Obsidian을 택한 이유"}}},{"node":{"id":"4104488d-e257-5e42-896e-87f41761a795","fields":{"slug":"/0-1. CA Intro/"},"frontmatter":{"title":"Computer Architecture Intro"}}},{"node":{"id":"30fcde9e-20bd-5555-9560-ca0136d7d30f","fields":{"slug":"/0-2. CA Overview/"},"frontmatter":{"title":"CA Overview"}}},{"node":{"id":"6ce32435-2247-5f01-b7ae-30c6a72bdb9e","fields":{"slug":"/1-1. Defining Performance/"},"frontmatter":{"title":"Defining Performance"}}},{"node":{"id":"a9a2aee1-bbfd-5d10-984d-8ccc1473c416","fields":{"slug":"/1-2. Measuring Performance/"},"frontmatter":{"title":"Measuring Performance"}}},{"node":{"id":"62397c00-742b-5787-91b0-ac2bf4f89c1b","fields":{"slug":"/2-1. Designing principles 1~3 of MIPS ISA/"},"frontmatter":{"title":"Design principles 1~3 of MIPS ISA"}}},{"node":{"id":"4af0bcf6-9fee-5cf3-b1c9-b7b5835d8770","fields":{"slug":"/2-2. Design principles 4 of MIPS ISA/"},"frontmatter":{"title":"Design principles 4 of MIPS ISA"}}},{"node":{"id":"a5f532e7-7d9b-5055-b14a-aaed0a9db9d2","fields":{"slug":"/2-3. Representing Instructions in computer/"},"frontmatter":{"title":"Representing Instructions in computer"}}},{"node":{"id":"d9e769a8-0177-562e-a139-894ce27dcce6","fields":{"slug":"/2-4. Supporting procedures in computer HW/"},"frontmatter":{"title":"Supporting procedures in computer HW"}}},{"node":{"id":"739cb579-ef60-52a7-a84f-443e55d9fbd1","fields":{"slug":"/2-5. MIPS memory allocation & addressing/"},"frontmatter":{"title":"MIPS memory allocation & addressing"}}},{"node":{"id":"d87f2a2c-3c02-5edc-a6b6-e3433578add0","fields":{"slug":"/3-1. Addition and Subtraction/"},"frontmatter":{"title":"Addition and Subtraction"}}},{"node":{"id":"ebbf8c5b-a2bd-5064-a19f-6bdc33c974a4","fields":{"slug":"/3-2. Multiplication/"},"frontmatter":{"title":"Multiplication"}}},{"node":{"id":"b56fb71a-95a2-517d-9081-511b86a2f657","fields":{"slug":"/3-3. Division/"},"frontmatter":{"title":"Division"}}},{"node":{"id":"b937d69d-1c63-5872-b7ac-2b1fb0042cc4","fields":{"slug":"/4-1. Processor Overview/"},"frontmatter":{"title":"Processor Overview"}}},{"node":{"id":"ed6e43e5-a2df-59f6-be3d-c464f14c0530","fields":{"slug":"/4-2. Controlling a datapath/"},"frontmatter":{"title":"Controlling a datapath"}}},{"node":{"id":"e534d64c-5713-536b-8872-8333d169670a","fields":{"slug":"/4-3. A single-cycle datapath/"},"frontmatter":{"title":"A single-cycle datapath"}}},{"node":{"id":"a6701aa1-cb00-5e8e-b3d6-c536fab41e8b","fields":{"slug":"/4-4. Pipelining overview/"},"frontmatter":{"title":"Pipelining overview"}}},{"node":{"id":"1fcf23d9-0d39-57a9-aad6-d5354378e3e2","fields":{"slug":"/4-5. Handling hazards/"},"frontmatter":{"title":"Handling hazards"}}},{"node":{"id":"b3fc2b84-3be0-5b73-a339-cd42ef995cfc","fields":{"slug":"/4-6. Exceptions/"},"frontmatter":{"title":"Exceptions"}}},{"node":{"id":"579ead23-f5d4-5b7b-9a0f-125b86fd6678","fields":{"slug":"/5-1. Cache overview/"},"frontmatter":{"title":"Cache overview"}}},{"node":{"id":"54b7e29f-b59a-5f90-a9f7-a097eb9d71da","fields":{"slug":"/5-2. Improving cache performance/"},"frontmatter":{"title":"Improving cache performance"}}},{"node":{"id":"449ab907-aecb-5a4a-a143-ba9fe16f212b","fields":{"slug":"/5-3. Virtual memory Part 1/"},"frontmatter":{"title":"Virtual memory Part 1"}}},{"node":{"id":"f757510a-442a-55e1-a52e-52bea333756d","fields":{"slug":"/5-4. Virtual memory Part 2/"},"frontmatter":{"title":"Virtual memory Part 2"}}},{"node":{"id":"b67fe3d6-c0bd-51a6-a205-771b3f728a7d","fields":{"slug":"/interesting topic among sigchi 2024/"},"frontmatter":{"title":"sigchi 2024 관심 주제"}}},{"node":{"id":"56ad90a2-6eb5-5ba6-9785-36a854dc09c1","fields":{"slug":"/Respiratory Sound Database 유효성 분석/"},"frontmatter":{"title":"Respiratory Sound Database 유효성 분석"}}},{"node":{"id":"92c89d1b-e219-5dd0-af89-a3e7b13b5697","fields":{"slug":"/우아한테크코스_7기_BE_프리코스_1주차_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 프리코스 1주차 회고"}}},{"node":{"id":"c9026e49-4fc7-552d-9335-15b0e60c5753","fields":{"slug":"/우아한테크코스_7기_BE_프리코스_2주차_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 프리코스 2주차 회고"}}},{"node":{"id":"9f4f37ab-c5ad-5670-9f13-227e12f0ec1e","fields":{"slug":"/우아한테크코스_7기_BE_프리코스_3주차_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 프리코스 3주차 회고"}}},{"node":{"id":"455b72bd-1d68-5108-bc7a-c929a02cea02","fields":{"slug":"/우아한테크코스_7기_BE_프리코스_4주차_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 프리코스 4주차 회고"}}},{"node":{"id":"a20dad6a-f970-5208-83a9-7d6df1d9a35a","fields":{"slug":"/mobile spirometry 관련 자료/"},"frontmatter":{"title":"mobile spirometry 관련 논문"}}},{"node":{"id":"d49afac2-bf1e-5cc6-87f3-d722d867bcd4","fields":{"slug":"/스마트기기 내장 마이크기반 폐질환 진단기기 개발/"},"frontmatter":{"title":"논문 요약 - 스마트기기 내장 마이크기반 폐질환 진단기기 개발"}}},{"node":{"id":"f9ec4dcc-5e06-5216-a094-b4504c8d8028","fields":{"slug":"/spirosmart/"},"frontmatter":{"title":"논문 요약 - SpiroSmart: Using a Microphone to Measure\rLung Function on a Mobile Phone"}}},{"node":{"id":"05a766d5-0438-59c4-b291-59f60607988b","fields":{"slug":"/20241122_미팅내용정리/"},"frontmatter":{"title":"11/22 폐음연구 관련 미팅 내용 정리"}}},{"node":{"id":"a3f641d2-fd6a-5e57-bc47-29eaf0b499e3","fields":{"slug":"/ZeroPage_지금그때_2024/"},"frontmatter":{"title":"2024 ZeroPage 지금그때"}}},{"node":{"id":"0c07dd55-12a1-5d8c-9e6c-c8f4d40453b3","fields":{"slug":"/폐기능검사_지침_요약/"},"frontmatter":{"title":"폐음연구 - 폐기능검사 지침 요약"}}},{"node":{"id":"398c98b1-0496-536e-aeb5-088f063ab920","fields":{"slug":"/20241220_분당서울대병원_참관/"},"frontmatter":{"title":"12/20 분당서울대병원 폐기능 검사실 참관"}}},{"node":{"id":"59542b22-5d85-524d-b77e-014040ecebf7","fields":{"slug":"/면접스터디_1주차/"},"frontmatter":{"title":"DB 부하의 원인을해결해보자!"}}},{"node":{"id":"42cef58e-da81-5f6a-bb5c-6a19be803c29","fields":{"slug":"/면접스터디_2주차/"},"frontmatter":{"title":"엔제니어링 위크, 안전하게 마무리하기"}}},{"node":{"id":"3e910fb2-c4a4-517c-8d09-a86a5367e321","fields":{"slug":"/면접스터디_5주차/"},"frontmatter":{"title":"실시간 리스크 분석 시스템을 설계해보자"}}},{"node":{"id":"6d53960e-f1c1-5faf-a6af-0b6cfe885e73","fields":{"slug":"/면접스터디_4주차/"},"frontmatter":{"title":"신규 자동이체 시스템을 설계해보자"}}},{"node":{"id":"d230806d-cba5-546f-a219-923cce71aa95","fields":{"slug":"/lead_onboarding/"},"frontmatter":{"title":null}}},{"node":{"id":"85dc5324-9611-5ff8-a0f1-bf6a22eb4335","fields":{"slug":"/daily_easy_english_expression_summary/"},"frontmatter":{"title":"Daily Easy English Expression"}}},{"node":{"id":"220baefb-7bd0-5e52-8bac-48923af791be","fields":{"slug":"/우테코 git/"},"frontmatter":{"title":"우아한테크코스 GitHub"}}},{"node":{"id":"0e851456-1616-5a3c-8d8f-2dcc37e1f538","fields":{"slug":"/우테코_레벨3_정리/"},"frontmatter":{"title":null}}},{"node":{"id":"3eb58153-afe0-5d52-a81f-2cb59b028f11","fields":{"slug":"/우아한테크코스 레벨1 고민거리와 자료들/"},"frontmatter":{"title":"우아한테크코스 레벨1 고민거리와 자료들"}}},{"node":{"id":"ea3c6223-2692-5c98-bb92-e2dc93e551c1","fields":{"slug":"/우아한테크코스_7기_BE_레벨1_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 레벨1 회고"}}},{"node":{"id":"a1c42254-4961-53e0-88bc-06cf204ce7f6","fields":{"slug":"/spring_mvc_dispatcherservlet/"},"frontmatter":{"title":"Understanding DispatcherServlet in Spring MVC"}}},{"node":{"id":"a2bf7040-effd-5427-8326-a725ef62fff1","fields":{"slug":"/how_spring_injects_httpsession/"},"frontmatter":{"title":"How Spring Injects HttpSession"}}},{"node":{"id":"e971a6f2-daaa-5ed1-a9aa-f99c52972162","fields":{"slug":"/우아한테크코스_7기_BE_레벨2_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 레벨2 회고"}}},{"node":{"id":"e9fec65a-dfe8-5e60-ba50-fd4cf47e1536","fields":{"slug":"/우아한테크코스_7기_BE_레벨3_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 레벨3 회고"}}},{"node":{"id":"952f3584-abf4-5f06-bb6a-b91a35650fbd","fields":{"slug":"/면접스터디_3주차/"},"frontmatter":{"title":"지연의 원인을 찾아라"}}},{"node":{"id":"5b183fb5-17b0-56a7-8ba1-0335bc3accdd","fields":{"slug":"/coffeeshout_redis_stream/"},"frontmatter":{"title":"커피빵(CoffeeShout) Race Condition 해결"}}}]},"previous":{"fields":{"slug":"/3-2. Multiplication/"},"frontmatter":{"title":"Multiplication"}},"next":{"fields":{"slug":"/4-1. Processor Overview/"},"frontmatter":{"title":"Processor Overview"}}},"pageContext":{"id":"b56fb71a-95a2-517d-9081-511b86a2f657","series":null,"previousPostId":"ebbf8c5b-a2bd-5064-a19f-6bdc33c974a4","nextPostId":"b937d69d-1c63-5872-b7ac-2b1fb0042cc4"}},"staticQueryHashes":[],"slicesMap":{}}