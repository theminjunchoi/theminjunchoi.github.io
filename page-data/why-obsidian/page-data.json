{"componentChunkName":"component---src-templates-post-jsx","path":"/why-obsidian/","result":{"data":{"site":{"siteMetadata":{"title":"minjun.blog"}},"markdownRemark":{"id":"25f4be38-5d7e-533d-9343-d399890cd14e","excerpt":"항상 기록의 중요성을 느끼고 있었다. 내가 어떤 걸 배우고 해냈다라는 걸 뽑내기 보다는 내 생각들과 학습한 내용들을 구조화해서 나중에 다시 쉽게 찾아볼 수 있도록, 그리고 그게 또 하나의 내 자산이 되기를 원했다. 그래서 제작년부터 이런 저런 툴을 사용해보며 블로깅을 해왔는데 결국은 하나같이 다 마음에 들지 않았다. 생산성 내가 원한 건 생산성 딱 하나였…","html":"<p>항상 기록의 중요성을 느끼고 있었다. 내가 어떤 걸 배우고 해냈다라는 걸 뽑내기 보다는 내 생각들과 학습한 내용들을 구조화해서 나중에 다시 쉽게 찾아볼 수 있도록, 그리고 그게 또 하나의 내 자산이 되기를 원했다. 그래서 제작년부터 이런 저런 툴을 사용해보며 블로깅을 해왔는데 결국은 하나같이 다 마음에 들지 않았다.</p>\n<h2>생산성</h2>\n<p>내가 원한 건 생산성 딱 하나였다. 블로깅을 하는 유일한 목적이 결국은 스쳐지나가는 생각들을 메모해두기 위함인데 기존에 사용하던 <a href=\"https://github.com/theminjunchoi/ex-blog\">Nuxt로 개발된 블로그</a>는 생산성 측면에서 부족했던 것 같다. 글 하나를 쓰기 위해 노트북을 열어야했고 괜히 나도 있어보이는 글을 쓰기 위해 억지로 분량을 늘리고 이쁜 문장들을 찾았다. 공부 내용을 기록할 때도 학습에 초점을 둔 기록이기보단 정리에 초점을 둔 기록들 투성이었다. 지금 생각해보면 모든 요소 하나하나가 너무 많은 시간을 잡아먹는 것 같았다. 그러던 와중에 obsidian을 발견했다.</p>\n<h2>현재 블로그</h2>\n<h3>obsidian</h3>\n<p>세컨드브레인이라는 책을 읽다가 obsidian이라는 툴을 알게 됐다. 글과 글 사이에 관계를 나타내기 좋아서 사용하기 시작했는데 여러 플러그인들도 많아서 내가 사용하는 용도에 맞게 커스텀하기 좋은 것 같다. 플러그인은 아래의 것들을 사용하고 있다.</p>\n<ul>\n<li>Omnisearch</li>\n<li>Templater</li>\n<li>Update time on edit</li>\n<li>Outliner</li>\n<li>Checklist</li>\n<li>Calendar</li>\n<li>MindMap</li>\n<li>Obsidian git</li>\n</ul>\n<h3>Gatsby</h3>\n<p>기존 블로그는 Nuxt로 개발된 정적 웹페이지였다. Nuxt에서 Gatsby로 넘어간 이유는 2가지다.</p>\n<p>첫째는 원래 사용하던 블로그는 Nuxt2로 개발되었는데 내가 군대를 간 사이에 Nuxt3가 나왔다. 처음에는 마이그레이션을 해보려고 해봤는데 생각만큼 그리 단순하지 않았다. 가장 큰 문제는 아래에서도 간단하게 언급하겠지만 Nuxt가 버전업이 되면서 이를 지원하던 노드 모듈들도 이에 맞게 수정이 되어야하는데 vue 생태계가 그렇게 반응이 빠르지 않았다. 그래서 내가 마이그레이션을 해도 기존에 쓰던 기능들을 못 쓰게 되고 내가 노드 모듈을 직접 건드려보기도 했는데 도저히 휴가 때 할 수 있는 양이 아니었다.</p>\n<p>두 번째 이유는 단순히 vue 기반의 프레임워크랑 react 기반의 프레임워크를 비교해보고 싶었다. 여러 프레임워크를 쓰면서 나한테 맞고 편한 프레임워크를 찾아보고 싶었고 얼마나 많이 다른지 단순 호기심에서 시작했다. 좀 더 써봐야 알겠지만 프레임워크를 지원하는 생태계는 역시 vue보단 react가 좀 더 좋은 것 같다. 지원하는 노드 모듈들이 많은 것도 틀린 말은 아닌데 그것보다는 프레임워크의 버전업을 노드 모듈들이 빠르게 반응해서 맞춰주는 건 react가 더 편한 것 같다. 사실 차이가 그렇게 크지는 않겠지만 그래도 아직 익숙한 건 아직까지 vue인 것 같다.</p>\n<h3>동기화: Working Copy</h3>\n<p>obsidian에서 obsidian sync라는 기능으로 유료 구독제를 결제하면 여러 기기간의 동기화를 지원해주고 있다. 하지만 나는 Working copy라는 어플로 노트북과 아이패드, 아이폰을 동기화 해주고 있다.  결국은 Github로 동기화를 해주고 있는 건데 조금은 불편할지라도 내가 원할 때 커밋을 올리고 버전관리가 더 쉬울 것 같아서 이렇게 사용하고 있다.</p>","frontmatter":{"title":"기존 블로그 대신 Obsidian을 택한 이유","date":"2024년 01월 10일 13:01","updated":"2024년 10월 20일 18:10","tags":["obsidian"],"series":null},"fields":{"slug":"/why-obsidian/","readingTime":{"minutes":5.255}}},"seriesList":{"edges":[{"node":{"id":"cbe16ee9-7b41-5ddd-a23e-2bfdaa98940d","fields":{"slug":"/nuxt-katex/"},"frontmatter":{"title":"Nuxt content에 Mathtype 사용하기"}}},{"node":{"id":"a827654c-d261-5db3-bff4-d98d76aadbe0","fields":{"slug":"/after-jigeumgeuddae/"},"frontmatter":{"title":"2022 ZeroPage 지금그때"}}},{"node":{"id":"46aaed20-059b-5526-8cea-067a9491f32c","fields":{"slug":"/readme/"},"frontmatter":{"title":"README"}}},{"node":{"id":"25f4be38-5d7e-533d-9343-d399890cd14e","fields":{"slug":"/why-obsidian/"},"frontmatter":{"title":"기존 블로그 대신 Obsidian을 택한 이유"}}},{"node":{"id":"5d5d6131-4e89-5c1e-91ba-e66f285f51b1","fields":{"slug":"/0-1. CA Intro/"},"frontmatter":{"title":"Computer Architecture Intro"}}},{"node":{"id":"0b650b2c-e1d8-533f-979c-7c4a2f177084","fields":{"slug":"/0-2. CA Overview/"},"frontmatter":{"title":"CA Overview"}}},{"node":{"id":"b47b70aa-e8ac-5077-9959-1e864d435bb6","fields":{"slug":"/1-1. Defining Performance/"},"frontmatter":{"title":"Defining Performance"}}},{"node":{"id":"68f03ffa-5893-565d-840e-f0f6ae87f5c9","fields":{"slug":"/1-2. Measuring Performance/"},"frontmatter":{"title":"Measuring Performance"}}},{"node":{"id":"85e63ee9-5665-538b-ac43-635e8220e2d2","fields":{"slug":"/2-1. Designing principles 1~3 of MIPS ISA/"},"frontmatter":{"title":"Design principles 1~3 of MIPS ISA"}}},{"node":{"id":"2e0c3819-8874-5c1d-a775-2a6a841b21b5","fields":{"slug":"/2-2. Design principles 4 of MIPS ISA/"},"frontmatter":{"title":"Design principles 4 of MIPS ISA"}}},{"node":{"id":"0c2c4f4c-9eb8-50df-891b-1365303231f7","fields":{"slug":"/2-3. Representing Instructions in computer/"},"frontmatter":{"title":"Representing Instructions in computer"}}},{"node":{"id":"4007a96e-86f2-5259-a70c-a65c3314bfaf","fields":{"slug":"/2-4. Supporting procedures in computer HW/"},"frontmatter":{"title":"Supporting procedures in computer HW"}}},{"node":{"id":"a00646d3-2559-556c-8916-2abc285e908f","fields":{"slug":"/2-5. MIPS memory allocation & addressing/"},"frontmatter":{"title":"MIPS memory allocation & addressing"}}},{"node":{"id":"dda07f05-3192-506d-b828-88e695f76629","fields":{"slug":"/3-1. Addition and Subtraction/"},"frontmatter":{"title":"Addition and Subtraction"}}},{"node":{"id":"8c6491f5-b0a8-5e0e-b921-e7b272121ee3","fields":{"slug":"/3-2. Multiplication/"},"frontmatter":{"title":"Multiplication"}}},{"node":{"id":"6f5284e4-f1a3-599c-8a4a-ddb05289eb05","fields":{"slug":"/3-3. Division/"},"frontmatter":{"title":"Division"}}},{"node":{"id":"6abd7845-2b09-5035-9dac-4646df83dfbe","fields":{"slug":"/4-1. Processor Overview/"},"frontmatter":{"title":"Processor Overview"}}},{"node":{"id":"d464a6fe-8125-5fc7-a055-0af843f54235","fields":{"slug":"/4-2. Controlling a datapath/"},"frontmatter":{"title":"Controlling a datapath"}}},{"node":{"id":"ba9849bc-e776-5a83-993e-4e82afc0729e","fields":{"slug":"/4-3. A single-cycle datapath/"},"frontmatter":{"title":"A single-cycle datapath"}}},{"node":{"id":"182c0349-da93-5b44-bfee-5e51362c5509","fields":{"slug":"/4-4. Pipelining overview/"},"frontmatter":{"title":"Pipelining overview"}}},{"node":{"id":"f08deb14-30ad-595b-8c9d-d793785b9ce0","fields":{"slug":"/4-5. Handling hazards/"},"frontmatter":{"title":"Handling hazards"}}},{"node":{"id":"0f491438-cb0c-53b7-80ac-81d3c8508373","fields":{"slug":"/4-6. Exceptions/"},"frontmatter":{"title":"Exceptions"}}},{"node":{"id":"71a9c3b8-4bb1-5ede-aead-5834bff20a32","fields":{"slug":"/5-1. Cache overview/"},"frontmatter":{"title":"Cache overview"}}},{"node":{"id":"f46d6482-1ff7-5199-b386-b831df7f00fd","fields":{"slug":"/5-2. Improving cache performance/"},"frontmatter":{"title":"Improving cache performance"}}},{"node":{"id":"06867ecb-c90b-5f7e-b053-88ac48bd719c","fields":{"slug":"/5-3. Virtual memory Part 1/"},"frontmatter":{"title":"Virtual memory Part 1"}}},{"node":{"id":"ed0e2b20-921b-5a3b-8aad-9f84da9e48ec","fields":{"slug":"/5-4. Virtual memory Part 2/"},"frontmatter":{"title":"Virtual memory Part 2"}}},{"node":{"id":"87ccd6ac-f6b1-5543-8b35-64c214bd6af6","fields":{"slug":"/interesting topic among sigchi 2024/"},"frontmatter":{"title":"sigchi 2024 관심 주제"}}},{"node":{"id":"2bb69d39-3a4c-581b-932c-2ae84f33b664","fields":{"slug":"/Respiratory Sound Database 유효성 분석/"},"frontmatter":{"title":"Respiratory Sound Database 유효성 분석"}}}]},"previous":{"fields":{"slug":"/retrospect-2023/"},"frontmatter":{"title":"2023년 회고"}},"next":{"fields":{"slug":"/retrospect-2024-1/"},"frontmatter":{"title":"2024년 상반기 회고"}}},"pageContext":{"id":"25f4be38-5d7e-533d-9343-d399890cd14e","series":null,"previousPostId":"d49f9c60-6010-5f76-81e3-87455b756b80","nextPostId":"2ca0600f-1f37-5abc-83e8-8205df778c83"}},"staticQueryHashes":[],"slicesMap":{}}