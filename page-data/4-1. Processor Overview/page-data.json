{"componentChunkName":"component---src-templates-post-jsx","path":"/4-1. Processor Overview/","result":{"data":{"site":{"siteMetadata":{"title":"minjun.blog"}},"markdownRemark":{"id":"b937d69d-1c63-5872-b7ac-2b1fb0042cc4","excerpt":"contents: 0-1. CA Intro Case I will focus on handling a subset of core MIPS instructions (MIPS subset) The arithmetic-logical instructions: , , , ,  The memory-reference instructions: ,  The conditio…","html":"<p>contents: <a href=\"/0-1.%20CA%20Intro\" data-wiki-link=\"true\">0-1. CA Intro</a></p>\n<h2>Case</h2>\n<p>I will focus on handling a subset of core MIPS instructions (MIPS subset)</p>\n<ul>\n<li>\n<p>The arithmetic-logical instructions: <code class=\"language-text\">add</code>, <code class=\"language-text\">sub</code>, <code class=\"language-text\">and</code>, <code class=\"language-text\">or</code>, <code class=\"language-text\">slt</code></p>\n</li>\n<li>\n<p>The memory-reference instructions: <code class=\"language-text\">lw</code>, <code class=\"language-text\">sw</code></p>\n</li>\n<li>\n<p>The conditional instructions: <code class=\"language-text\">beq</code>, <code class=\"language-text\">jump</code></p>\n</li>\n</ul>\n<h2>Logic design basics</h2>\n<p>In the MIPS implementation, the datapath elements consist of</p>\n<ul>\n<li><strong>Combinational</strong> elements</li>\n</ul>\n<p>    - Operate on data values</p>\n<p>    - Given inputs, a combinational element produces outputs</p>\n<p>    - e.g., ALU(Arithmetic Logic Unit), Adder, Multiplexer, AND-gate</p>\n<ul>\n<li><strong>State (sequential)</strong> elements</li>\n</ul>\n<p>    - Contain state</p>\n<p>    - They have some internal storage</p>\n<p>    - e.g., instruction and data memory, registers</p>\n</br>\n<p>Combinational elements work with state elements</p>\n<ul>\n<li>\n<p>Getting inputs from state elements</p>\n</li>\n<li>\n<p>Giving outputs to state elements</p>\n</li>\n</ul>\n<h2>Clocking methodology</h2>\n<p>When data can be read and written is determined relative to the clock </br></p>\n<p>In this book, we assume <strong>\"Positive edge-triggered clocking methodology\"</strong></p>\n<p>Combinational elements works with state elements </br></p>\n<p><strong>In a single clock cycle = between clock edges = between rising edges</strong></p>\n<ul>\n<li>\n<p>At one rising edge, combinational elements read inputs from state elements</p>\n</li>\n<li>\n<p>Before the next rising edge, combinational elements complete operations and produce outputs</p>\n</li>\n<li>\n<p>At the next rising edge, state elements are updated with the outputs</p>\n</li>\n<li>\n<p><strong>The longest delay determines clock period</strong></p>\n</li>\n</ul>\n<p><img src=\"/attachments/01%204.jpg\" alt=\"01 4.jpg\"></p>\n</br>\n<h3>State elements with two inputs</h3>\n<p><strong>State elements (e.g., registers) take two inputs: update data and a clock signal</strong> </br></p>\n<p>Based on the clock signal, it is determined when to update the data</p>\n<p>In positive edge-triggered clocking methodology, </br></p>\n<p>Update the data at rising edges (when the clock signal changes from 0 to 1)\n<img src=\"/attachments/02%204.jpg\" alt=\"02 4.jpg\">\n</br></p>\n<h3>State elements with three inputs</h3>\n<p><strong>State elements take three inputs: update data and a clock signal with write control</strong> </br></p>\n<p>Based on the clock signal and the write control, it is determined when to update the data</p>\n<p>In positive edge-triggered clocking methodology, </br></p>\n<p>Update the data at rising edges + <strong>when the write control input is 1</strong></p>\n<p><img src=\"/attachments/03%203.jpg\" alt=\"03 3.jpg\"></p>","frontmatter":{"title":"Processor Overview","date":"2024년 08월 15일 12:08","updated":"2025년 07월 10일 15:07","tags":["컴퓨터구조","study"],"series":null},"fields":{"slug":"/4-1. Processor Overview/","readingTime":{"minutes":1.695}}},"seriesList":{"edges":[{"node":{"id":"42bf5959-adba-55bb-a6ed-6347a22b7298","fields":{"slug":"/nuxt-katex/"},"frontmatter":{"title":"Nuxt content에 Mathtype 사용하기"}}},{"node":{"id":"7fc729dc-de56-5f85-a363-123afedc0e55","fields":{"slug":"/ZeroPage_지금그때_2022/"},"frontmatter":{"title":"2022 ZeroPage 지금그때"}}},{"node":{"id":"f8f7470f-000c-592f-9791-14400e103d5a","fields":{"slug":"/readme/"},"frontmatter":{"title":"README"}}},{"node":{"id":"d5272324-e922-5bdd-a8c3-90c1acb79b2f","fields":{"slug":"/why-obsidian/"},"frontmatter":{"title":"기존 블로그 대신 Obsidian을 택한 이유"}}},{"node":{"id":"4104488d-e257-5e42-896e-87f41761a795","fields":{"slug":"/0-1. CA Intro/"},"frontmatter":{"title":"Computer Architecture Intro"}}},{"node":{"id":"30fcde9e-20bd-5555-9560-ca0136d7d30f","fields":{"slug":"/0-2. CA Overview/"},"frontmatter":{"title":"CA Overview"}}},{"node":{"id":"6ce32435-2247-5f01-b7ae-30c6a72bdb9e","fields":{"slug":"/1-1. Defining Performance/"},"frontmatter":{"title":"Defining Performance"}}},{"node":{"id":"a9a2aee1-bbfd-5d10-984d-8ccc1473c416","fields":{"slug":"/1-2. Measuring Performance/"},"frontmatter":{"title":"Measuring Performance"}}},{"node":{"id":"62397c00-742b-5787-91b0-ac2bf4f89c1b","fields":{"slug":"/2-1. Designing principles 1~3 of MIPS ISA/"},"frontmatter":{"title":"Design principles 1~3 of MIPS ISA"}}},{"node":{"id":"4af0bcf6-9fee-5cf3-b1c9-b7b5835d8770","fields":{"slug":"/2-2. Design principles 4 of MIPS ISA/"},"frontmatter":{"title":"Design principles 4 of MIPS ISA"}}},{"node":{"id":"a5f532e7-7d9b-5055-b14a-aaed0a9db9d2","fields":{"slug":"/2-3. Representing Instructions in computer/"},"frontmatter":{"title":"Representing Instructions in computer"}}},{"node":{"id":"d9e769a8-0177-562e-a139-894ce27dcce6","fields":{"slug":"/2-4. Supporting procedures in computer HW/"},"frontmatter":{"title":"Supporting procedures in computer HW"}}},{"node":{"id":"739cb579-ef60-52a7-a84f-443e55d9fbd1","fields":{"slug":"/2-5. MIPS memory allocation & addressing/"},"frontmatter":{"title":"MIPS memory allocation & addressing"}}},{"node":{"id":"d87f2a2c-3c02-5edc-a6b6-e3433578add0","fields":{"slug":"/3-1. Addition and Subtraction/"},"frontmatter":{"title":"Addition and Subtraction"}}},{"node":{"id":"ebbf8c5b-a2bd-5064-a19f-6bdc33c974a4","fields":{"slug":"/3-2. Multiplication/"},"frontmatter":{"title":"Multiplication"}}},{"node":{"id":"b56fb71a-95a2-517d-9081-511b86a2f657","fields":{"slug":"/3-3. Division/"},"frontmatter":{"title":"Division"}}},{"node":{"id":"b937d69d-1c63-5872-b7ac-2b1fb0042cc4","fields":{"slug":"/4-1. Processor Overview/"},"frontmatter":{"title":"Processor Overview"}}},{"node":{"id":"ed6e43e5-a2df-59f6-be3d-c464f14c0530","fields":{"slug":"/4-2. Controlling a datapath/"},"frontmatter":{"title":"Controlling a datapath"}}},{"node":{"id":"e534d64c-5713-536b-8872-8333d169670a","fields":{"slug":"/4-3. A single-cycle datapath/"},"frontmatter":{"title":"A single-cycle datapath"}}},{"node":{"id":"a6701aa1-cb00-5e8e-b3d6-c536fab41e8b","fields":{"slug":"/4-4. Pipelining overview/"},"frontmatter":{"title":"Pipelining overview"}}},{"node":{"id":"1fcf23d9-0d39-57a9-aad6-d5354378e3e2","fields":{"slug":"/4-5. Handling hazards/"},"frontmatter":{"title":"Handling hazards"}}},{"node":{"id":"b3fc2b84-3be0-5b73-a339-cd42ef995cfc","fields":{"slug":"/4-6. Exceptions/"},"frontmatter":{"title":"Exceptions"}}},{"node":{"id":"579ead23-f5d4-5b7b-9a0f-125b86fd6678","fields":{"slug":"/5-1. Cache overview/"},"frontmatter":{"title":"Cache overview"}}},{"node":{"id":"54b7e29f-b59a-5f90-a9f7-a097eb9d71da","fields":{"slug":"/5-2. Improving cache performance/"},"frontmatter":{"title":"Improving cache performance"}}},{"node":{"id":"449ab907-aecb-5a4a-a143-ba9fe16f212b","fields":{"slug":"/5-3. Virtual memory Part 1/"},"frontmatter":{"title":"Virtual memory Part 1"}}},{"node":{"id":"f757510a-442a-55e1-a52e-52bea333756d","fields":{"slug":"/5-4. Virtual memory Part 2/"},"frontmatter":{"title":"Virtual memory Part 2"}}},{"node":{"id":"b67fe3d6-c0bd-51a6-a205-771b3f728a7d","fields":{"slug":"/interesting topic among sigchi 2024/"},"frontmatter":{"title":"sigchi 2024 관심 주제"}}},{"node":{"id":"56ad90a2-6eb5-5ba6-9785-36a854dc09c1","fields":{"slug":"/Respiratory Sound Database 유효성 분석/"},"frontmatter":{"title":"Respiratory Sound Database 유효성 분석"}}},{"node":{"id":"92c89d1b-e219-5dd0-af89-a3e7b13b5697","fields":{"slug":"/우아한테크코스_7기_BE_프리코스_1주차_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 프리코스 1주차 회고"}}},{"node":{"id":"c9026e49-4fc7-552d-9335-15b0e60c5753","fields":{"slug":"/우아한테크코스_7기_BE_프리코스_2주차_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 프리코스 2주차 회고"}}},{"node":{"id":"9f4f37ab-c5ad-5670-9f13-227e12f0ec1e","fields":{"slug":"/우아한테크코스_7기_BE_프리코스_3주차_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 프리코스 3주차 회고"}}},{"node":{"id":"455b72bd-1d68-5108-bc7a-c929a02cea02","fields":{"slug":"/우아한테크코스_7기_BE_프리코스_4주차_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 프리코스 4주차 회고"}}},{"node":{"id":"a20dad6a-f970-5208-83a9-7d6df1d9a35a","fields":{"slug":"/mobile spirometry 관련 자료/"},"frontmatter":{"title":"mobile spirometry 관련 논문"}}},{"node":{"id":"d49afac2-bf1e-5cc6-87f3-d722d867bcd4","fields":{"slug":"/스마트기기 내장 마이크기반 폐질환 진단기기 개발/"},"frontmatter":{"title":"논문 요약 - 스마트기기 내장 마이크기반 폐질환 진단기기 개발"}}},{"node":{"id":"f9ec4dcc-5e06-5216-a094-b4504c8d8028","fields":{"slug":"/spirosmart/"},"frontmatter":{"title":"논문 요약 - SpiroSmart: Using a Microphone to Measure\rLung Function on a Mobile Phone"}}},{"node":{"id":"05a766d5-0438-59c4-b291-59f60607988b","fields":{"slug":"/20241122_미팅내용정리/"},"frontmatter":{"title":"11/22 폐음연구 관련 미팅 내용 정리"}}},{"node":{"id":"a3f641d2-fd6a-5e57-bc47-29eaf0b499e3","fields":{"slug":"/ZeroPage_지금그때_2024/"},"frontmatter":{"title":"2024 ZeroPage 지금그때"}}},{"node":{"id":"0c07dd55-12a1-5d8c-9e6c-c8f4d40453b3","fields":{"slug":"/폐기능검사_지침_요약/"},"frontmatter":{"title":"폐음연구 - 폐기능검사 지침 요약"}}},{"node":{"id":"398c98b1-0496-536e-aeb5-088f063ab920","fields":{"slug":"/20241220_분당서울대병원_참관/"},"frontmatter":{"title":"12/20 분당서울대병원 폐기능 검사실 참관"}}},{"node":{"id":"ae45b7bc-f495-577f-a7e1-071a99f82620","fields":{"slug":"/우테코 git/"},"frontmatter":{"title":"우아한테크코스 GitHub"}}},{"node":{"id":"85dc5324-9611-5ff8-a0f1-bf6a22eb4335","fields":{"slug":"/daily_easy_english_expression_summary/"},"frontmatter":{"title":"Daily Easy English Expression"}}},{"node":{"id":"3eb58153-afe0-5d52-a81f-2cb59b028f11","fields":{"slug":"/우아한테크코스 레벨1 고민거리와 자료들/"},"frontmatter":{"title":"우아한테크코스 레벨1 고민거리와 자료들"}}},{"node":{"id":"ea3c6223-2692-5c98-bb92-e2dc93e551c1","fields":{"slug":"/우아한테크코스_7기_BE_레벨1_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 레벨1 회고"}}},{"node":{"id":"a1c42254-4961-53e0-88bc-06cf204ce7f6","fields":{"slug":"/spring_mvc_dispatcherservlet/"},"frontmatter":{"title":"Understanding DispatcherServlet in Spring MVC"}}},{"node":{"id":"a2bf7040-effd-5427-8326-a725ef62fff1","fields":{"slug":"/how_spring_injects_httpsession/"},"frontmatter":{"title":"How Spring Injects HttpSession"}}},{"node":{"id":"e971a6f2-daaa-5ed1-a9aa-f99c52972162","fields":{"slug":"/우아한테크코스_7기_BE_레벨2_회고/"},"frontmatter":{"title":"우아한테크코스 7기 BE 레벨2 회고"}}},{"node":{"id":"0e15e05c-846f-52df-b765-b0471b66d7e5","fields":{"slug":"/how_spring_handle_websocket/"},"frontmatter":{"title":"How Spring Handle WebSocket"}}}]},"previous":{"fields":{"slug":"/3-3. Division/"},"frontmatter":{"title":"Division"}},"next":{"fields":{"slug":"/4-2. Controlling a datapath/"},"frontmatter":{"title":"Controlling a datapath"}}},"pageContext":{"id":"b937d69d-1c63-5872-b7ac-2b1fb0042cc4","series":null,"previousPostId":"b56fb71a-95a2-517d-9081-511b86a2f657","nextPostId":"ed6e43e5-a2df-59f6-be3d-c464f14c0530"}},"staticQueryHashes":[],"slicesMap":{}}